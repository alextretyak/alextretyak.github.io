----------------------------------------------------------------
2025-01-28 09:41:18 | pereklyuchatel | Неслучайный читатель

(""Если менять поведение по умолчанию внутри переключателя на противоположное, то и ключевые слова можно поменять на противоположные. Был (++break++) — сделать (++continue++)."")
Проблема с двусмысленностью повторится, просто теперь с новым ключевым словом.
(==
 for ( ... )
    switch ( ... )
       case: ...
           ...
           break/contunue;
==)
К чему относится (++break/contunue++) -- к циклу или переключателю? И здесь та же самая двусмысленность:
(==
 switch ( ... )
    case: ...
        ...
        for ( ... )
           break/contunue;
==)
Конечно, можно ввести правило, что ключевое слово относится к ближайшему циклу/переключателю. Но тогда как отнести не к ближайшему, а следующему? Писать (++break 2/contunue 2++)?
----------------------------------------------------------------
2025-01-28 20:48:00 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Бурановский дедушка

Статья Олега Макаренко двухлетней давности (https://dzen.ru/a/Y8ZuRbK0MBI5ATX-?sid=114506491715361612) о том, что создать клон  Windows не получится.
(""Чтобы сделать аналог Windows, огромной операционной системы, надо потратить огромные же ресурсы. В Микрософте работает 220 тысяч человек, его доходы измеряются сотнями миллиардов долларов. При необходимости Микрософт мог бы потянуть военный бюджет, как у России, и корпорация всё ещё работала бы в плюс. 

...как минимум 5-10 лет разработка серьёзного продукта займёт. За это время Микрософт ещё продвинется вперёд, и нам снова придётся его догонять. Таким образом, готовый продукт мы получим далеко не сразу, наши вложения будут надолго заморожены.

Дальше придётся сделать нашу новую систему совместимой со всей огромной экосистемой Windows — от текстовых редакторов до драйверов видеокарт. На это также уйдут огромные ресурсы, так как сторонних программ — бесчисленное количество, и под каждую из них наши Окна придётся дорабатывать напильником. Микрософт этих расходов не несёт — условный разработчик принтера сам прикладывает усилия, чтобы его принтер нормально работал под Windows. Но если мы захотим, чтобы этот принтер работал ещё и под Окнами, нам придётся отлаживать всё самостоятельно, так как разработчику принтера будет на нас наплевать.

Дальше мы обнаружим, что рынок уже занят, так что продать Окна мы… не можем. Покупатели просто не захотят покупать нашу операционную систему, так как им и на Windows нормально, а смена операционной системы для них — излишняя головная боль. Какие-то программы на новой системе не запустятся, какое-то железо будет с ней несовместимо, чему-то придётся переучиваться… ну, серьёзно, зачем оно надо? Если клиент готов платить за операционную систему, то ему, наверное, хочется не ковыряться в чужих багах, а работать, зарабатывать деньги. Более того, Микрософт старается создавать неформальные связи со своими клиентами [«otkat», по-русски говоря], так что при попытке предложить ответственному за закупки свою альтернативу, вы имеете шанс услышать в ответ издевательский смех.

Следовательно, нам останется только распространять наши Окна бесплатно. Но тут всё уже занято вторым монстром — системой Линукс, которая развивается вот уже 32 года, и которую многие воспринимают как «Windows для бедных»...

На рынке планеты Земля в 2023 просто нет места для платного аналога Windows. Если какой-нибудь чудак вбухает огромные ресурсы в создание Окон, он не сможет продать достаточно экземпляров, чтобы окупить хотя бы 1% вложенных в разработку средств. Государственная программа по лобовому финансированию отечественной ОС тоже провалится — планово-убыточные проекты неизбежно обрастают балластом бездельников-коррупционеров, которые сначала выдавливают из своей среды сколько-нибудь способных разработчиков, а потом окончательно отправляют проект на дно. Рекомендую ознакомиться с перечнем попыток создать «убийцу Википедии» за государственный счёт — там были вполне характерные сценарии."")
Думаю, с этим мнением можно поспорить. Макаренко не имеет ни опыта разработки ОС, ни опыта руководства большими проектами. Хотя у меня тоже нет. Но в этом мы равны. Возражения:

(..Если на разработку нужны огромные ресурсы, то расходы можно поделить. Просто нужно вступить в кооперацию со странами БРИКС, привлечь других заинтересованных. Наверное список стран может продолжить любой, начиная с Кубы с Венесуэлой...)
(..Если рассуждать по-государственному, а не с точки зрения бизнеса, то плакаться о долгой заморозке средств не стоит. Когда-то в Трансибе бизнесмены тоже не видели смысла. А государственники смысл увидели и не ошиблись...)
(..Для решения проблем совместимости надо привлечь ИИ. Если Windows не имеет проблем совместимости, то пусть ИИ исследует его двоичный код и сделает его преобразование в текст на языке высокого уровня. Только не в код на Си и C++, а в код на каком-нибудь безопасном языке, может быть Rust...)
(..На «останется только распространять наши Окна бесплатно» можно ответить тем, что рынок стран БРИКС превосходит рынок «золотого миллиарда». Как минимум, можно рассчитывать на госзакупки стран БРИКС и других союзников...)
(..Если есть предчувствия коррупции, то надо попросить китайских товарищей рассказать об их опыте борьбы с такими вещами...)
(..И последнее: существенная доля разработок Майкрософт делается в Индии. Поэтому переманивание индийских сотрудников поможет в раскрытии «тёмных» мест в Windows. И поможет преодолеть те же проблемы совместимости...)
----------------------------------------------------------------
2025-01-28 21:09:02 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(""Думаю, с этим мнением можно поспорить"")Я вижу это так. Каждому хакеру выдается по одному файлу Windows - и он дизассемблирует и документирует его. Результаты удач/неудач фиксируются в некоторой экспертной системе. Через некоторое время мы имеем "ИИ", способный понять Мастдай сам и объяснить другим. Не говоря уже о том, чтобы собирать его "по нужде", подобно Linux. Мелкогибкие уйдут вперед? Да пусть идут, если мы сможем отследить это движение. Для этого нужно "чуть-чуть":
1. изобрести саморасширяющуюся экспертную систему;
2. полностью пересмотреть систему образования и мотивации компьютерных специалистов.
----------------------------------------------------------------
2025-01-28 22:36:51 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Деньги на WWWетер

(""Каждому хакеру выдается по одному файлу Windows — и он дизассемблирует и документирует его."")
Не получится так, что число файлов сильно превышает число тех, кто что-то понимает в коде x86?
----------------------------------------------------------------
2025-01-28 22:46:53 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(""Не получится так, что число файлов сильно превышает число тех, кто что-то понимает в коде x86?"")Поэтому и добавил п.2.
----------------------------------------------------------------
2025-01-29 00:25:14 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | MihalNik

[q]Но если мы захотим, чтобы этот принтер работал ещё и под Окнами, нам придётся отлаживать всё самостоятельно, так как разработчику принтера будет на нас наплевать.[/q]
Так можно и перфоленты и с перфокартами захотеть.
В приципе, дальше можно уже не читать. Там и Эпл не существует, и, главное ни слова про то, что в мейнстриме куча позорных корпоративных изделий одновременно с кучей бесплатных наколенных поделок буквально за пару месяцев, а то и недель/дней, 1-2 человеком.
Куда уж нам до богов конкурентоспособности, впиливших за несколько десятилетий даже кириллицу в свои ЯП!

[q]Если на разработку нужны огромные ресурсы, то расходы можно поделить.[/q]
Делят не расходы, а рынки. Это первооснова.

[q]Я вижу это так. Каждому хакеру выдается по одному файлу Windows — и он дизассемблирует и документирует его.[/q]
И блюет... документирует и блюет...
----------------------------------------------------------------
2025-01-29 00:42:40 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(""И блюет..."")Зависит от формата экспертной системы. Это может быть достаточно веселой игрой. Типа Gobliiins.
----------------------------------------------------------------
2025-02-02 13:53:08 | o-prevraschenii-kibernetiki-v-shmanstnvo | Бурановский дедушка

https://www.cnews.ru/news/top/2025-01-16_prokuratura_nachala_proverku:
(""Отечественное ПО в «Аэрофлоте» содержит множество технических ошибок и оставляет пилотов без навигационной информации во время полета. Московская прокуратура начала проверку «Аэрофлота» после жалоб летного состава. 

Компания перешла с импортного ПО SkyBag на отечественное SmartSky. Программное обеспечение SmartSky для обеспечения документами аэронавигационной информации включено в Единый Реестр российских программ для электронных вычислительных машин и баз данных, реестровый № 188235. В жалобах летного состава утверждается, что новая программа допускает множество технических ошибок, отечественные планшеты «абсолютно непригодны для работы», а пилотам «приходится летать с нарушением федеральных авиационных правил»."")
Ну хоть где-то можно привлечь к ответственности за качество ПО! Но «Аэрофлоте» от этого зависит жизнь людей. А других местах хрен прищучишь.
----------------------------------------------------------------
2025-02-02 14:42:16 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(""Ну хоть где-то можно привлечь"")А за что? Ведь, "цифровизация" и "внедрение ИИ" не могут происходить иначе. Единственный вариант летунов - вернуться к "навигации по пачке "Беломора"".
----------------------------------------------------------------
2025-02-02 14:46:12 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Бурановский дедушка

https://safe.cnews.ru/news/top/2025-01-29_v_windows_najdena_ogromnaya_dyra
(""В Windows найдена огромная дыра, которая любого пользователя превращает в администратора. Защиты толком нет."")
Уязвимость эксплуатирует особенности Windows, что в ней есть учётная запись SYSTEM, с помощью которой создают скрытую учётную запись
(==
net user hideuser$ password12345 /add
==)
($ конце -- значит скрытый). Такой профиль не будет отражаться в списке пользователей, но при этом будет прописан в реестре SAM. Далее
(==
net localgroup Administrators hideuser$ /add
net localgroup "Remote Desktop Users" hideuser$ /add
==)
Далее меняют RID учетной записи на нужный (у администраторов он равен 500) и получают расширенные права администратора. В Windows профили пользователей прописаны в реестре и хранятся в
(++HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users++).

Посмотрел справочник оп WinAPI, ну нет такого впечатления, что для полной совместимости с Windows нужен реестр SAM. И нигде не описаны значения RID учетных записей. Всё-таки совместимость с Windows не предопределяет совместимость по уязвимостям.
----------------------------------------------------------------
2025-02-02 16:05:11 | o-prevraschenii-kibernetiki-v-shmanstnvo | Вежливый Лис

> А за что?

За некомпетентность и халатность. Например Бурановский Дедушка предложил сделать форум для координации интернет-противодействия. Форум делается в несколько кликов. И как взял ли Бурановский Дедушка на себя эту работу (развивать движение и координировать)? Он и некомпетентен в выборе исполнителей (хотел заставить это делать меня) и халатен (не стал делать сам). Я его за такое поведение презираю.
----------------------------------------------------------------
2025-02-02 16:22:47 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(""Например Бурановский Дедушка предложил сделать форум для координации интернет-противодействия"")Пчелы против меда?
----------------------------------------------------------------
2025-02-02 16:27:59 | o-prevraschenii-kibernetiki-v-shmanstnvo | Вежливый Лис

[q]привлечь к ответственности[/q]
Пишет Бурановский Дедушка. Он же меня под реальный срок подставить хотел. Это мерзко, поведение мерзавца, правильно? На себя он почему-то эту ответственность (модерировать буйный интернет-бойцов) не берёт.
----------------------------------------------------------------
2025-02-02 16:29:34 | o-prevraschenii-kibernetiki-v-shmanstnvo | Вежливый Лис

[q]Пчелы против меда?[/q]
Там речь шла про то, что на многих форумах агитируют за программирование на иностранных языках, и этому надо противодействовать. Но мы-то знаем, что слово за слово, и до нарушения УК РФ очень близко. За кем-то не уследил и организаторов в тюрьму за организацию.
----------------------------------------------------------------
2025-02-02 16:39:10 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(""на многих форумах агитируют"")В первую очередь, на всех форумах агитируют за пустопорожнюю болтовню (иначе он не окупится). А "информационное противодействие" предполагает обратное - ответственность за базар. (Только не считайте, что окупаемость - это только про бабло, а ответственность - только уголовная. Я - про уборку мусора).
----------------------------------------------------------------
2025-02-02 20:45:09 | o-prevraschenii-kibernetiki-v-shmanstnvo | Бурановский дедушка

(""в тюрьму за организацию"")
Лиса можно в зоопарк пристроить. Но лучше в цирк, там работать заставляют.
----------------------------------------------------------------
2025-02-02 21:10:44 | o-prevraschenii-kibernetiki-v-shmanstnvo | Вежливый Лис

В очередь, меня МихалНик на шубу пустить хотел.
----------------------------------------------------------------
2025-02-03 00:42:57 | o-prevraschenii-kibernetiki-v-shmanstnvo | Автор сайта

Попросил бы не переходить на личности и не заниматься бессмысленной болтовнёй.
----------------------------------------------------------------
2025-02-04 17:12:21 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | vkACL

Огромный респект автору сайта. Я есть в списке ЯП как vkACL. Так я себя и назвал, хотя название своего ЯП я немного изменил, но vkACL тоже нормальное. И ссылка правильная. Недавно я поменял внешний вид сайта и сейчас легче найти программу ЯП. Я давно не заходил на этот сайт и сейчас был удивлен большим количеством замечаний. Есть что почитать. У меня такое предложение. Любой ЯП интересен только тогда, когда на нем уже написано много программ. Это и примеры для учебы новичкам и просто польза для пользователей. Поэтому кроме разделения языков на (заморожен) и (развивается) полезно указывать -- есть ли набор готовых программ и насколько он велик. Например, я знаю, что ЯП Эллочка не только заморожен, но и работает только в ДОС, а такой ОС уже ни у кого нет. А на моем языке vkACL написано много полезных программ для всех, не говоря о том, что это просто мой рабочий ЯП.
----------------------------------------------------------------
2025-02-04 22:30:06 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Автор сайта

У меня такое мнение: если разработчик языка серьёзно заинтересован в своём языке, в его развитии и популяризации, то у него будет и сайт, и какая-то документация или учебник, и примеры использования, и какие-то приложения. А на «нет» и суда нет. Значит, на перспективу не рассчитывают.

С другой стороны, человеку, который открыл этот список, хотелось бы отличить серьёзное от несерьёзного. Чтоб какой-то рейтинг был или количество звёздочек рядом с названием. Но тогда надо пройтись по ссылкам и заняться поиском и обобщением информации. Но кто это будет делать? Авторы языков не просят о размещении дополнительной информации. Хотя они должны были бы быть наиболее заинтересованными.

А пока что вот так: Эллочка и vkACL стоят рядом, как равные, хотя между ними есть очевидная разница.
----------------------------------------------------------------
2025-02-06 15:03:45 | index | vkacl

Я прочитал статью и в ответ решил написать свою статью, так как для комментария там очень много букв. Вот ссылка  на мой сайт, где она размещена. Статья по теме, как мне кажется. Но если что не так, готов выслушать замечания. Итак вот ссылка https://kohnvict.ucoz.ru/blo/250205.htm
----------------------------------------------------------------
2025-02-06 15:24:56 | index | Gudleifr

(""Но если что не так, готов выслушать замечания"")Сами напросились. Надо бы похвалить, но Вас и без меня похвалят.

(""Я определяю Программу как Метод решения задачи с помощью комплекса алгоритмов"")Проще назвать это Решением. А Программой - запись этого решения на конкретном ЯП.

Тогда вся остальная статья (за исключением описания Ваших трудов) сведется к:

Следствие 13: Если запись решения на языке программирования оказывается более путаной и длинной, чем на человеческом языке, значит, программист не владеет нужным языком программирования.
----------------------------------------------------------------
2025-02-06 19:43:24 | index | Школьник Дима

vkacl,
[q]Детей заставляют учить Питон и они не могут выбирать. А программы обучения утверждаются министерством. Школьники должны учить мой ЯП vkacl как второй, но учить второй язык никто не будет.[/q] Министерство выберет ваш язык если он будет популярным, а пока вы не дотягиваете - это очевидно. 
Или вы надеетесь засесть в министерстве, обрасти связами и навязать школьникам что им нужно учить?
----------------------------------------------------------------
2025-02-06 20:10:47 | index | Gudleifr

(""Или вы надеетесь засесть в министерстве, обрасти связами и навязать школьникам что им нужно учить?"")Видимо, нужно идти от противного: наглядно решать повседневные задачи взрослых, чтобы папы сами требовали от детей изучения полезных языков.
----------------------------------------------------------------
2025-02-06 20:55:23 | index | vkacl

Прошло мало времени, и наверно будут еще замечания. Пока отвечу на те, что есть. 
(1) Программу нельзя называть Решением, записанным на одном ЯП. Во-первых, любая программа-интерпретатор дает много решений. Во-вторых, программу очень легко переписать на другом языке. Посмотрите он-лайн программы на моем сайте. Они написаны на JS, но реально они переписаны с моего языка и первоначально были написаны на нем. На моем языке они так же точно работают, только Джаву из интернета прогнали. Приходится переписывать. И это совсем не сложно. 
(2)  Я вовсе не собирался что-то навязывать школьникам. Но информировать бы хотелось. Я знаю очень много интересных языков, которыми мало кто пользуется. И я четко написал, что отказываюсь даже и от затеи кого-то информировать. Надо понимать как устроено общество. Мы все звери и законы у нас звериные. А у меня другая работа, в ней я один из немногих, который чего-то добился. Не чинов, это как раз просто, но не интересно, а в науке, придумал то, чего не было. Мой ЯП мне лично нравится больше остальных. Если он останется персональным -- не страшно. Но хотелось бы найти хотя бы одного единомышленника.   
(3) Я уже давно наглядно показываю решения разных задач на своем языке. Мне говорят, что очень интересно, но мы будем делать как все. Фирма Скилфэктори зазывает на свои платные курсы, обещает работу и высокую зарплату. Ну как тут устоишь. Что касается языка, то согласен, он НЕ дотягивает, потому что нет условных операторов, нет объявления массивов и много чего  нет. В новом языке каждый хочет увидеть то, что уже есть в известных языках. Но тогда зачем изобретать (копировать) известный велосипед. Есть очень много оригинальных велосипедов, и у них реально все по другому. Ссылок пока не даю, надо смотреть.
----------------------------------------------------------------
2025-02-06 21:20:22 | index | Gudleifr

(""Во-первых, любая программа-интерпретатор дает много решений"")Вы сами себя путаете. Хронологически: сначала решение - потом программа.

Например, квадратное уравнение: сначала мы получаем формулы - решение на бумажке; затем, мы переносим это решение на какой-то ЯП - получаем программу; наконец, мы читаем документацию по ОС, чтобы понять, как в программу вставить интерфейсы ввода-вывода. Эти три этапа достаточно слабо связаны, их могут фигачить разные люди. Вводить термины, которые мешают разделить эти три этапа, себе дороже.
----------------------------------------------------------------
2025-02-06 21:27:54 | index | Неслучайный читатель

Отсюда: entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty.php#48
(""Знакомлюсь не с первым «самодельным» языком программирования. И знаете, что заметил? Интересная закономерность — многие разработчики находят, что подходящая ниша для их творений — это обучение (как правило, школьников) программированию. И действительно, для серьёзного программирования они не пригодны — не «обросли мясом». Серьёзные организации будут выбирать серьёзные инструменты. И куда тогда пристроить своё творение? Конечно туда, где публика невзыскательна. В школу!

Но, простите, эта ниша уже занята. Для школы уже написаны учебники. При этом очередной новый язык не обладает обратной совместимостью этими книгами. В учебнике написано одно, а в новом языке — совсем другое. Учителя информатики его не знают. Гороно/районо инициативу, скорее всего пресечёт. Остаются школьные кружки, и то если эти кружки будет вести автор языка."")
----------------------------------------------------------------
2025-02-06 21:28:43 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Иван

А как узнать, много программ написано или нет, особенно если язык скриптовый? Вот у меня, например, в период с 2009 по 2025 год накопилось уже более 200 тысяч строк скриптов (и по большей части скрипты из 2009 года работают на компиляторе версии 2025 года, так как для своего же удобства в 99% случаев не нарушаю обратную совместимость). Просто скрипты никуда не выкладываю, но сам использую.
----------------------------------------------------------------
2025-02-06 21:32:26 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Иван

По поводу выкладывания скриптов - не вижу смысла выкладывать и тратить на это время, но это не значит, что их нет. Небольшим разработчикам вообще очень трудно раскрутиться, это первое. Второе - вряд ли кто-то будет платить за эти скрипты - тем более на фоне огромного сообщества AutoIt с кучей бесплатных скриптов - поэтому остаётся только использовать самому. Ну и копить эти скрипты (копить я вообще люблю и не только скрипты).
----------------------------------------------------------------
2025-02-06 21:58:10 | index | Gudleifr

(""И действительно, для серьёзного программирования они не пригодны — не «обросли мясом»"")Нет такого понятия. Есть только "большой попил".
----------------------------------------------------------------
2025-02-06 23:08:54 | index | Автор сайта

Виктор, мне трудно возразить Вашим рассуждениям в духе(""Большая коллекция таких команд создавала программу. Команды выполнялись одна за другой, но были и такие команды, которые меняли порядок выполнение других команд. При этом можно было какой-то участок кода проходить много раз. Так создавались процедуры. А некоторые команды делали разные переходы в зависимости от знака числа операции, так появились условия. И до сих пор в коде ОС есть только процедуры и условия и больше ничего. Со временем архитектура двоичных операций усложнялась."")Правда, когда Вы отклоняетесь от общеизвестного с тезисом(""Еще один вопрос -- нужен ли русский язык в ЯП? Ответ -- однозначно нет."")то Вам могут сильно возразить те, кто разрабатывает на 1С: по числу вакансий -- <a href="vse-yazyki-ekvivalentny-no-nekotorye-iz-nikh-ekvivalentnee-drygikh.php">явный лидер</a>. Более того, до внедрения ЕС ЭВМ было немало языков, в которых русский язык совершенно не мешал программировать.<table border=0 align=center cellpadding=5 cellspacing=5><tr><td><img src="_I/yarmo.png" alt=""></td></tr></table>
(""Нет такого понятия. Есть только "большой попил"."")(**Gudleifr**), заведите на своём форуме ветку (,,Об откатах и распилах, о рабах и о дебилах,,). Там подобным темам будет самое место. А здесь -- о технологиях.
----------------------------------------------------------------
2025-02-06 23:20:11 | index | Gudleifr

(""А здесь — о технологиях"")Именно. Поэтому и коробит чисто коммерческое "серьезное программирование".
----------------------------------------------------------------
2025-02-06 23:23:37 | index | Gudleifr

(""Об откатах и распилах, о рабах и о дебилах"") https://gudleifr.forum2x2.ru/t17p75-topic#3725
----------------------------------------------------------------
2025-02-06 23:31:01 | index | Автор сайта

Я бы назвал серьёзным программированием те проекты, которые так же можно назвать серьёзными. Ну наверное, если в проектах занято много людей. Linux, LibreOffice, PostgreSQL -- это серьёзно? Вполне. Так что не всё серьёзное -- коммерческое.(""https://gudleifr.forum2x2.ru/t17p75-topic#3725"")Отлично! Вот там и пишете.
----------------------------------------------------------------
2025-02-06 23:38:36 | index | Gudleifr

(""Ну наверное, если в проектах занято много людей"")Много ли людей в Linux? Да нет, само ядро минималистично. Одному под силу. Остальные - либо находят у этого одного ошибки, либо пишут уже над ядром - "от сих, до сих", не особо нуждаясь в чем-то "серьезном". Т.е. если посмотреть на Linux-сообщество, оно очень слабо связано. В этом и состоит сила Linux - он позволяет решать задачи просто, опираясь на простые, но мощные системные интерфейсы.
----------------------------------------------------------------
2025-02-07 20:06:55 | index | vkacl

Я тут недавно и не умею цитировать. Но удобно ссылаться на номер поста. 
(1) В посте #178 процитирован пост #48. Это правильное замечание. Я именно про него говорил в своей статье (пост #172). Реально я создавал свой ЯП для себя. Я уже тогда был ученым физиком, доктором физ-мат наук. Я не создавал ЯП для школьников. Но мой тезис был такой, что если уж Питон школьникам толкают, то есть ЯП намного проще и школьникам легче будет, не надо разбираться в типах массивов, учить что такое кортеж и прочая фигня.
(2) В посте #177 написано (сначала решение, потом программа). Это неправильно. Решение -- слово многозначное. Даже а математике бывают уравнения, решение которых получается с помощью программы. Иначе никак. С помошью программ расчитываются траектории ракет и даже время Вселенной. Именно программа дает решение и только после того, как она написана. Автор поста видимо называет решением алгоритм, с помощью которого это решение получается. О том как мы не понимаем друг друга есть хороший пример. Вот задачка (Нарисованы три круга. Надо сделать два. Стирать ничкго нельзя.) Задачка имеет несколько решений. Но понимают ее каждый по разному.
(3) В посте #180 написана ерунда. Можно ответить, но есть известная истина. Птица летает, крот ползает под землей. Они друг друга никогда не поймут. Программирование -- это международный язык. Я лично не пишу программы только для русских. И сам я учил ЯП на английском языке. Хотите быть кротом -- пишите по русски.
(4) ответ в пост #184 -- В Линукс очень много людей. Особенно после того, как появился Андроид. Он на Линукс. Суперкомпьютеры тоже. Скоро всех россиян на него посадят. Астра Линукс уже готов. Например, лично меня держат в Виндовс чиновники. Они кроме Ворда и Экселя ничего больше не умеют.
----------------------------------------------------------------
2025-02-07 20:36:38 | index | Gudleifr

(""Именно программа дает решение и только после того, как она написана"")С моей точки зрения это неправильно, т.к. решение было до того, как программа для его обсчета была написана. С Вашей - тоже, т.к. после написания программы ее еще нужно записать на каком-то ЯП.
----------------------------------------------------------------
2025-02-07 21:15:55 | index | Вежливый Лис

[q]Хотите быть [b][i]кротом[/i][/b] — пишите по русски[/q]
Протестую против этой [s]расовой[/s] видовой обзывалки
----------------------------------------------------------------
2025-02-07 21:22:50 | index | Вежливый Лис

[q]Программирование — это международный язык.[/q]
Да, всё верно. Международные языки перечислены в ООН. Русский является международным языком.

[q]Я лично не пишу программы только для русских.[/q]
Мы тоже, писать только для русских было бы ненужным самоограничением. Можно писать на русском языке и для китайцев и для вьетнамцев. Т.е. исходные тексты на кириллице, а локализация интерфейса на язык пользователей.
Полностью согласен с вашим таким подходом.

[q]И сам я учил ЯП на английском языке.[/q]
Отлично, теперь, [b][i]когда вы выучили[/i][/b] программирование, вы сможете научить русских людей программировать на родном языке.

В сухом остатке только "мне неудобно". Но думать надо не только о себе, но и о будущем. О судьбах. Какая судьба ждёт страну после того или иного решения?
----------------------------------------------------------------
2025-02-07 22:29:38 | index | Борис К.

(""Астра Линукс уже готов"")

Вот сразу возникает подозрение, что (**vkacl**) (ученый физик, доктор физ-мат наук) с Астрой или МСВС дела не имел.

(""Это жалкое существо, покрытое язвами, как Иов, полуразложившееся, мучимое всеми известными и неизвестными болезнями, страдающее от холода и от жары одновременно, вывалилось в коридор, огласило институт серией нечленораздельных жалоб и издохло."")
----------------------------------------------------------------
2025-02-07 23:45:09 | index | Автор сайта

(""В посте #180 написана ерунда"")
Написаны факты:
(..на русском программировали и раньше, и сейчас,..)
(..количество вакансий по программированию 1С говорит о том, что русский язык программированию отнюдь не мешает...)
(""Программирование — это международный язык."")
Программирование -- это деятельность. А язык -- это инструмент. Вам же для научной деятельности был наверняка удобнее в качестве инструмента русский язык, а не английский. На русском Вы писали статьи, доклады и диссертации. Так удобнее, привычнее и производительнее. Вот и для программирования можно создать такой инструмент, одним из преимуществ которого может быть привычность родного языка.
----------------------------------------------------------------
2025-02-08 01:26:40 | index | MihalNik

[q]Программирование — это международный язык.[/q]
Программирование это не язык. Php-шник запросто не поймет сишника и наоборот.

[q]Птица летает[/q]
Расскажите это страусу или пингвину.

[q]Я лично не пишу программы только для русских.[/q]
А Лем писал свои книги на польском языке. Сколькие читали Лема, а сколькие выучили его родной язык?
Если кто-то придумал готовить лягушек это не значит, что все остальные будут или не будут есть лягушек.
Если кто-то придумал есть палочками, это не значит, что все остальные будут или не будут есть палочками.
Если кто-то придумал пить с кружек или рюмок, это не значит, что все остальные будут или не будут пить исключительно с них - у лисы, вон, морда в кувшин не лезет.
В лучшем случае Ваши программы люди перепишут на удобных им языках.

[q]Но мой тезис был такой, что если уж Питон школьникам толкают, то есть ЯП намного проще и школьникам легче будет, не надо разбираться в типах массивов, учить что такое кортеж и прочая фигня<...>
И сам я учил ЯП на английском языке.[/q]
Всего лишь надо-то выучить английский язык, ага, так намного проще. И сразу пограммист.
Правда ни среднестатистический китаец ни среднестатистический англичанин Ваш код, скорее всего, не поймет.
Вполне вероятно его не поймет даже среднестатистический программист.
Если я выучил Пролог за пару выходных (за один прочитал методичку, на другой сделал лабы) это не значит,
что все школьники тут же должны начать учить его, такой простой, вместо Питона/Паскаля или чего там сейчас еще.
А нужна в двоичной системе таблица умножения? Или шестнадцатеричную учить тогда надо?)

[q]когда вы выучили программирование, вы сможете научить русских людей программировать на родном языке.[/q]
Люди, называющие скорость производной?
Математики не могут даже пару предложений перевести на русский язык:
https://www.programmersforum.rocks/t/pro-yazyk-matanaliza/1501
потому что вывариваются в своем вакууме и вообще не знают, как люди говорят.
----------------------------------------------------------------
2025-02-08 11:39:13 | index | Gudleifr

Если вернуться в тему...
Все о чем говорилось выше - об удачных решениях, которые хотелось бы повторить. Об успехах, которым завидуют. О детских страхах, которые переросли во взрослые комплексы.

А что должен бы уметь транслятор/интерпретатор воистину современного уровня, не ограниченный слабыми возможностями машин середины прошлого века?

1. На входе - человеческий язык. Или профессиональный сленг. Или эскиз на салфетке.
2. На выходе - аппаратно-программный комплекс и инструкция пользователя. Или конкретная исполненная работа. 
3. Промежуточные хранилища - не столько понятые-преобразованные тексты, но сами процедуры понимания-преобразования.

Понятно, целиком эту проблему не решить. Надо брать некоторый кусок - от сих, до сих. Но почему мы считаем программированием всегда только один и тот же кусок - от формального языка, до исполняемого файла конкретной ОС? Да, тут наши предки преуспели. Но, просто повторяя их решения, ничего нового мы не получим.
----------------------------------------------------------------
2025-02-08 11:44:23 | index | Неслучайный читатель

(**vkacl**), с одной стороны, против русского языка в программах, с другой стороны, предлагает свой язык в школы. Но в школах изучают Кумир, в котором таки русские ключевые слова и идентификаторы. И это правильно -- школьникам так легче понять программирование, меньше проблем при изучении.
----------------------------------------------------------------
2025-02-08 13:58:08 | index | Вежливый Лис

[q]предлагает свой язык в школы[/q]
Не надо разжигать ненависть к [b]vkacl[/b], всё-таки[s], в отличие от меня[/s], он научился программировать. Много ли у нас таких людей?
----------------------------------------------------------------
2025-02-08 14:12:16 | index | Gudleifr

(""Не надо разжигать ненависть к vkacl, всё-таки, в отличие от меня, он научился программировать. Много ли у нас таких людей?
"")Именно так. И дело тут не в русском языке. А именно в бездельниках-системщиках, которые сами не могут обеспечить пользователям удобную среду программирования, и не хотят учить этому школьников. Вот пользователи и мучаются, изобретая велосипеды.
----------------------------------------------------------------
2025-02-08 19:38:08 | index | vkacl

Я внимательно прочитал все замечания и дискуссию. Задачку про 3 круга так никто и не решил. И моих слов почти никто не понял. Я не говорил про английский язык. Попробую объяснить более подробно. Есть мертвый латинский язык и живой латинский алфавит. И вот так уж сложилось по всему миру, что математику пишут латинскими буквами, даже китайцы. Программирование имеет дело с математикой, умножение, деление, синусы и логарифмы и не только это. Латинская клавиатура есть на всех компьютерах. Язык программирования никак не связан с английским языком. Латинскими буквами пишут и французы и испанцы и много кто еще. Никто не призывает вас учить английский язык. Просто запишите русские слова латинскими буквами и будет вам счастье. Хотя мои внуки во втором классе обычной школы уже учат английский язык. Но зачем переключать клавиатуру туда, сюда. Если быстро печатать это очень сильно тормозит. 
    А всю документацию пишите по русски. Меня спрашивали как мне удобно читать. Читать удобнее по русски. Но я опубликовал более 260 статей в научных журналах. Половину сразу по английски, остальная половина переводилась на английский язык. Из физики. Уравнения (законы механики) Ньютона или уравнения (электродинамики) Максвелла никто по русски не пишет. Весь мир пишет одинаково латинскими буквами. Я так длинно пишу, потому что не ожидал такой реакции. Лично я программ на русском языке читать не буду. И уверяю вас, таких как я, много. А венгры будут писать программы на венгерском, щведы на швецком. Ну и кому это надо. Да, согласен, есть переводчики -- переведут. Я описание своего ЯП vkacl по просьбе одного француза переписал одним файлом и потом перевел с русского на английский 500 000 знаков за полчаса. Это делает Гугл переводчик, только надо уметь пользоваться. С языком никаких проблем нет. Есть проблема с привычкой, привычнее видеть то, что видел раньше. А раньше ЯП писали американцы на своем языке. И будут писать и дальше. И еще не забывайте, что самые умные люди -- все в Америке, в том числе и из России. Из нашей лаборатории все самые умные (последние) уехали сразу после дефолта 1998 года. Ну и последнее. Если мне покажут уравнения Максвелла, написанные на русском языке, то я не смогу их понять, нет практики. Зачем это делать? 
    Есть еще много о чем писать. Но я только вопросы поставлю. Вопрос первый -- каким должен быть ЯП для школьников. Я помню историю, написанную одной мамой. Дочка очень любила программировать на визуальном языке, название забыл, но таких немало. Ей нравилось, но захотелось посложнее. Ей подсунули Питон. Он оказался очень сложным для нее и интерес к программированию пропал. Вопрос второй. На сайте SourceForge собирают программы с открытым кодом на всех языках. И есть перечень языков и число статей по каждому. На первом месте Java и 46 тысяч статей. Совершенно бесполезно писать любителю или даже специалисту компилятор языка, который по возможностям сравнится с Java. То же и с Питоном. Говорить о том, что кто-то придумает язык лучше, включая драйвера для всех приборов просто смешно и несерьезно. Лично я для себя придумал просто другой синтаксис и интерпретатор вместо компилятора для языка Java. Но мой язык -- это все равно Java не более того. Сейчас я уже свой язык никому не предлагаю, а предлагаю только набор готовых программ с простым интерфейсом, которыми бесплатно можно пользоваться. А если кому захочется, то можно и ЯП попробовать. А в таком варианте все мои программы, написанные на vkacl, никак не отличаются от других программ, написанных на Java.
----------------------------------------------------------------
2025-02-08 20:05:15 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | MihalNik

[q]Любой ЯП интересен только тогда, когда на нем уже написано много программ.[/q]
Во-первых, не только, иначе новые бы не появлялись, во-вторых это не достаточное условие.

[q]А на моем языке vkACL написано много полезных программ для всех, не говоря о том, что это просто мой рабочий ЯП.[/q]
Проблема в том, что это сильно хешированный язык. Поскольку знание какого-либо другого языка, хоть программирования, хоть естественного не сильно поможет в чтении его исходников, он остается личным языком одного разработчика.
Для Джавы или Делфей среды разработки умеют показывать перечни полей/функций с названиями и типами параметров. В Object Inspector'е даже можно пополнить словарный запас английского. А что в случае с vkACL?
Можно попробовать перевести аббревиатуры на иероглифы, может китайцам зайдет.
Либо можно создать расшифровывающий режим чтения/письма с полноразмерными, понятными простым смертным названиями.
----------------------------------------------------------------
2025-02-08 20:39:47 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Erich

Я автор упомянутой тут "Эллочки", но написать хочу о языке "SmallBasic", который тут тоже был упомянут. Язык хороший, хотя имеет и серьезные минусы. Три года назад я написал "Пособие по программированию на `SmallBasic`", возможно, кому-то пригодится. https://erichware.com/litvor/uniling.htm
----------------------------------------------------------------
2025-02-08 20:59:01 | index | MihalNik

[q]Есть мертвый латинский язык и живой латинский алфавит.[/q]
С полумертвыми q (в испанском, кажется, наоборот, почти не используется k), x, y.

[q]Язык программирования никак не связан с английским языком.[/q]
Почти все более-менее популярные библиотеки с английским языком таки связаны и сокращения редко когда заучиваются, максимум несколько приставок или окончаний.

[q]Программирование имеет дело с математикой[/q]
И еще много с чем.

[q]Просто запишите русские слова латинскими буквами и будет вам счастье.[/q]
Очевидно будет несчастье, т.к. скорость чтения и письма резко просядет.

[q]А всю документацию пишите по русски.[/q]
Так Вы не найдете поклонников ни тут ни там.

[q]уравнения (электродинамики) Максвелла никто по русски не пишет.[/q]
Поэтому в т.ч. их мало кто вспомнит. Если бы их писали на разных языках - понимающих в целом на планете было бы больше.

[q]Весь мир пишет одинаково латинскими буквами.[/q] 
Не одинаково, у них разное произошение в разных языках и даже на одном в разных странах могут писать по-разному одни и те же слова.

[q]Лично я программ на русском языке читать не буду.[/q] 
Почему это должно кого-то беспокоить.
Ну вот Ваши программы честно тоже прочитать просто так невозможно.
Где примеры с комментариями, по которым можно что-то изучить?

[q]А венгры будут писать программы на венгерском, щведы на швецком. Ну и кому это надо.[/q]
А кому надо писать одни и те же алгоритмы на Pascal, C, C++, Java, Kotlin, D, Rust...?

[q]И уверяю вас, таких как я, много[/q]
Меньше чем китайцев, индусов, арабов, русских, японцев, тайцев, корейцев... На много меньше.

[q]Задачку про 3 круга так никто и не решил[/q]
Почему ее кто-то должен даже пытаться прочитать? В каком ее месте торчит сладкий банан?

[q]И ещё не забывайте, что самые умные люди — все в Америке, в том числе и из России.  Из нашей лаборатории все самые умные (последние) уехали сразу после дефолта 1998 года.[/q]
Так это хорошо. У советских специалистов был самый большой опыт в освоении самых больших бюджетов и развалах самых больших государств.

[q]Если мне покажут уравнения Максвелла, написанные на русском языке, то я не смогу их понять[/q]
Так у Вас и с другими специалистами на русском языке могут быть проблемы с коммуникацией, это прям известный бич всех айтишников.

[q]Совершенно бесполезно писать любителю или даже специалисту компилятор языка, который по возможностям сравнится с Java. Говорить о том, что кто-то придумает язык лучше, включая драйвера для всех приборов просто смешно и несерьезно.[/q]
Расскажите об этом разработчикам Kotlin'a или в Гугле.

[q]Я помню историю, написанную одной мамой. Дочка очень любила программировать на визуальном языке, название забыл, но таких немало. Ей нравилось, но захотелось посложнее. Ей подсунули Питон. Он оказался очень сложным для неё и интерес к программированию пропал.[/q]
Дать машинкой порулить и собирать двигатель сильно разные вещи.
----------------------------------------------------------------
2025-02-08 22:56:39 | index | Автор сайта

(""Программирование имеет дело с математикой, умножение, деление, синусы и логарифмы и не только это."")
Ваш фонарь освещает освещает ближайшие к Вам предметы, до остальных свет не достал. Попробуйте, например, посмотреть программирование бизнес-приложений на 1С. Вроде бы сведение кредита с дебетом тоже требует арифметики. Но математикам это не интересно. Да и не всё поймут, поскольку есть специфика. Ну и без латиницы обходятся -- Вам будет интересно узнать, почему?
(""запишите русские слова латинскими буквами и будет вам счастье."")
История:(""Диогену говорят: (,,Если бы ты льстил царю, тебе не пришлось бы есть чечевицу,,). На что он отвечает: (,,Если бы ты приучил себя к чечевице, тебе не пришлось бы льстить царю,,)"")
(""Но зачем переключать клавиатуру туда, сюда? Если быстро печатать это очень сильно тормозит."")
Лучше всего переключиться однажды на русскую раскладку, и больше не переключаться назад. Всё зависит от того, насколько будет удобен язык и среда разработки. Но для этого надо постараться, чтоб русской раскладки было достаточно.
(""я опубликовал более 260 статей в научных журналах. Половину сразу по-английски, остальная половина переводилась на английский язык. Из физики. Уравнения (законы механики) Ньютона или уравнения (электродинамики) Максвелла никто по-русски не пишет. Весь мир пишет одинаково латинскими буквами."")
Если бы Вы работали над программой по техническому заданию, то в России оно (это задание) было бы написано на русском. Написание идентификаторов на русском позволило бы Вам писать программу в терминах технического задания. Вот Вы, к примеру, как бы написали на Java имена полей в базе данных (,,ИНН,,), (,,КПП,,), (,,ОКПО,,), (,,ОКАТО,,)?
(""не забывайте, что самые умные люди — все в Америке, в том числе и из России."")
Эмигранты льстят сами себе, что мы, (,,самые умные, уехали,,). Интересно, что самые умные вроде бы уже уехали в 1917. Но потом опять возникают самые умные и опять уезжают. Такое впечатление, что там умные не рождаются. Они рождаются здесь, чтобы туда уехать.
(""Дочка очень любила программировать на визуальном языке, название забыл, но таких немало. Ей нравилось, но захотелось посложнее. Ей подсунули Питон. Он оказался очень сложным для неё и интерес к программированию пропал."")
Значит, это не её. Переход от того, что приносит удовольствие, к тому, что нужно для борьбы за существование, не всегда проходит безболезненно.
(""бесполезно писать любителю или даже специалисту компилятор языка, который по возможностям сравнится с Java"")
Нет смысла повторять Java, некоторые <a href="priznaki-ustarevshego-yazyka.php">концепции которого подустарели</a>. Шансы имеют те языки, которые могут предложить что-то новое, чего нет в Java.
(""Говорить о том, что кто-то придумает язык лучше"")
Вы же стали доктором наук не просто так? Ведь для защиты диссертации (а у Вас их было две -- кандидатская и докторская) необходима научная новизна. То есть то, что до вас никто не делал, до чего никто не додумался. И Вы сделали какие-то открытия в физике, раз имеете степень доктора наук.

Так вот и в языках программирования возможны открытия и научная новизна. Думаю, что люди с широким кругозором в программировании согласятся с этим.
----------------------------------------------------------------
2025-02-09 00:31:50 | index | Школьник Дима

vcacl, 
[q]Задачку про 3 круга так никто и не решил.[/q] Как никто не решил? Посмотрите в интернете - всё есть.
Правда эту задачку можно и понять по разному. Круги например могут быть по разному нарисованы.
----------------------------------------------------------------
2025-02-09 07:58:04 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | vkacl

Было предложение увеличить число пользователей самодельных программ языков программирования если авторы найдут способ взаимодействовать между собой. Я заинтересовался программой GAZ, так как исходная идея создания языка типа команд ОС (Виндовс или Юникс) в моем случае как раз и реализована в полной мере. Но обнаружил, что нет не только учебной информации о программе GAZ, но и контактов автора Ивана. Хотя бы электронной почты или адреса любого мессенджера. Есть комментарии, которые не всем интересны и их проще обсудить в личной переписке. 
Иван, найдите адрес моей почты на моем сайте и напишите мне, если вы не хотите показывать свой адрес публично. Меня зовут Виктор Кон. По этим словам вам Яндекс очень много обо мне скажет. А пока я не хочу устанавливать вашу программу только потому, что она портит регистры. И нет указания как ее удалить полностью после установки. Я люблю портабл программы, которые можно запускать с флешки или внешнего винчестера. Моя как раз такая.
----------------------------------------------------------------
2025-02-09 11:58:55 | kompyuternye-rebusy-i-etyudy-dlya-programmistov | Gudleifr

Попробую добавлять сюда некоторые повседневные задачи... Решать локально (если не указано иное), на голом Мастдае, разве что, с применением Офиса... Многие ли смогут преодолеть инерцию, мол, "поставить нужное ПО и оно само все сделает"?

1. Закончив OCR очередной главы книжки, тащу книгу на другую машину. Там разбиваю новую главу на 5-килобайтные куски и скармливаю гугл-переводчику. Помещаю переведенное в текст. Возвращаюсь на старую машину. Сортирую переведенные куски текста по абзацам.
Трачу по часу каждые три дня. Нужно что-то делать проще, без потери наглядности.

2. ... я тут хотел лампочку повесить и обнаружил, что в этой колодке нет "земли" - только две одинаковых "фазы". Возникла сиюминутная задача: а как в этой квартире вообще проведено электричество? Проводка скрытая, т.е. доступна только в ряде конкретных точек. Т.е. нужна программа учета этих точек и экспериментирования с их распайкой.
Срок решения - один день.

3. Пишу скрипты. Обращаю внимание на то, легко получить список файлов в едином текстовом файле. Но разбить обратно текстовый файл какого-либо списка на строки, которыми мастдайные скрипты смогут нормально оперировать, трудно. Еще труднее, если файл устроен сложнее обычного списка, например HTML...
Найти для всех доступных версий Мастдая наиболее простое решение. С учетом проблем кодировки и произвольной длины строк.
----------------------------------------------------------------
2025-02-09 14:27:47 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | vkacl

Попробую ответить на замечания к моим словам (пост #279). 
О примерах программ на любом языке. Просто писать код только по описанию нового языка очень сложно. Примеры программ хороши для изучения языка. Также это позволяет понять его возможности в работе. Разумеется, что чисто теоретические рассуждения о том каким должен быть язык, иногда тоже полезны. Но если язык реально существует и нет примеров, то лично я бы не стал тратить на него свое время. Все языки для интерпретаторов сразу видны, например, javascript.  Бери, изменяй как нравится и запускай. 
О понятности языка. В моем языке имена каждой команды и каждого параметра можно писать полными словами, но на английском языке. Так  b можно заменить на begin, le на length, f на file и так далее. Интерпретатор поймет. Но мое ноу-хау как раз состояло в том, чтобы много не печатать и чтобы много информации умещалось на одном экране. А если хотите ясности, то пишите комментарии на русском языке. Об этом написано в документах к программе. Табличка полных имен тоже есть. Я ее проверю и если чего не хватает добавлю.
В Джава как раз в коде много букв, в Питоне еще хуже, на одной строке вообще может быть несколько букв. Не понимаю кому это может нравиться. Средой разработки при программировании на Джава я не пользуюсь. Это выглядит как при умножении 2*2 пользоваться калькулятором. Ошибки показывает компилятор и этого достаточно. Кстати Java интерпретирует байт-код, а его вообще невозможно читать, точнее читать то можно, но неудобно.
----------------------------------------------------------------
2025-02-09 15:20:58 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Gudleifr

(""Просто писать код только по описанию нового языка очень сложно"")Но это никому не нужно. Этот форум посвящен выдергиванию и обмусоливанию отдельных языковых свойств. А для этого нужнее описания, и описания литературные. Тут никто не собирается создавать что-то работающее и, тем более, полезное.
----------------------------------------------------------------
2025-02-09 16:45:37 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | MihalNik

[q]Так b можно заменить на begin, le на length, f на file и так далее. Интерпретатор поймет. Но мое ноу-хау как раз состояло в том, чтобы много не печатать и чтобы много информации умещалось на одном экране.[/q]
Это прям замечательно (плохо, что потыкавшись на сайте, я об этом сразу не узнал), некоторые другие современные разработчики тоже так делают (например, Третьяк и Кладов), но нужна волшебная кнопка или программа, чтобы сокращать/раскрывать названия автоматически. Потому что другим изучать язык по примерам с сокращениями, когда их больше дюжины, трудно. Сокращения - для профи в языке.

[q]В Джава как раз в коде много букв, в Питоне ещё хуже, на одной строке вообще может быть несколько букв. Не понимаю кому это может нравиться.[/q]
Ни кому не нравится, это необходимость взаимодействия большого числа людей и поддержки чужого кода. Просто у Вас нет такой потребности. Ну и тяжелые корпоративные изделия всегда отстают в развитии.

[q]Этот форум посвящен выдергиванию и обмусоливанию отдельных языковых свойств.[/q]
Потому что он только для этого и подходит.

[q]Тут никто не собирается создавать что-то работающее[/q]
Есть более подходящие места с соответствующими средствами управления.
----------------------------------------------------------------
2025-02-09 17:15:45 | kompyuternye-rebusy-i-etyudy-dlya-programmistov | MihalNik

[q]
Обращаю внимание на то, легко получить список файлов в едином текстовом файле. Но разбить обратно текстовый файл какого-либо списка на строки, которыми мастдайные скрипты смогут нормально оперировать, трудно. Ещё труднее, если файл устроен сложнее обычного списка, например HTML...
[/q]
Ну так давно есть не мастдайные скрипты, начиная еще с какого-нибудь Перла... но если религия не позволяет...

[q]Т.е. нужна программа учета этих точек и экспериментирования с их распайкой.
Срок решения — один день.[/q]
А потом за месяц не найти электрика который согласится что-то паять.
----------------------------------------------------------------
2025-02-09 17:20:04 | kompyuternye-rebusy-i-etyudy-dlya-programmistov | Gudleifr

(""если религия не позволяет..."")Не религия, а условия задачи.
(""А потом за месяц не найти электрика который согласится что-то паять"")"У самих (--револьверы--) паяльники найдутся..." (c)
----------------------------------------------------------------
2025-02-09 17:55:53 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Клихальт

[b]vkacl[/b],[q]О понятности языка. В моем языке имена каждой команды и каждого параметра можно писать полными словами, но на английском языке. Так b можно заменить на begin, le на length, f на file и так далее. Интерпретатор поймет. Но мое ноу-хау как раз состояло в том, чтобы много не печатать и чтобы много информации умещалось на одном экране.[/q]
Как говорится, всё давно уже придумано и реализовано на практике и Фокал в данном случае тому пример. ;)
----------------------------------------------------------------
2025-02-09 18:57:19 | index | vkacl

Большое спасибо всем кто мне ответил. Я сначала отвечу автору сайта. 
Про научные открытия. Все очень просто. В физике появляются новые приборы. В моем случае это был источник рентгеновского излучения и другие приборы с ним связанные. Новые приборы дают новые возможности. Но надо догадаться какие и как их использовать. Вот в этом и состояли мои открытия. Я придумал линзы для рентгеновских лучей. Раньше это было невозможно, а с новым источником стало возможно. Я теоретик, так что построил теорию.
Но докторскую диссертацию я написал 40 лет назад. За последние 40 лет я много таких диссертаций написал, и практически все благодаря программированию на своем языке. Потому что программы дают решения, а не наоборот. Мне говорили про квадратное уравнение и его аналитическое решение. А уравнение 5-й степени уже не имеет аналитического решения. И есть намного более сложные задачи. У меня на сайте есть пример демонстрации движения шариков в замкнутом объеме. Эта задачка вообще никак не решается уравнениями. Только моделированием и алгоритмами.  
Для программирования тоже были такие ситуации, когда появились экраны (мониторы), принтеры и так далее. А если все приборы старые и делают, что делали, то любой язык программирования делает одно и то же. Вот новое сейчас только нейронные сети. Раньше они не работали, сейчас мощности процессоров и память подросли и они заработали.
Про язык Java. Он устарел не более, чем Питон. Обоим языкам уже более 30 лет. Более того, он ведь развивается. Каждые полгодв новая версия появляется. Уже 23-я версия пошла. Я начинал с 4-й, остановился на 6-й. Я не повторял Джаву. Я просто поменял синтаксис в удобном для себя виде и отказался от компилятора. А Питон вообще мало меняется. Там основные пакеты как были 30 лет назад написаны, так и используются. Редактор текстов ужасный. Намного хуже, чем мой. И графика не на высоте. Я свою графику тоже давно сделал, но я ее хоть развиваю, как-то улучшаю. А в Питоне она никак не меняется. И тем не менее это сейчас модный язык номер 1. Как вы это объясните?
И про Котлин. Он тоже использует JRE. Вот он то как раз Джаву и переписывает другими словами. А по сути использует код, который в JRE написан. Значит ничего нового в нем нет. Но, должен извиниться. Я начал учить Котлин и сразу перестал. Сразу не понравился. Жалко время тратить.
Про эмигрантов. Да, согласен. Был 1917 год. А потом 1992 год, когда все сбережения пропали у всех. Я много потерял. В 1998 году я уже не потерял ничего, стал умнее. А люди потеряли. Так мы живем. Программистам в фирмах деньги платят, а ученым в бюджетных институтах ничего не платят. Но можно ничего и не делать. Я тоже 19 лет каждый год ездил во Францию. Там мне платили командировочные в 10 раз больше, чем зарплату в России. Совсем уезжать уже было поздно, да и не хотел. Но то, что умных людей в России сейчас намного меньше, чем было в СССР -- это факт. Таких, как я, программистов среди физиков больше нет. Я ведь всех вижу. А на Западе есть, в том числе и русские люди. В США не только русские, там все умные люди со всей планеты. Америка больше платит, вот все и едут туда.
Наверно я не на все вопросы ответил, но пока хватит. Да, забыл. Мне указали на язык КуМир. Я про него не знал. Теперь познакомился. И понял почему он такой. Ведь в школе учат всех, то есть будущих водителей автобусов, пекарей, артистов и так далее. Им программирование в жизни не понадобится, но они должны знать что это такое. И вот им суют совершенно нерабочую версию, зато простую. После Кумира учить какой-то другой язык уже никто не будет. Это еще одна, 2-я, бомба, которая разрушит Россию изнутри. Первой является ЕГЭ. И в Кумире все равно используют два языка. Переменные пишут латинскими буквами. Интерес к школьникам у меня пропал.
----------------------------------------------------------------
2025-02-09 19:46:37 | index | Вежливый Лис

Ну и хорошо.
----------------------------------------------------------------
2025-02-09 19:48:06 | index | Gudleifr

(""Наверно я не на все вопросы ответил"")Спасибо, но как Вам написали выше, ответы в такой форме никого не интересуют. По разным причинам, но не интересуют.
----------------------------------------------------------------
2025-02-09 20:05:53 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | vkacl

Отвечаю на пост 282.
Про общую структуру языка, названия команд и параметров написано тут https://kohnvict.ucoz.ru/acl/acl02.htm. Это старое описание языка и там все было. Замените 02 на 01, 03 и так далее, будут другие главы. А головной файл без номера acl.htm. 
У меня идея была такая, что первые буквы интерпретатор использует, а остальные (без пробела) можно писать какие угодно. Он их не использует. Я сам предлагал вариант, но он не обязательный. Каждый может писать все, что ему захочется, не имеет значения. Можно даже по русски писать. Поэтому я и не предлагал замены.
Недавно я переделал сайт программы на такой https://kohnvict.ucoz.ru/vkacl/info-pro.htm. Там большой список статей о языке. И указан адрес сайта. Это ошибка, я заменю этот адрес на адрес электронной почты. Все вопросы можно задавать в почту, а я буду отвечать на сайте. Нужна обратная связь. Я уже писал, что сам учил Джаву по книгам, где все было по дурацки написано и ничего не понятно. Только примеры и помогли понять язык. Очень трудно понять как думают другие люди. Ведь у каждого свой опыт.
Новое компактное описание одним файлом тут https://kohnvict.ucoz.ru/acl/acl-info.htm Туда я тоже напишу про это.
Я все делаю иначе, чем все, потому можно спрашивать. Мне то все кажется очевидным.
----------------------------------------------------------------
2025-02-09 20:46:57 | index | Автор сайта

(""любой язык программирования делает одно и то же."")
Но по-разному. Разница делает одни языки современными, а другие -- устаревшими.
(""новое сейчас только нейронные сети."")
Это не так.
(""Про язык Java. Он устарел не более, чем Питон."")
Попробуйте сравнить с Rust и понять, почему Rust считается более современным. Конечно, если есть желание и время это делать.
(""это сейчас модный язык номер 1. Как вы это объясните?"")
У него низкий порог вхождения, его часто делают первым изучаемым языком. Минималистический синтаксис. Всего понемногу, а в сумме это сделало его модным. При этом, надо помнить, мода зла, полюбишь и козла.
(""умных людей в России сейчас намного меньше, чем было в СССР — это факт.""). Как минимум, в два раза -- население РФ в два раза уступает населению СССР. 
(""Таких, как я, программистов среди физиков больше нет. Я ведь всех вижу."")
Точно всех? Даже тех, кто в почтовых ящиках? Знаете всех, кто запускал (,,Буревестник,,), (,,Посейдон,,) и (,,Орешник,,)? Может, Вы были знакомы с покойным Караваевым, который взял и изобрёл <a href="tipy-v-inzhenernyh-zadachah.php">особый вид типизации</a> -- на основе физических величин? Да и его компилятор PL/1 генерировал исполняемый код программ более эффективный, чем Ваш.
(""В США не только русские, там все умные люди со всей планеты."")Да, это называется утечка умов. Надеюсь, когда-нибудь перестанем быть донорами мозгов.(""Америка больше платит, вот все и едут туда."")Госдолг США растёт на триллион долларов каждые 100 дней. Когда начнут жить по средствам, то за деньгами поедут в более хлебные места. Или вернутся назад.
(""И вот им суют совершенно нерабочую версию, зато простую."")
А школьникам как раз и нужно попроще. С другой стороны, КуМир тоже давно устарел. Да и синтаксис содержит много лишнего. Пора бы давно заменить. Но это неподъёмная задача: переучить учителей информатики, перепечатать учебники.(""После Кумира учить какой-то другой язык уже никто не будет."")Тот, кто выбрал профессию программиста, будет. Но кпд можно было бы увеличить, заменив КуМир на что-то современное.
----------------------------------------------------------------
2025-02-09 22:48:47 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Erich

Ответ на пост 281

[q]только потому, что она портит регистры[/q]
В Виндовс это называется реестр. Кстати, я тоже предпочитаю портабл-программы...

[q]ещё хуже, на одной строке вообще может быть несколько букв. Не понимаю кому это может нравиться.[/q]
Наверно, все же несколько операторов? А насчет "кому нравится" - мне, например. Однотипные операторы нет никакого смысла писать по одному в строке, получается огромная простыня. Зачем? Но ведь не обязательно писать в строке несколько операторов, можно по одному. В чем проблема? Но если язык позволяет писать несколько - это плюс языка.
----------------------------------------------------------------
2025-02-10 15:16:00 | index | vkacl

Отвечаю на комментария автора сайта (пост #194). Не буду цитировать просто мысли по прочитанному. Надо бы определить что такое современный язык, а что -- не современный. Это слова не имеющие смысла. Если иметь в виду современный, значит новый, то есть много новых и неудачных языков. Если это значит модный, то снова не годится, мода непредсказуема и не всегда хороша. Есть еще такие понятия как безопасный, быстрый, удобный и так далее. Я лично не понимаю какой язык современный, а какой нет. Понятие быстрый снова зависит от техники. Сейчас в программировании есть много операций без повторения (без циклов). Для таких время 0.0001 сек и 0.1 сек -- одно и то же. Например, рисование графиков для просмотра пользователем. Что касается грамматики языка, то тут все зависит от вкуса пользователя. Люди очень разные, я уже писал об этом. Невозможно сделать ничего, чтобы всем понравилось. На каждый вопрос есть один ответ и второй, прямо противоположный. Это и в семье так, и в науке точно также. Как может разница делать одни языки современными, а другие нет? Это надо объяснить. Иначе это просто пустые слова.
Про Питон, у которого низкий порог вхождения -- это сказки и пропаганда таких фирм, как скилфэктори. Низкий порог вхождения был у Бейсика для 8-мибитных процессоров (в клавиатуре). У меня был такой. Там бейсик делал все, он же был ОС. Сейчас низкий порог может быть только у портабл языков, которые скачал и запустил. И без компилятора. Питон без компилятора, но у него сложностей выше крыши.
Физиков в почтовых ящиках я не вижу, только тех, кто публикуется в интернете. Надо понимать, что физики делают расчеты, часто очень сложные, но по готовым программам. Некоторые до сих пор работают на фортране, но основная масса -- в программах Математика, Матлаб, IDL и им подобных. Таких программ много, есть платные и бесплатные. И это не совсем то, чем занимаются программисты в банках, в интернет торговле и так далее. И все эти программы сделаны американцами. 
Население СССР на число ученых в Москве никак не влияет. Население в Москве только растет. А число ученых в Москве резко уменьшается. Причем 90-е годы прошли, а люди все равно уезжают. Называйте это утечкой мозгов, но дело в том, что мало денег в бюджете России и те растаскиваются чиновниками в огромных количествах. А научные издательства отстали от западных безнадежно. До сих пор не могут интернет освоить. Уже американцы делают сайты для русских ученых. Хотя сама по себе цифровизация и интернет услуги в России на высоте.
Про Rust я почитал. Одно только слово let, которое надо постоянно писать (кстати это уже было много лет назад) бесит. А неизменяемые переменные -- это просто верх идиотизма. Назвали бы хоть постоянные. Ну как переменная не может изменяться. Я понял так, что деградация общества уже на марше. Кстати в Питоне тоже есть такая фигня. Если нужно обозвать число 999999999999999 буквой x, то можно просто записать x=999999999999999 и больше x не менять. Где же тут минимализм. А в остальном язык такой же, как и все.
Я понимаю, что мои хотелки не всем понравятся. Но я реально хотел сделать минималисткий язык. У меня даже цикл только самый простой и нет условий. Да, язык опасный, не все ошибки отслеживаются, но для интерпретатора это не страшно, очень быстрая обратная связь и все можно отследить. С другой стороны, сложности развивают интеллект, а все удобства и безопасность делают людей идиотами. Процесс уже пошел. Но ИИ скоро всех отучит думать. Философы об этом писали еще 100 лет назад, когда только появилось электричество и бензиновые моторы.
Я еще раз повторяю. Я делал язык для себя и если я найду хоть одного человека, которому он понравится, то и достаточно. Хотя такие люди были и сейчас есть, но не программисты.
Да, еще хотел сказать, что мой язык исполняемый код не генерирует. Он использует байт-код, который исполняет JRE. А вот JRE продолжает развиваться, но это уже не моя забота. Кроме того, с моим языком можно использовать и старые версии JRE в портабл варианте.
----------------------------------------------------------------
2025-02-10 15:32:17 | index | Gudleifr

(""Надо бы определить что такое современный язык, а что — не современный. Это слова не имеющие смысла"")Не имеющие в практике программирования. Но глубоко осмысленные на сайте обсуждения и систематизации синтаксиса языков программирования в сферическом вакууме. Здесь требуется критерий сравнения разных решений в условиях непонимания их работы и применимости. Отсюда все эти разговоры об удобстве, безошибочности, наглядности и, наконец, современности.
----------------------------------------------------------------
2025-02-10 17:51:49 | index | MihalNik

[q]Физиков в почтовых ящиках я не вижу, только тех, кто публикуется в интернете.[/q]
Сейчас это автоматически дань Дяде Сэму.

[q]Надо понимать, что физики делают расчеты, часто очень сложные, но по готовым программам. Некоторые до сих пор работают на фортране, но основная масса — в программах Математика, Матлаб, IDL и им подобных.[/q]
На Лоре утверждают, что сейчас в основном С++.

[q]Население СССР на число ученых в Москве никак не влияет. Население в Москве только растет. А число ученых в Москве резко уменьшается. Причем 90-е годы прошли, а люди все равно уезжают.[/q]
Так климат сильно лучше пока не стал, зачем жить на болотах пенсионерам и удаленщикам? Ах, да, деньги... Горе от ума.

[q]А неизменяемые переменные — это просто верх идиотизма. Назвали бы хоть постоянные. Ну как переменная не может изменяться. Я понял так, что деградация общества уже на марше.[/q]
Так это стандартная школьная математика. Еще с советских, наверное, учебников от Ваших великих ученых (а может и с имперских, тут нужны лисолапки). Где "переменная" x=5 после x=10 это противоречие. Но Вы ж по-русски ничего не читаете и живите как будто в другой стране.
А потом удивляетесь, что русским языком вокруг Вас никто не владеет.
----------------------------------------------------------------
2025-02-10 18:24:29 | index | Вежливый Лис

[q]лисолапки). Где "переменная"[/q]
И, что мне теперь везде использовать слово "неизвестная"? А в функциональном анализе?
----------------------------------------------------------------
2025-02-10 22:53:01 | index | Автор сайта

(**vkacl**)
(""Надо бы определить что такое современный язык, а что — не современный. Это слова, не имеющие смысла."")
Если Вы запустите производство паровозов, то с конвейера будут сходит совершенно новые паровозы. Но технически отсталые, потому что это -- прошлый век. Вы, наверное, слышали дискуссии о вреде (,,goto,,). Так вот в языках программирования тоже есть устаревшие вещи, которые желательно заменить новыми. Не ради моды, а ради других выгод: для увеличения скорости программирования или для большей безошибочности. Ссылку об этом я уже давал.
(""Есть ещё такие понятия как безопасный, быстрый, удобный и так далее."")
Вот-вот. Например, правила Си позволяют обращаться к массиву по отрицательному индексу. Или вот Вам <a href="o-nepravomernom-dostupe-k-pamyati-cherez-ukazateli.php">о неправомерном доступе к памяти через указатели</a>. А современные языки в этом плане куда строже. Простора для творческого переосмысления достаточно. Что-то и на этом сайте рассматривалось.
(""Что касается грамматики языка, то тут всё зависит от вкуса пользователя."")
Не только. От парадигмы зависит. У Хаскелла синтаксис очень не похож на Джаву, потому что парадигма функциональная.
(""Как может разница делать одни языки современными, а другие нет? Это надо объяснить."")
Я Вам давал ссылку на <a href="tipy-v-inzhenernyh-zadachah.php">типизацию, изобретённую Караваевым</a>. Вам, как физику, было бы интересно с ней познакомиться, мне кажется. Или вот <a href="o-mnogokratnom-rezervirovanii-funktsij.php">моё предложение</a>, а вот <a href="otsenka-nadyozhnosti-funktsii-s-neskolkimi-realizatsiyami.php">оценка его перспективности</a>. Для Вас программирование, вероятно, инструмент, а предметом исследований является физика. Но есть люди, для которых предметом исследований являются языки программирования. Поэтому предлагаются новшества, типа вывода типов, а потом они они входят в повседневность.
(""низкий порог может быть только у портабл языков... без компилятора. "")
Спорное утверждение. Ну и не надо путать собственно язык и его реализацию в компиляторе/интерпретаторе.
(""Физиков в почтовых ящиках я не вижу, только тех, кто публикуется в интернете. Надо понимать, что физики делают расчеты, часто очень сложные, но по готовым программам."")
Говорите, что их не видите, но знаете, какие у них инструменты. А вот для меня было большой новостью, что в РКК (,,Энергия,,) дорабатывается компилятор PL/1, чтобы потом писать на нём ПО. Узнал случайно, виртуально познакомившись с Караваевым. Готов поспорить, что Вы об этом не знали до последнего времени. Или есть язык, разработанный Легаловым, он тоже работают на космос. Скажите, Вы что-то знали раньше о <a href="entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty.php#pifagor">языке Пифагор</a>?
(""число ученых в Москве резко уменьшается"")
Не дадите ссылку на авторитетный источник?
(""мало денег в бюджете России и те растаскиваются чиновниками в огромных количествах."")
На импортозамещение сейчас немало выделяется, в том числе и по линии науки. Негативные явления были и будут, но это не повод обрезать финансы, какой-то процент всё равно дойдёт до цели. Хотя ничего хорошего в воровстве нет, и, надеюсь, демократура клептократии не бесконечна.
(""Уже американцы делают сайты для русских ученых."")
Наука и изготовление сайтов -- плохо пересекающиеся навыки. У нас тоже немало фрилансеров, которым всё равно, для кого делать сайты.
(""цифровизация и Интернет-услуги в России на высоте."")
А мне она не очень нравится своей непродуманностью. Эта цифровизация теперь позволяет грабить людей дистанционно.
(""слово let... бесит."")Не Вас одного.
(""А неизменяемые переменные — это просто верх идиотизма."")
Согласен. Просто понятие (,,переменная,,) стало настолько обобщающим, что применяется и к константам. Изначально оно соответствовало своему смыслу. Но потом усмотрели выгоды от констант, но изобретать новое понятие для обобщающего термина не стали. И вот теперь у нас есть (,,немокрая вода,,) и (,,немасляное масло,,).
(""Да, язык опасный, не все ошибки отслеживаются, но для интерпретатора это не страшно, очень быстрая обратная связь и все можно отследить."")
Для небольших проектов и там, где нет повышенной ответственности за результаты, наверное пойдёт.

(**Вежливый Лис**)
(""(,,неизвестная,,)"")Хорошая идея. Только бы надо подумать над непротиворечивостью с остальной терминологией.
----------------------------------------------------------------
2025-02-10 22:56:54 | index | vkacl

Уже не интересно. Я как раз написал на русском языке большую книгу про свою первую жизнь. Все хвалят. И кучу рассказов про все что видел, читал, смотрел, думал. Я также пишу стихи, правда мало. Вот на этом форуме никто русского языка не знает, потому что кроме двух слов ничего написать не может. Да видимо и читать никто не умеет. Или не хочет. Про свой язык я написал очень много букв. Все написано, но видимо не так. Советы я принял и кое-что исправлю.
----------------------------------------------------------------
2025-02-10 23:07:43 | index | vkacl

Пока читал и писал, пришли новые комментарии. Отвечу когда смогу.
----------------------------------------------------------------
2025-02-10 23:46:13 | index | Gudleifr

(""Отвечу когда смогу"")Не надо отвечать. Напишите, чего хотите от нас.
----------------------------------------------------------------
2025-02-11 00:39:06 | index | Вежливый Лис

[q]надо подумать над непротиворечивостью с остальной терминологией[/q]
Не надо. Потому что в Росстате есть так называемая "методология росстата". Прочитать её нельзя, но она есть. В общем, собирает Росстат значения (статистических) величин, и детально проработал все слова, которыми можно что-либо называть. Т.е. у государства нет проблемы с называниями и терминологией. Проблема непроработанности есть у отдельных коммерсов.
Надо определиться, хотим мы государственный проект или частный. Я так понял, что вы государственный проект не хотите ("государство само скажет, на конкурсах," - говорили вы). Я с этим несогласен. Согласен с БудДеном, который говорит, что в одиночку ничего не получится. У Столмана получилось, у Торвальса получилось, у Мацумото (автор Руби) получилось, но ни у кого из нас не получится, говорит БудДен. Как я могу с БудДеном не соглашаться? Кстати, идёт февраль, это шестой месяц после того момента, когда ИванАс пообщещал закончить работу над русскоязычным ассемблером за полгода.
----------------------------------------------------------------
2025-02-11 01:57:02 | index | MihalNik

[q]И, что мне теперь везде использовать слово "неизвестная"?[/q]
Можете даже после выражения "x=10", если ничего не смущает)
----------------------------------------------------------------
2025-02-11 02:14:11 | kompyuternye-rebusy-i-etyudy-dlya-programmistov | MihalNik

[q]"У самих револьверы паяльники найдутся..."[/q]
Тут больше вопрос наличия понимания насколько там вообще живая проводка, а то может лежать местами с разложившейся изоляцией не только в бетонных штробах но и в трухе под деревянным полом соседей. А заземления в какой-нибудь газифицированной хрущевке может вообще не быть. Две одинаковых фазы от двухклавишного выключателя позволяют настроить три интенсивности освещения люстры.
----------------------------------------------------------------
2025-02-11 02:37:35 | kompyuternye-rebusy-i-etyudy-dlya-programmistov | Вежливый Лис

[q]Две одинаковых фазы от двухклавишного выключателя позволяют настроить три интенсивности освещения люстры.[/q]
Зачем для этого фазы? Достаточно просто двухклавишного выключателя. Люстра выключена - нулевая интенсивность. Первой клавишей включена половина ламп - вторая интенсивность. Второй клавишей включена вторая половина ламп - третья интенсивность. Фазы при этом достаточно одной.
----------------------------------------------------------------
2025-02-11 03:06:36 | kompyuternye-rebusy-i-etyudy-dlya-programmistov | MihalNik

[q]Фазы при этом достаточно одной.[/q]
Так она и есть одна. Читайте внимательно. Ровно про то и речь.
----------------------------------------------------------------
2025-02-11 07:32:01 | index | vkacl

Полтора года назад я записал на Ютубе видео сразу после того, как сделал новую версию программы. Его посмотрели более 2000 раз, но с рекламой пришлось постараться. Ютуб уже недоступен и я скопировал видео на свой канал в сети ВК. Вот ссылка.
https://vkvideo.ru/playlist/224526808_2/video224526808_456239274
Видео немного устарело и я уже записал много других, но в качестве Ведения в тему оно вполне подходит. Тем, кому интересно как работает мой язык программирования, предлагаю посмотреть. Разумеется я получил много комментариев к этому видео. И что можно было сделать покороче, и что речь у меня не очень красивая. Но критики по существу было мало. Готов послушать реакцию профессионалов.
----------------------------------------------------------------
2025-02-11 08:10:08 | index | Вежливый Лис

[q]Тем, кому интересно как работает мой язык программирования, предлагаю посмотреть.[/q]
Всё всё по-разному воспринимают. Я, например, лучше воспринимаю текстом (потому что это рекомендации ООН - основной способ хранения информации - текст). Нет в программировании ничего такого неопредлённого, что обязательно бы требовало показывать действия (в отличии, например от вытачивания деталей на станках).
Поэтому, чтобы было понятно, почему должно быть интересно узнавать что-либо про ваш язык, вы бы написали аннотацию... Учёный же, должны уметь.
----------------------------------------------------------------
2025-02-11 08:32:21 | index | Денис Будяк

""Это ещё одна, 2-я, бомба, которая разрушит Россию изнутри. Первой является ЕГЭ. И в Кумире все равно используют два языка. Переменные пишут латинскими буквами. Интерес к школьникам у меня пропал.""

Вы же учёный, изучите историю вопроса. Когда появился КуМир, кто его сделал и зачем. 

А так в общем-то, раз вспомнили про латынь. Да, мы пишем физические величины латинскими буквами (в КуМире это не обязательно, можно и кириллицей). Но куда же делась остальная латынь? Почему вместо неё стал английский? В России до определённого момента (у меня на сайте есть, но я даже ссылку не дам, т.к. мой сайт всё равно никому не нужен, в т.ч. и Вам) диссертации защищались исключительно на латыни, потом русский тоже был допущен. Теперь вот английский вытесняет русский. Если латынь куда-то делась, и русский тоже потерял свою роль в программировании, то почему английский никуда не денется? Может быть, птица определяется по-другому?

Ещё дальше. Вы отказываетесь от целого русского, который знают несколько сотен миллионов человек, и даже заявляете, что не будете читать программ на русском языке - это уже заявление борца, а не учёного. Вы отказываетесь читать программы на русском, и предлагаете нам ваш язык программирования, который знаете только Вы. Знаете, в программировании уже сложились традиции, как излагать программы. Давайте мы тоже встанем в позу борца и скажем, что не будем читать программы на Вашем языке. Что дальше?
----------------------------------------------------------------
2025-02-11 11:06:25 | index | Денис Будяк

(""cлово let... бесит."") хорошо, используйте слово "пусть" - прямо из математики, собственно откуда же и let, 
и означает то же самое. 
(""А неизменяемые переменные — это просто верх идиотизма"") - как раз она-то и вводится словом "пусть". 

Она, с одной стороны, переменная, т.к. её значение разное при разных обращениях к этому фрагменту кода.
С другой стороны, её можно присвоить только один раз, во время инициализации. Т.е. в рамках одного выполнения 
динамической области видимости эта переменная будет одинаковая. Это то, как ведут
себя переменные в математических выкладках. В программировании значение переменной может меняться по ходу выписывания
выкладки. 

Конечно, соответствие не совсем одинаковое, в выкладке может быть описана итерация по переменной, допустим, если написан
интеграл по dx. Но близкое. Они в любом случае отличаются от констант, таких, как Пи.
----------------------------------------------------------------
2025-02-11 11:20:10 | index | Денис Будяк

(** Вот на этом форуме никто русского языка не знает, потому что кроме двух слов ничего написать не может. Да видимо и читать никто не умеет. Или не хочет. Про свой язык я написал очень много букв. Все написано, но видимо не так.  **)

Проблема с вашим языком в том, что, во-первых, здесь каждый Наполеон и делает, будет делать или уже сделал свой самый лучший язык. Так что Вы попали в палату таких же, как Вы. Во-вторых, Гугл потратил большие деньги, чтобы распространить свой язык, который был полностью готов и обладал существенной новизной. Например, один из способов увеличения популярности языка - это создать искусственные рабочие места на пустые (никому не нужные) проекты. Если эти вакансии будут висеть долго, кто-то поверит, что этот язык интересен как навык, который можно продать на рынке труда. Ну хотя бы нужно 50 рабочих мест создать при зарплате хотя бы 300. Т.е. всего-то нужно 15 миллионов в месяц тратить. Через пару лет есть шанс, что ваш язык "взлетит", если он действительно хорош. Если он под JVM, то вряд ли есть такие шансы - под JVM уже этого добра более чем навалом. У Вас нет столько денег, поэтому у Вас очень мало шансов. Мы живём в мире избыточного изобилия языков.  
              
В-третьих, здесь общественным консенсусом является то, что программировать на русском языке и в кириллице - это нормально. К Вам, я вижу, нормально относятся, но Вам делают скидку на самом деле.
----------------------------------------------------------------
2025-02-11 11:20:37 | index | Денис Будяк

Извините, пока не осилил разметку :)
----------------------------------------------------------------
2025-02-11 19:12:56 | kompyuternye-rebusy-i-etyudy-dlya-programmistov | Gudleifr

(**Вежливый Лис**) и (**MihalNik**)
И что мы тут имеем? Двух электриков, не способных к программированию? Или двух программистов, не понимающих сущность электрической задачи?
----------------------------------------------------------------
2025-02-11 23:03:06 | kompyuternye-rebusy-i-etyudy-dlya-programmistov | MihalNik

[q]Вежливый Лис и MihalNik
И что мы тут имеем?[/q]
Страну, производящую по 6 кило меди на человека ежегодно.
----------------------------------------------------------------
2025-02-12 09:59:25 | index | Автор сайта

(**Вежливый Лис**)
(""вы государственный проект не хотите"")
Ровно наоборот -- государственный проект не хочет меня. Когда-то МО США проводило конкурс на создание языка программирования, так появился язык Ада. У нас никогда такого не было.
(""Я... лучше воспринимаю текстом... Нет в программировании ничего такого..., что обязательно бы требовало показывать действия"")<a href="pro-lebedej-rakov-i-schuk.php">О том же</a>.

(**Денис Будяк**)
(""здесь каждый Наполеон и делает, будет делать или уже сделал свой самый лучший язык. Так что Вы попали в палату таких же, как Вы."")Да, как говорится, добро пожаловать в серпентарий единомышленников. Но доктора наук и не такое видели, наверное. Их среда ещё более конкурентная.
(""один из способов увеличения популярности языка — это создать искусственные рабочие места на пустые (никому не нужные) проекты."")Эта опция для тех, у кого есть деньги. Язык Котлин пробивался вверх не так.
(""Мы живём в мире избыточного изобилия языков."")Это точно. Как-то на Хабре была статья (,,Доказательное программирование,,), где автор статьи требует, чтобы новые языки доказывали, что они лучше старых. В чём-то он прав.
----------------------------------------------------------------
2025-02-12 17:09:13 | index | Gudleifr

(""Мы живём в мире избыточного изобилия языков"")Дейкстра как-то сказал, что в программировании язык эквивалентен машине. Но, говоря о машинах в широком смысле, мы вполне очевидно понимаем, что экскаватор отличается от самолета. Почему же мы не требуем изготовления языков для явно существующих практических задач? Зачем изобретаем самолето-экскаватор по нормам токарных станков?
----------------------------------------------------------------
2025-02-12 17:58:54 | index | Денис Будяк

(""Язык Котлин пробивался вверх не так."")
Так. Когда JB стартовали Котлин, у них уже был хороший доход и у них была такая необходимая вещь, как ИСР. И сделали они Котлин для того, чтобы продавать свою ИСР, потому что без ИСР на нём невозможно работать из-за сложных правил затенения и типизации. Т.е. тут налицо большие инвестиции в сам язык, и в его инструментарий. А бесплатная реклама у них уже и так была - они могли её размещать в своей среде, которая уже имела на тот момент мировое признание.
----------------------------------------------------------------
2025-02-12 18:02:50 | index | Денис Будяк

И кстати, у JB была команда разработчиков. Естественно, они создавали новый язык, веря, что он лучше, чем голая Java. Они могли принять решение, что такие-то и такие-то проекты у нас отныне пишутся на Котлине, и им не нужно было преодолевать сопротивление своих наёмных сотрудников. Т.е. и в плане генерации вакансий тоже так.      

Примерно подобная ситуация была в КВОРУМе. Когда я туда пришёл, никто не обсуждал, нужны ли новые ЯП. У них была конкретная задача и они сделали под неё ЯП. Не надо было его никому впаривать - они сами на своих языках писали. Т.е. сразу были достаточные инвестиции, внутренний спрос и полная экосистема. И в КВОРУМе, и в Гугле, и в JetBrains. А совсем другое дело, если Вы, не будучи кем-то (да и не сделав ничего - у Вас же нет проекта языка, только идеи), выходите в чисто поле и начинаете всех призывать под свои знамёна. И в ЯОС так же. И у Лиса с его лисопланом так же.
----------------------------------------------------------------
2025-02-12 18:05:51 | index | Вежливый Лис

> да и не сделав ничего

Эксперт по обесцениванию. Это невежливо.
----------------------------------------------------------------
2025-02-12 18:14:25 | index | Денис Будяк

И да, количество человек в команде - 1 - это тоже большой минус для государства. Даже если надо, допустим, дыру в дороге заделать, коллективные обращения имеют больший вес, чем индивидуальные. Команда из одного человека - значит, либо идея дурная и некто её не понял, значит, плохой организатор и деньги такому выделять бесполезно. Если у него проблема, значит это его личная проблема, а он в государстве лишь атом и его проблемы значения не имеют. Так мыслит государство и оно в этом право. Так что если государство Вас не хочет в гос.проекте, то это на Вашей стороне проблема.
----------------------------------------------------------------
2025-02-12 18:35:20 | index | Денис Будяк

Лис, годы летят, мы вот ещё живы, но это нам повезло. Лет пролетело уже достаточно для оценки сделанного и экстраполяции будущих успехов.
----------------------------------------------------------------
2025-02-12 20:51:34 | kompyuternye-rebusy-i-etyudy-dlya-programmistov | Gudleifr

Даю наводку к электрической задаче. Все дело в выборе удачного типа данных. Желателен язык, умеющий работать с указателями на ф-ии.
----------------------------------------------------------------
2025-02-12 22:27:30 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Иван

Было предложение увеличить число пользователей самодельных программ языков программирования если авторы найдут способ взаимодействовать между собой.


[q]Я заинтересовался программой GAZ, так как исходная идея создания языка типа команд ОС (Виндовс или Юникс) в моем случае как раз и реализована в полной мере. Но обнаружил, что нет не только учебной информации о программе GAZ, но и контактов автора Ивана.[/q]

Как это нет? Контакты есть на сайте osinavi.ru - где выложен компилятор и примеры - хотя основная идея сайта в автоматизации магазинов - но там язык в этой области применяется очень активно. Гуглится страничка легко по запросу "компилятор GAZ". Там и почта и телефон. Лучше на почту написать, так как это даёт ответить в удобное время. Я не знаю - можно ли здесь давать прямую ссылку - поэтому написал так.


[q]Пока я не хочу устанавливать вашу программу только потому, что она портит регистры.[/q]

Ну можно на VirtualBox поставить. Если программа не будет ничего писать в реестре - то ничего не получится, в том числе и расширение "gaz" в системе не зарегистрируется.


[q]И нет указания как её удалить полностью после установки.[/q]

Писал для себя. Удалять не было необходимости. В крайнем случае можно снести каталог c:\windows\entry (программа ставится в этот каталог, чтобы быть "поближе" к винде - так изначально было задумкой - хотя если бы я делал сейчас - то ставил бы в каталог c:\gaz).

А что там компилятор пишет в реестре уже и не помню толком - много что делает. Для чего-то это нужно было значит - явно цели не было загадить реестр - так как самому и пользоваться.

Думаю, любой компилятор пишет в реестр - как Delphi, так AutoIt итд.


[q]Я люблю портабл программы, которые можно запускать с флешки или внешнего винчестера. Моя как раз такая.[/q]

Они портативные и получаются по итогу. Можно откомпилировать gaz-скрипт в exe у себя на компьютере и конечный exe уже никуда не будет писать в реестр.

Кроме того, есть GAZ.dll там выложена на странице - можно попробовать её . Она, думаю, не пишет в реестр (хотя это не точно, но скорее всего так). GAZ.dll встроена во многие мои проекты, где нужен встроенный простой интерпретатор.


[q]О примерах программ на любом языке. Просто писать код только по описанию нового языка очень сложно. Примеры программ хороши для изучения языка.[/q]

Вот у меня как раз документация на примерах. Как такового описания языка нет, есть только примеры. И язык сугубо практический, никакой красоты языка в нём особо нет - в планах - кстати, есть доработки, которые можно делать 10 лет - но наверное, им не суждено будет сбыться - так иногда немного делаю. Что было нужно мне лично, то в него и добавлял. Массивы были изначально, так как по этой теме писал курсовик у Сергея Свердлова.
----------------------------------------------------------------
2025-02-13 23:17:30 | otechestvennye-razrabotki | Бурановский дедушка

https://www.cnews.ru/news/top/2025-02-12_ostavte_otechestvennye_cpu(""Проект постановления правительства предусматривает запрет (с 1 июня 2025 г.) на внесение своего ПО госкомпаниями в реестр российского ПО. За исключением случаев, если у него нет отечественных аналогов или на него повышенный спрос. Так же планируется обязательная совместимость хотя бы с одним российским процессором (с 2028 — с двумя)."")Интересно, что компилятор C++ от МЦСТ для «Эльбруса» с 2028 года считаться российским не будет — он же только для одного «Эльбруса».

Это повод сделать российский LLVM/Clang/GCC для переносимости, чтоб ПО было легче приобрести статус отечественного. Кстати, 1С, самое тиражное российское ПО, есть в этом реестре? Формально оно считается российским?

А вот бизнес (Ассоциация предприятий компьютерных и информационных технологий, АПКИТ и Ассоциация крупнейших потребителей ПО и оборудования, КП ПОО) против таких строгих правил, просят избавить от совместимости с российскими процессорами и операционными системами.
----------------------------------------------------------------
2025-02-13 23:33:49 | vse-yazyki-ekvivalentny-no-nekotorye-iz-nikh-ekvivalentnee-drygikh | Бурановский дедушка

https://www.cnews.ru/news/top/2025-02-13_programmisty_vlyubilis_v
(""Программисты влюбились в «быстрые» языки. Дикими темпами растет интерес к Rust, Go и С++, но самый популярный в мире - «медленный» Python.

Когда миру нужно обрабатывать все больше и больше чисел в секунду, а аппаратное обеспечение развивается недостаточно быстро, скорость программ становится важной.

Существует еще одно определение «быстроты» языка программирования -- это время, затрачиваемое на полный цикл создания программы, от первой строчки кода до запуска исполняемого файла. Скорость работы программы от языка, на которой она написана, хоть и зависит, но не полностью, ведь ей также нужно взаимодействовать с различными файлами, а это уже зависит от «железа»."")
Это из свежего рейтинга Tiobe, который строится в первую очередь на основе анализа статистики поисковых запросов в Google, Bing, Yahoo, Amazon и «Википедии». Интересно, что у Яндекса доля поисковых запросов выше, чем у Yahoo, но его не учитывают. Наверное, по причина та же, что и у отлучения отечественных разработчиков от разработки ядра Linux.
----------------------------------------------------------------
2025-02-18 12:28:36 | index | vkacl

Я попробую объяснить как я сам вижу проблему. Компьютеры создавались, чтобы получать результаты расчетов. Сначала, например,  был космос и ядерные испытания. Нужны были программы и совершенно не важно как они созданы и на каком языке написаны. Хоть в нативном коде (ассемблере). До сих пор есть люди, которые на нем пишут. А дальше было так. В самом начале программы писались на одну функцию, например, менеджер файлов. Он только показывает файлы и больше ничего не делают. Другая программа только показывает картинки и все, снова больше ничего не делает. Или вот еще программа, которая из серии картинок делает анимированный gif. И все. И вот такие программы компилируют, и они как семечки плодятся в огромных количествах. И для них нужна ОС, потому что ими надо управлять.

А потом стали появляться программы монстры, которые делают очень много функций сразу. И тут возникла проблема, что для таких программ надо писать входные данные, то есть указывать что надо делать и как. И вот эти входные данные текстом постепенно стали оформляться как ЯП для интерпретатора. Сама программа монстр компилируется. А входные данные не компилируются. А потом придумали, что хорошо бы программу монстр сразу прокомпилировать в разных ОС, да так, чтобы входные данные переносились из одной ОС в другую без изменений. Так появилась виртуальная машина. А потом еще решили, что виртуальная машина будет лучше работать если входные данные ей подать в более удобном для нее виде. Так появился байт-код. Но для виртуальной машины байт-код удобен, он один во всех ОС, все как хотели, а для человека не удобен. И появились компиляторы в байт-код.

Ну, а на следующем этапе оказалось, что и исходный язык программирования тоже не всех устраивает и компилировать не хочется, а сразу исполнять. Так появился мой интерпретатор vkacl для виртуальной машины. То есть моя программа сразу записана в байт-код. Его можно переносить в разные ОС без изменений. А вот сама она читает мой ЯП как входные данные. И чтобы этот процесс тоже шел быстро я пишу все очень компактно, код программы имеет мало байтов и номера байтов этого кода фактически являются метками. Оператор goto я делать не стал, но иногда бывают ситуации когда он все же необходим. А текст моей программы -- это почти байт-код, но понятный человеку, хоть и не сразу. Там нет ни русского ни какого-то другого языка, хотя комментарии можно писать на любом языке. Читать код как прозу -- большая глупость. Ведь долго печатать, и без среды разработки уже никто не умеет работать. А это еще одна головная боль, ее снова надо учить.
----------------------------------------------------------------
2025-02-18 12:32:19 | index | Gudleifr

Постановка проблемы правильная. Она давно решена: https://gudleifr.forum2x2.ru/t3-topic#222
----------------------------------------------------------------
2025-02-18 13:35:07 | index | Вежливый Лис

> Я попробую объяснить как я сам вижу проблему.
Мне кажется, что БудДен видит проблему лучше (но всё равно видит её недостаточно хорошо).
Пробовать объяснять я не буду, надоело уже.
----------------------------------------------------------------
2025-02-18 15:35:44 | index | Бурановский дедушка

(""А потом стали появляться программы-монстры, которые делают очень много функций сразу. И тут возникла проблема, что для таких программ надо писать входные данные, то есть указывать что надо делать и как. И вот эти входные данные текстом постепенно стали оформляться как ЯП для интерпретатора."")
vkacl, слишком примитивный взгляд на ЯП. Писать программы-монстры начали очень давно. Например на Коболе для банков и финансовых компаний. Для того же космоса и атомщиков писались расчётные программы-монстры. Программы компилировали и в этом ничего страшного не было, потому что всё это работало быстрее, чем то, что писалось на интерпретируемом Лиспе.
(""Сама-программа монстр компилируется. А входные данные не компилируются."")А зачем данным компилироваться? Они лежат себе в базе данных или в файле. Когда надо -- читаются и пишутся. Была такая СУБД Adabas -- разве её надо было компилировать?
("" А потом придумали, что хорошо бы программу-монстр сразу прокомпилировать в разных ОС, да так, чтобы входные данные переносились из одной ОС в другую без изменений. Так появилась виртуальная машина."")
Это задолго до виртуальных машин делалось. Просто с ними появилась ещё одна опция.
(""исходный язык программирования тоже не всех устраивает и компилировать не хочется, а сразу исполнять."")
Где-то такое я уже слышал:
(""Готовить еду не хочется, лучше сразу есть."")
В компиляции нет ничего плохого. Если это заставляет делать лишние движения, то значит недостаточно плохо автоматизированы рутинные действия. Можно сделать так, чтобы для завершения редактирования исходника и запуска программы нужно нажать всего одну кнопку.
----------------------------------------------------------------
2025-02-18 16:17:40 | index | vkacl

Опять неправильные комментарии. Возможно я сам виноват. Напоминаю.
1. В посте #169 я дал ссылку на большую статью, где рассказал свою историю. Там написано, что я свой ЯП сделал в 1992 году. Тогда Виндовс не было, Компиляция по каждой ерунде делалась долго. И отказ от нее значительно сокращал время работы. Особенно с графикой, которая уже была. Нажать одну кнопку -- это проблему не решало. Надо было еще долго подождать. Я уверен, что и сейчас виртуальную машину компилировать совсем не быстро.
2. У интерпретируемых языков есть возможности, каких нет у компилируемых языков. Про это я могу написать, если интересно. И ради этих возможностей я даже слышать не хочу о компиляции. Скажу только об одной. Интерпретируемую программу можно сделать бесконечной. Объединить все программы мира в одну программу. Попробуйте собрать весь код в мире и прокомпилировать его.
3. Новая версия моего языка появилась только в 2003 году. И даже тогда еще компиляторы работали не быстро. Интерпретаторы тоже, но у Джавы разницу в скорости расчетов с фортраном я не заметил. А если и была то на проценты. Просто не надо было выключать программу, она работала постоянно. И сейчас моя программа работает постоянно и делает все, что мне надо. Других программ я почти не использую. Я слышу от ПРОФИ, что мол Джава хороша только на серверах. Но и ПК может работать как сервер. Нет никакой разницы.
4. Я могу согласиться, что в Библии написано все, что мы знаем и не знаем. Так вот многие комментарии ясно показывают, что про меня их авторы ничего не знают. Потому и комментарии неправильные.
----------------------------------------------------------------
2025-02-18 16:39:06 | index | Gudleifr

(""Я могу согласиться, что в Библии написано все, что мы знаем и не знаем"")Вот из этого и исходите. Все, что сделано в программировании за последние полвека - это именно от непонимания бородатых классиков. И Ваш велосипед не лучше и не хуже прочих, которых у каждого целый склад.
----------------------------------------------------------------
2025-02-18 21:49:17 | index | Автор сайта

Да, раньше компиляция была долгой.
(""и сейчас виртуальную машину компилировать совсем не быстро."")
Вообще-то есть проекты, где операционки инсталлируются компиляцией из исходников. Например, (,,Bootstrapping Nix and Linux from TinyCC,,). Денис Будяк компилирует свою ОС за секунды. Ну а ВМ по объёму, наверное, меньше операционки. Хотя смотря какие ВИ и ОС сравнивать. Но с современными процессорами всё делается быстро, с 1992 годом не сравнить.
----------------------------------------------------------------
2025-02-19 00:10:15 | index | MihalNik

[q]я свой ЯП сделал в 1992 году. Тогда Виндовс не было, Компиляция по каждой ерунде делалась долго. И отказ от неё значительно сокращал время работы.<...>
Новая версия моего языка появилась только в 2003 году. И даже тогда ещё компиляторы работали не быстро.[/q]
Да ладно. Частота процессоров выросла [b]раз в 100[/b]. Делфи7 какая-нибудь компилировала и запускала программы в секунду-две на 2-3 ГГц. А разница по производительности программ между быстро скомпилированными и долго оптимизируемыми раза в полтора-два.
Сомневаюсь что и в 1992 исходники на Оберонах/Модулах/Паскалях долго компилировались, тем более мелкие. Тогда уже вышел Borland|Turbo Pascal 7.0 - и через десять лет в вузе удельного городишки бедного региона на самых дохлых компах в машзалах никакой задержки до запуска программы от момента перекомпиляции не ощущалось.
----------------------------------------------------------------
2025-02-19 01:47:00 | index | Gudleifr

Скорость компиляции тут ни при чем. Совсем.
----------------------------------------------------------------
2025-02-19 17:57:11 | index | Клихальт

[b]MihalNik[/b]

[q]Сомневаюсь что и в 1992 исходники на Оберонах/Модулах/Паскалях долго компилировались, тем более мелкие. Тогда уже вышел Borland|Turbo Pascal 7.0 — и через десять лет в вузе удельного городишки бедного региона на самых дохлых компах в машзалах никакой задержки до запуска программы от момента перекомпиляции не ощущалось.[/q]
За 92 не скажу, а вот в 89 нам в лабораторию поставили Mazovia CM-1914 с мерзким чёрно-зелёным монитором и 20Mb жестким диском, так вот моя задача на Turbo-C на ней собиралась около получаса и я не сказал бы, чтобы она была огромной.

[b]Gudleifr[/b][q]Скорость компиляции тут ни при чем. Совсем.[/q]
Так что скорость компиляции тогда была очень даже при чём.
----------------------------------------------------------------
2025-02-19 18:11:10 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Иван

Я-то думал, что всё стабильно и давно выверено, а нет. Нашёл баг 2009 года в 2025 году и исправил сегодня. Наличие этого бага не помешало написать 200 тысяч строк. Я к тому, что если компилятор без исходного кода и автор не отвечает то я бы такой компилятор не рискнул использовать.
----------------------------------------------------------------
2025-02-19 18:23:40 | index | Gudleifr

(""За 92 не скажу"")Опять Ваши байки...
----------------------------------------------------------------
2025-02-19 18:34:21 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Вежливый Лис

[q]если компилятор без исходного кода и автор не отвечает[/q]
Miscrosoft C/C++/C# compiler-ы, например. Ничего, люди пользовались (и пользуются).
----------------------------------------------------------------
2025-02-19 18:57:27 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Иван

У меня баг обнаружился в процедуре GetWindows. Из-за этого вся сборка проектов сегодня встала. До этого работало нормально 13 лет. Длина текста в названии окна просто превысила 127 символов, которые были выделены под переменную. И делай что хочешь - но без пересборки компилятора было никак (разве что не пользоваться этой процедурой/пытаться переписыванием кода и костылями обходить баг).
----------------------------------------------------------------
2025-02-19 19:00:07 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Иван

[q]Miscrosoft C/C++/C# compiler-ы, например. Ничего, люди пользовались (и пользуются).[/q]

А разве у этих компиляторов нет техподдержки и новых версий?
----------------------------------------------------------------
2025-02-19 20:47:15 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Автор сайта

(""если компилятор без исходного кода и автор не отвечает, то я бы такой компилятор не рискнул использовать."")
Под (,,отвечает,,) можно понимать разное. Отвечает, в смысле есть обратная связь. И отвечает в смысле юридически за свою работу. Со вторым беда: все прячутся за формулировкой (,,as is,,), (,,как есть,,), и тут вряд ли что-то измениться в ближайшем будущем. А в плане обратной связи тоже трудно что-то добиться от Microsoft, Google и т.д. Кто-то может похвастать обратной связью с разработчиками GNU Compiler Collection?

К слову, разработчик PL/1-KT тоже с весны прошлого года не отвечает. &#128549;
----------------------------------------------------------------
2025-02-19 21:12:26 | index | Автор сайта

В 1992 году самыми ходовыми персоналками были PC XT. На них программы на Clipper компилировались столько времени, что этого было достаточно для перекура. То есть минут 5, не меньше. Проблема долгой компиляции была не надуманной. Через несколько лет, в 1996 году, на Pentium компиляция программ на Clipper укладывалась в 2 -- 3 секунды. В 1996 начал программировать на Си, по ощущениям компиляция была быстрее, чем у Clipper.
----------------------------------------------------------------
2025-02-19 21:14:56 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Иван

Да - отвечает это в том смысле, что есть обратная связь. Или есть исходный код. Но своим же компилятором, не имея его исходного кода я бы пользоваться не стал, даже с обратной связью, так как разработчик может и забить. При этом иногда хочу чтобы он продвинулся, но не хочу раскрывать исходный код. Вот такой парадокс.
----------------------------------------------------------------
2025-02-19 21:42:07 | index | Gudleifr

(""Проблема долгой компиляции была не надуманной"")Но не имеет ничего общего с темой "языков с вводом".
----------------------------------------------------------------
2025-02-19 21:55:41 | index | MihalNik

[q]в 1989 году нам в лабораторию поставили Mazovia CM-1914 с мерзким чёрно-зелёным монитором и 20Mb жестким диском, так вот моя задача на Turbo-C на ней собиралась около получаса и я не сказал бы, чтобы она была огромной. Так что скорость компиляции тогда была очень даже при чём.[/q]
Тут надо учитывать много факторов. От запутанности грамматики до сложных оптимизаций, сырости продукта и стиля кодирования.
Например, любимый автором TinyCС, появившийся в 2002, не имеет оптимизаций переходов как Turbo-C 1.0 1987-го.
В серьезных теорях оптимизации полчаса для 10 МГц это ни о чем, NP-класс сложности все-таки. Но и более ограниченный задачи могут решаться долго + косяки в реализации легко увеливают время в разы.
Turbo-C был сторонним продуктом для Borland'а. Потом отдельно заказывали разработку для С++ и еще снова полностью переписывали.
В то же время Turbo Pascal 4.0 того же 1987-го уже умел раздельную компиляцию - пишет Вики. Ну, значит, устраивало, раз не перешли на Паскаль. Возможно и тогда программы на Сишке путем дольших усилий и дольшей компиляции работали быстрее.
Что из этих полчаса разбор, а что оптимизация - оценить не могу.
Так же как и возможный эффект от сокращения имен и простановки скобок для ускорения разбора грамматики.
----------------------------------------------------------------
2025-02-19 22:29:05 | index | Автор сайта

(""TinyCС... не имеет оптимизаций переходов как Turbo-C 1.0"")
Не удивляюсь. Чем-то надо платить за высокую скорость компиляции.
(""Turbo-C был сторонним продуктом для Borland'а."")
Это чувствовалось. Объявления переменных в их версии Си надо было делать, как в Паскале: в функции сперва все объявления, и только потом код.
----------------------------------------------------------------
2025-02-19 23:18:56 | novosti | Ньюсмейкер

В Москве горит Институт вычислительной техники. У здания обрушилась кровля.
https://russian.rt.com/russia/news/1437446-moskva-institut-tehnika
----------------------------------------------------------------
2025-02-20 08:52:00 | index | vkacl

1. Я написал новую статью, где показаны 2 примера программ на моем языке vkacl и дано полное описание того, что делается и как. Мой язык весьма далек от Паскаля и Си. Если сравнивать, то он частично похож на командный язык операционных систем и Постскрипт. В первом примере показан калькулятор, который невозможно написать на компилируемом языке. Вот ссылка на статью
 https://kohnvict.ucoz.ru/vkacl/vkacl-examples.pdf
2. Мне прислали забавную штуку, в которой написана программа QR, которая генерирует код на другом языке и так по цепочке более 50 языков. Автор Yusuke Endoh. И так есть интересная картинка со списком 128 языков. Вот ссылка на картинку https://raw.githubusercontent.com/mame/quine-relay/master/langs.png 
3. Языков точно намного больше, чем необходимо, и многие языки ничем не отличаются по сути. Хорошие языки только те, на которых уже написано много программ, интересных для всех. Как раз этим Питон и Джава и отличаются.
----------------------------------------------------------------
2025-02-20 11:11:47 | index | Gudleifr

(""В первом примере показан калькулятор, который невозможно написать на компилируемом языке"")Это не может быть правдой. Надо как-то переформулировать.
----------------------------------------------------------------
2025-02-20 12:13:39 | index | Gudleifr

(""Языков точно намного"")... меньше.

https://i.servimg.com/u/f58/19/65/89/34/jasyki10.jpg
----------------------------------------------------------------
2025-02-20 12:22:05 | index | Автор сайта

Для меня разница между Вашим примером
(""#pro main # &=1; #case 1 # s(3)=1; j=1; n=27; #rep n #pr \I-2 j;|\E # j=j+1; #end # n=s(3)-1;
#sel [nx=9; ny=3; mo=0; wid=30; hei=25; tf=3; tk=1; ts=16; col=255; em=1; xs=20; ys=70;] Select variant\E \T1 n\E
# S=&; &=S<2; #case 1 #f [op=edit; mo=1; c=1; file=calcul.inf;] # Q=3; #end | #case 2 # a=0; b=0; c=0; d=0; e=0;
f=0; g=0; h=0; #e _inpc # &=Q; #case 1 #pr This|Other|No|Would you like to continue ?\E ##33 # Q=&+1; #end |
# &=Q; #end # &=Q-2; #end @"")
и примером на языке на языке J (который назвали «помехами в телеграфной линии»)
(==s =: ({. , }. /: 12"_ o. }. - {.) @ /:~
l =: 11"_ o. [: (* +)/ }. - {.
rr =: (1"_ , (0"_ > 3: l\ ]) , 1"_) # ]
hull =: [: rr^:_ s==)
совсем не очевидна. Ни то, ни другое без описания не понятно.
(""показан калькулятор, который невозможно написать на компилируемом языке."")
В Lisp впервые появилась функция EVAL, которая на лету исполняла строковую переменную, содержащую код на Lisp-е. В Clipper этот фокус выведен на новый уровень: несмотря на то, что Clipper генерировал exe-файл, EVAL тем не менее работала. Видимо, файл exe помимо кода собственно написанной программы содержал ещё интерпретатор для выполнения EVAL. Это значит, что калькулятор, каким бы сложным он ни был, может быть написан на компилируемом (в данном случае Clipper) языке.

(""программа QR, которая генерирует код на другом языке и так по цепочке более 50 языков."")Да, прикольно. Забавно ещё то, что порядок генерации кода -- в алфавитном порядке: A+ &#8658; Ada &#8658; AFNIX &#8658; Aheui &#8658; ALGOL 68...

(""Языков точно намного больше, чем необходимо"")
Ну так и естественных языков с точки зрения простого обывателя больше, чем нужно. Зачем, к примеру, языки, на которых говорит десяток человек? Тем не менее борются за их сохранение. (,,Лишние,,) искусственные языки можно просто не замечать, тогда проблема решится сама собой.

(""Хорошие языки только те, на которых уже написано много программ, интересных для всех. Как раз этим Питон и Джава и отличаются."")
Не все языки, на которых написано много программ, хороши. На Коболе очень много написано. И почти все языки с долгой историей и большим объёмом написанного содержат в себе устаревшее.
----------------------------------------------------------------
2025-02-20 12:24:11 | index | Скептик1

[q]В первом примере показан калькулятор, который [b]невозможно[/b] написать на компилируемом языке. [/q]
Вы действительно в это верите?
----------------------------------------------------------------
2025-02-20 12:36:49 | novosti | Автор сайта

Это знаменитый (,,лежачий небоскрёб,,). НИИЦЭВТ там располагается. Несколько раз был в этом здании,  очуметь, какое оно длинное.
----------------------------------------------------------------
2025-02-20 13:01:12 | index | Gudleifr

(""Автор сайта"")Теперь Вы понимаете, как остальные видят Ваши языкотворческие копания?
----------------------------------------------------------------
2025-02-20 13:06:25 | novosti | Вежливый Лис

[q]очуметь, какое оно длинное[/q]
Я не строитель, но думаю, что так вышло из-за ограничений технологий того времени.
Там, наверное, комнаты шириной 6 или 12 метров, с переменной длиной, и расположены они с двух сторон от центрального коридора.
Это обусловлено тем, какой длины умели тогда делать бетонные плиты перекрытий. Ну и предельной экономией.
А в длину их построили столько, сколько потребовалось для производства.
ну вот был бы этот дом более высоким, или более прямоугольным, что бы поменялось?
----------------------------------------------------------------
2025-02-20 17:39:15 | novosti | kiv

Здание «ИТМиВТ» имени С.А.Лебедева», где произошло ЧП, не имеет отношения к НИЦЭВТ холдинга «Росэлектроника».
----------------------------------------------------------------
2025-02-20 22:16:31 | novosti | Автор сайта

Да, это не НИЦЭВТ:(""Вчера вечером на Варшавском шоссе в Москве загорелось здание рядом с «лежачим небоскребом». Огонь вспыхнул в бывшем здании ИТМиВТ. Сотрудники института больше не работают в этом здании. Сейчас помещения здесь арендуют различные компании."")
----------------------------------------------------------------
2025-02-20 23:16:06 | novosti | Вежливый Лис

[q]Здание «ИТМиВТ» имени С.А.Лебедева», где произошло ЧП, не имеет отношения к НИЦЭВТ холдинга «Росэлектроника».[/q]
Почему это важно знать? Ну ошиблись журналисты в своих первых новостях, поправились. Почему вообще важно знать про этот пожар в целом? Причину назвали - неисправности в электрике. И что?
----------------------------------------------------------------
2025-02-21 11:54:55 | index | vkacl

Вы собираетесь читать на незнакомом языке не пытаясь его учить. Так никогда и ни у кого не получится. Чтобы понимать -- надо учить язык. Лично я все понимаю. Это намного проще, чем китайские иероглифы. Описание моего ЯП написано и подробно. Я просто хотел показать как это выглядит и как записывается. Вы хотите придумать новый современный язык, но это все равно будет Паскаль. Да еще на русском языке. А языки могут быть совсем другие. И мой как раз другой.
----------------------------------------------------------------
2025-02-21 12:22:26 | index | Gudleifr

(""Лично я все понимаю."")По причине необходимости программирования в Вашей практике. У присутствующих "интерес" к программированию несколько "академический".
----------------------------------------------------------------
2025-02-21 12:55:21 | index | Автор сайта

Если учить, то понять можно много что. А вот чтобы было понятно сразу, с первого взгляда, да процентов на 80 -- это не у всех так.
(""это все равно будет Паскаль"")
Посмотрим.
----------------------------------------------------------------
2025-02-21 12:59:29 | index | Вежливый Лис

«Национальные интересы — объективно значимые цели и задачи национального государства как целого. Представляют собой разновидность политических интересов.» https://ru.wikipedia.org/wiki/Интерес
а "академических интересов" там нет.
----------------------------------------------------------------
2025-02-21 13:09:45 | index | Gudleifr

("""академических интересов" там нет"")"Академический" в данном контексте - "сферический конь в вакууме". Ибо Вы с (**Автор Сайта**) разбираетесь в программировании, как я в апельсинах.
----------------------------------------------------------------
2025-02-21 13:18:30 | index | Вежливый Лис

Продолжение вбоквела там - http://plana.mybb.ru/viewtopic.php?id=2228&p=2#p11219
----------------------------------------------------------------
2025-02-21 15:02:57 | index | vkacl

Википедию скоро закроют как и Ютуб. Потому что непонятно кто ее пишет. А может не те. 
Вот лично я не понимаю ни одного комментария на форумах. Каждый говорит несколько глупых слов и никак ничего не объясняет. 
А без изучения можно понять только то, что знаешь. Если знаешь Паскаль, так все что не Паскаль, не понятно. А ребенок ничего не знает и ему ничего не понятно. 
Ничего у вас не получится без изучения. Хотя бы писать логично научились, то есть простыми словами, без кратких намеков. Ведь тоже не понятно.
----------------------------------------------------------------
2025-02-21 15:06:27 | index | Gudleifr

(""Вот лично я не понимаю ни одного комментария на форумах"")Если не понимаете - спрашивайте. Желательно на профильных форумах (или по почте).
----------------------------------------------------------------
2025-02-21 17:12:33 | index | Скептик1

vkacl, компилируемые и интерпретируемые языки могут выполнять одни и те же задачи. Ваше утверждение по поводу калькулятора, компилируемым и интерпретируемым языкам не верно. Компилируемые и интерпретируемые языки могут выполнять одни и те же задачи.
----------------------------------------------------------------
2025-02-21 17:49:42 | index | MihalNik

[q]Вот лично я не понимаю ни одного комментария на форумах[/q]
Как будто для кого-то другого это проблема.
Сообщения часто не адресованы авторам цитируемого в них или в принципе кому-то конкретно.
Кто-то может извлечь из них пользу, кто-то нет.
Если кто-то что-то придумает, это не значит, что автоматически всего это должны начать изучать, цитировать и оплачивать лицензии. Переизобретут сто раз занового и не вспомнят.
----------------------------------------------------------------
2025-02-21 18:14:54 | index | Gudleifr

(""Если кто-то что-то придумает, это не значит, что автоматически всего это должны начать изучать, цитировать и оплачивать лицензии"")Однако, всяко стоит понять, зачем изобретали и к чему это привело.
----------------------------------------------------------------
2025-02-21 18:58:52 | index | vkacl

Вот есть ЯП Джаваскрипт. Его интерпретируют браузеры. На стороне клиента он не записывает файлы. Но можно открыть редактор, записать туда все, что угодно, в том числе его же собственный код и он его выполнит. Я так не делал, но уверен, что можно. Я сделал много программ на своем сайте, которые входные данные получают из редактора и снова передают в редактор результаты. На Питоне можно выполнить код из редактора. А на Джаве уже нельзя. Она компилируется. Точнее она интерпретирует байт-код, а вот джава код она выполнить не сможет. На моем языке можно не только выполнить любой собственный код из редактора , но и если в этом новом коде возникнет ошибка и интерпретатор не сможет его выполнить, то он возвращается назад и просит пользователя исправить ошибку. Вот этот момент уже делается оператором аналогичным goto, который вы запретили. 
Мне уже тут сказали, что компилируемые языки могут выполнять код, если в них зашить частичный интерпретатор. Ну так я и не против. Любой интерпретатор компилируется. Интерпретатор пишется на компилируемом ЯП. А вот сам  код, который исполняется интерпретатором, есть НЕкомпилируемый ЯП. И у него есть не только такие возможности, а и возможность выполнить из любой программы код любой другой программы. Фактически все программы, написанные на интерпретируемом языке -- это одна большая программа. Потому что они все -- входные данные интерпретатора. Лично я это широко использую. Я оформил 75 сложных программ, которые писались как отдельные, а сейчас это библиотеки кода, которые можно использовать в любой новой программе сразу. Даже код копировать не надо. Код можно также выполнять по адресу файла в интернете. По крайней мере если уже джаве не запретили скачивать файлы. Раньше это было можно.
----------------------------------------------------------------
2025-02-21 19:14:34 | index | Gudleifr

(""Лично я это широко использую"")Как и Мур за четверть века до Вас (я давал ссылку). Здесь же столкнулись человек, не умеющий объяснять, и люди, не способные понять.
----------------------------------------------------------------
2025-02-21 19:51:40 | index | Бурановский дедушка

(""Вот лично я не понимаю ни одного комментария на форумах."")
Это очень плохо. А если никто не помогает, ни друзья, ни родственники, то вдвойне плохо.
(""Каждый говорит несколько глупых слов и никак ничего не объясняет.
Хотя бы писать логично научились, то есть простыми словами"")
Тут первым должен кинуть камень тот, кто сам без греха. Кто не говорит глупостей и всегда всё объясняет. Пишет логично и простыми словами.
(""ребенок ничего не знает и ему ничего не понятно"")
Дети не сразу говорят как взрослые. У них бывает свой язык, который им понятнее. Многие самодельные языки программирования напоминают такой детский лепет. Больше примитивности, меньше напряжение извилин. Изобретателю он нравится, он ему понятен, а остальное неважно. Главное, что он соответствует образу мыслей.
----------------------------------------------------------------
2025-02-21 20:06:21 | index | Деньги на WWWетер

(""goto, который вы запретили"")
Это Дейкстра запретил. Дейкстра давно помер, а goto до сих пор живой. Не рой другому яму, сам туда попадёшь!
----------------------------------------------------------------
2025-02-21 22:46:16 | index | Автор сайта

(""Википедию скоро закроют"")
С таким Трампом ещё шире откроют. Впрочем, РуВики -- почти полная копия Википедии, разница видна только в политических статьях. Но если что, перейдём на РуВики.
(""непонятно, кто её пишет"")
Каждая правка подписана каким-то ником. Иногда можно списаться с автором правки. Я пописывал (статьи и правки) туда и Вам советую. Вам же, наверное, есть о чём сказать по темам Ваших научных работ?
----------------------------------------------------------------
2025-02-22 15:48:59 | index | Скептик1

[q]Вот есть ЯП Джаваскрипт. Его интерпретируют браузеры.[/q]
Вот есть NodeJS и его можно запускать без браузера, а еще есть WebAssembly.
[q]На Питоне можно выполнить код из редактора. А на Джаве уже нельзя. Она компилируется.[/q]
Почему? Неужели невозможно написать интерпретатор для Java? 
Если вы видите только белых лебедей, это не значит что не существует черный лебедь.
[q]На моем языке можно не только выполнить любой собственный код из редактора, но и если в этом новом коде возникнет ошибка и интерпретатор не сможет его выполнить, то он возвращается назад и просит пользователя исправить ошибку.[/q] Тут следует реклама.
----------------------------------------------------------------
2025-02-22 18:02:25 | index | Деньги на WWWетер

Скептик, не будьте циником. Дайте человеку испытать гордость за свою работу.
----------------------------------------------------------------
2025-02-22 22:22:12 | index | Cкептик1

[q]Скептик, не будьте циником. Дайте человеку испытать гордость за свою работу.[/q]Хорошо, буду как все - буду врать и подбадривать человека.
----------------------------------------------------------------
2025-02-22 22:28:55 | index | Gudleifr

(""буду врать и подбадривать человека"")О чем врать, в чем подбадривать? Он на голову выше этой гостевухи.
----------------------------------------------------------------
2025-02-23 20:31:08 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Автор сайта

В утилиту добавлены следующие возможности:
(..Можно транслитерацию всех файлов с определённым расширением, например:(==cpp-rus.exe *.rus~*.cpp *.r~*.c==)Возможен и смешанный способ: как отдельных файлов, так и всех с определённым расширением...)
(..Для вставки файлов можно использовать не только их имена, но и их синонимы. Соответствие имён файлов и синонимов — в файле (++files.csv++)..)
Подробности — в статье выше, которая отражает актуальные возможности.
----------------------------------------------------------------
2025-02-24 00:50:51 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Gudleifr

А нафига?
----------------------------------------------------------------
2025-03-08 00:22:09 | otechestvennye-kompanii-razrabotchiki-kompilyatorov | Бурановский дедушка

В АО (,,МЦСТ,,) требуется разработчик бинарного компилятора приложений x86 -> (,,Эльбрус,,): https://hh.ru/vacancy/117936753
----------------------------------------------------------------
2025-03-08 11:13:49 | otechestvennye-kompanii-razrabotchiki-kompilyatorov | Клихальт

[b]Бурановский дедушка[/b], что вас останавливает?
----------------------------------------------------------------
2025-03-08 18:01:15 | otechestvennye-kompanii-razrabotchiki-kompilyatorov | Вежливый Лис

Недостаток квалификации, низкая зарплата на позиции, несоответствие целям (писать-то придётся на латинском языке, а таких компиляторов с латинского - сотни под разные языки).
----------------------------------------------------------------
2025-03-08 22:40:15 | otechestvennye-kompanii-razrabotchiki-kompilyatorov | Бурановский дедушка

Вот что пишут про эту вакансию:
(""
-- уверенное знание языков C/С++, опыт работы в коллективе разработчиков;
-- хорошее знание linux (структура файловой системы, системные вызовы);
-- опыт отладки сложных программ с помощью gdb;
-- опыт портирования 32-битных приложений в 64-битные.
"")
Тут могу ответить словами Василия Ивановича:
(""-- Василий Иванович, а ты армией командовать могёшь?
-- Могу.
-- А фронтом?
-- Могу, Петька, могу.
-- А всеми вооружёнными силами Республики?
-- Малость подучиться, смогу и вооружёнными силами.
-- Ну, а... в мировом масштабе, Василий Иванович, совладаешь?
-- Нет, не сумею, языков не знаю."")
А вакансии на должность (,,просто хороший человек,,) у них нет.
----------------------------------------------------------------
2025-03-09 11:26:33 | otechestvennye-kompanii-razrabotchiki-kompilyatorov | Gudleifr

(*- Нет, не сумею, языков не знаю.*)
Я даже сомневаюсь, что указанные "требования" имеют отношение к написанию "бинарного компилятора".
----------------------------------------------------------------
2025-03-13 18:54:26 | novosti | Клихальт

[b]Автор сайта[/b], подскажите, пожалуйста, в вопросе поиска исходных текстов компилятора PL/1-КТ Д. Ю. Караваева дело сдвинулось с мёртвой точки?
----------------------------------------------------------------
2025-03-13 23:52:22 | novosti | Вежливый Лис

Нет конечно. Если бы сдвинулось, он бы написал.
----------------------------------------------------------------
2025-03-14 01:27:41 | novosti | Автор сайта

Звоню, не отвечают. Звонить каждый день не хочется, как-то некультурно. Больше двух месяцев назад написал письмо, так и не ответили.
----------------------------------------------------------------
2025-03-16 21:05:22 | shestnadtsatirichnye-i-dvoichnye-konstanty | Сергей

Борис опередил меня. Странно, что не рассмотрены буквы АБВГДЕ. Азбучный порядок очень важен, чтобы быстро в уме переводить шестнадцатеричные числа в десятичные и обратно и считать шестнадцатеричными.
----------------------------------------------------------------
2025-03-17 17:53:02 | shestnadtsatirichnye-i-dvoichnye-konstanty | Санек

[q]Странно, что не рассмотрены буквы АБВГДЕ.[/q]
Этот вариант практичнее, но до него руки не доходит у теоретиков.
----------------------------------------------------------------
2025-03-17 22:57:24 | shestnadtsatirichnye-i-dvoichnye-konstanty | Автор сайта

(""Этот вариант практичнее, но до него руки не доходит у теоретиков."")
Этот вариант рассматривался, но Вы, видимо, забыли прочитать текст статьи выше:
(""«abcdef» -> «абвгде». Русская «В» и «Е» имеют схожие по начертанию латинские «B» и «E», но имеют разный код. Звучащие одинаково на слух «Д» и «D» тоже имеют разный код. Это потенциальный источник путаницы, этого нельзя допустить."")
Это же мина замедленного действия. Немалый процент тех, кто привык к существующим языкам, будут переносить свои привычки в мир кириллического программирования. Ещё один момент: на сегодняшний день нет ни традиции написания шестнадцатеричных констант на кириллице, ни ГОСТов. И пока нет общепринятых стандартов де-факто, то эти стандарты устанавливают первопроходцы.
----------------------------------------------------------------
2025-03-18 00:03:24 | shestnadtsatirichnye-i-dvoichnye-konstanty | Борис К.

Если идти от истории развития алфавита, то латинская последовательность (**A B C D E F**) происходит от греческий (**&#913; &#914; &#915; &#916; &#917; &#988;**). Русское соответствие: (**А В Г Д Е Ѕ**).

Например:
FE 8E 9C 66 3E
ЅЕ 8Е 9Г 66 3Е

Кстати. Я затрудняюсь вспомнить необходимость работы именно с шестнадцатиричными числами, а не их парами в составе байта. Следовательно, нужно представление именно 256'ых чисел.

Элементарно: 
254 142 156 102 062

Если хочется нагляднее:
&#10367; &#10319; &#10379; &#10294; &#10364;
----------------------------------------------------------------
2025-03-18 00:21:26 | shestnadtsatirichnye-i-dvoichnye-konstanty | Санек

[q]Немалый процент тех, кто привык к существующим языкам, будут переносить свои привычки в мир кириллического программирования.[/q] Ну если это проблема, можно использовать другую шестерку: "жзийкл" или "прстуф". 
Последний вариант наверное даже лучше - все знают про "ёпрст".

PS. еще проблема с б - она похожа на 6.
----------------------------------------------------------------
2025-03-18 15:12:39 | shestnadtsatirichnye-i-dvoichnye-konstanty | Неслучайный читатель

(++ё п р с т++) -- пятёрка, не хватает одной одного символа. Логично заменить на (++й о п р с т++). Можно предложить (++ъ ы ь э ю я++). А можно иметь не один стандарт, а несколько. То есть чтобы и (++й о п р с т++)  можно было выбрать, и (++ъ ы ь э ю я++).
----------------------------------------------------------------
2025-03-19 11:36:06 | razdeliteli | с++ шаман

автору (**респект**)
----------------------------------------------------------------
2025-03-20 00:00:30 | shestnadtsatirichnye-i-dvoichnye-konstanty | alextretyak

(""на сегодняшний день нет ни традиции написания шестнадцатеричных констант на кириллице, ни ГОСТов."")
Отдельного ГОСТа по написанию шестнадцатеричных чисел действительно нет. Но в уже имеющихся современных ГОСТах для написания таких чисел  используются латинские A-F:
https://meganorm.ru/Data2/1/4293792/4293792019.pdf  — см. Приложение А. Шестнадцатеричные коды символов (стр. 29).
https://protect.gost.ru/v.aspx?control=7&id=232143  — можно открыть практически любую страницу в середине, но лучше видно на странице 9.

Также в документах на русском языке, подписанных электронной подписью, при записи цифр сертификата используются латинские A-F:
https://uc-itcom.ru/help/docs/graficheskoe-otobrazhenie-ep-shtamp/
https://oshkole.ru/news_system/7298.html

И в целом я поддерживаю автора сайта, только считаю, что ориентироваться в данном случае нужно не на латинский алфавит, а на английский. Да, он полностью совпадает с латинским по написанию, но отличается по произношению. И так уж сложилось, что основоположниками  современного IT являются американцы. И существующая запись шестнадцатеричных чисел — тоже их изобретение. (Согласно Википедии — https://en.wikipedia.org/wiki/Hexadecimal — эта запись стала фактически стандартом начиная с публикации руководства по языку Fortran IV для IBM System/360 в 1966 году.)
А американцы — носители английского языка, а не латинского. И мы же не говорим «язык Цэ плюс плюс».
Ну и, кроме того, буква Ц в качестве третьей шестнадцатеричной цифры выглядит как-то не очень.
Таким образом, вместо АБЦДЕФ я бы рекомендовал использовать АБСДЕФ, т.к. английская буква “c” читается как «си».

(""«abcdef» -> «абцдеф». Полная калька исходной записи в кириллическом варианте. Транслит наоборот."")
И, кстати, использовать при транслитерации в качестве замены для русской буквы «ц» одиночную латинскую “c” — не самая лучшая идея. Ведь тогда слово «царь» превратится в “car”. И любой, кто хоть немного знает английский, прочитает “car” как «ка[р]», что обозначает... ну вы сами знаете что.
Для буквы «ц» лучше использовать двухбуквенное сочетание (“ts”, “tz”, “cs” или “cz”). Ведь для буквы «ч» же используется сочетание “ch”, а буква «ч» встречается в русских текстах в 3 раза чаще буквы «ц» (см. https://ru.wikipedia.org/wiki/Частотность).
----------------------------------------------------------------
2025-03-20 02:08:57 | shestnadtsatirichnye-i-dvoichnye-konstanty | Евгений Л.

(""(**alextretyak:**) И так уж сложилось, что основоположниками современного IT являются американцы. И существующая запись шестнадцатеричных чисел — тоже их изобретение."")
А основателями современной науки вообще и медицины в частности являются древние греки и арабы. Однако же греческим и арабским языком никто не пользуется для написания научных текстов. Англоговорящие пишут только на своём, латиницей. Это вообще их основной метод действия - "Принцип ниппеля". Игнорируют всё что не "своё" и всё переводят только на свой язык. Хороший принцип, доказал свою действенность на практике. Нам нужно делать так же.

(""(**alextretyak:**) И, кстати, использовать при транслитерации в качестве замены для русской буквы «ц» одиночную латинскую “c” — не самая лучшая идея. Ведь тогда слово «царь» превратится в “car”."")
А вот это уже их личные проблемы, англоговорящих. Нам нужно делать так, как это удобнее (**нам**), а не волноваться постоянно о том что "ах бедненькие, как же они будут понимать наши кириллические буквы".
----------------------------------------------------------------
2025-03-20 21:10:30 | shestnadtsatirichnye-i-dvoichnye-konstanty | Автор сайта

Замечание про схожесть буквы (++б++) и цифры (++6++) справедливо, об этом не задусывался. Не (++А Б Ц Д Е Ф++), а (++А Б С Д Е Ф++) -- вполне здраво и разумно. Иметь несколько форма записи, в том числе (++Й О П Р С Т++), в том числе совмещать (++А Б Ц Д Е Ф++) и (++А Б С Д Е Ф++) -- тоже стоит об этом подумать.
----------------------------------------------------------------
2025-03-21 00:36:17 | shestnadtsatirichnye-i-dvoichnye-konstanty | Санек

Неслучайный читатель, 
я имел ввиду "прстуф", не "ёпрст" (просто мне так было проще запоминать какая последовательность алфавитных букв).
В "й о п р с т" есть "о", она походит на 0.
----------------------------------------------------------------
2025-03-21 00:53:10 | shestnadtsatirichnye-i-dvoichnye-konstanty | Санек

Автор сайта, вы сами писали ранее
[q]Немалый процент тех, кто привык к существующим языкам, будут переносить свои привычки в мир кириллического программирования.[/q]
Но в то же время вы сами несете привычки в мир кириллического программирования
[q]Не А Б Ц Д Е Ф, а А Б С Д Е Ф — вполне здраво и разумно. [/q]
Тут уж нужно выбирать, либо разбираться со старыми пользователями, либо новых учить. Старые переучатся если захотят.
----------------------------------------------------------------
2025-03-22 06:43:39 | shestnadtsatirichnye-i-dvoichnye-konstanty | Евгений Л.

(""Замечание про схожесть буквы б и цифры 6 справедливо, об этом не задусывался"")
Я предлагаю другой вариант решения этой проблемы, записи 16-ричных цифр кириллическими буквами.
Использовать всё-таки именно последовательность "А Б В Г Д Е".


(**Во-первых,**) помимо 16-ричных цифр, в дальнейшем может возникнуть необходимость (да чего там, не "может" а обязательно будет) записи кириллицей 32- и 64-ричных цифр. Поэтому лучше сохранить алфавитную последовательность и не занимать под 16-ричные 10,11,12,13,14,15 буквы "П Р С Т" и прочие сверх первых шести.

(**Во-вторых,**) проблему похожести 6 и б, 8 и В, 4 и Ч, 0 и О - лучше всего решить изменением шрифта. Использовать специальные шрифты, в которых будут явно и однозначно различаться эти символы. Или вообще разработать специальное новое "компьютерное" начертание этих букв русского алфавита. Напомню, что прямо сейчас например буква "Д" в русском языке имеет два или три разных варианта рукописного начертания. А у буквы "А вообще есть четыре или пять совершенно различных вариантов начертания, и это никого особо не напрягает.

(**И наконец мой вариант,**) тот который я использую в своём проекте русского ЯП. Все числа по умолчанию записываются с основанием 10. Для явного указания основания, используется префикс <основание:>

1234 == 1234
1234 == 10:1234
1234 == 2:10011010010
1234 == 8:23228
010597059 == 16:А1Б2В3
123456789 == 16:75БВГ15

Если нужно использовать буквы из других алфавитов помимо русского, то перед основанием ставится буквенный символ, присвоенный данному языку.

010597059 == а16:A1B2C3
123456789 == а16:75BCD15
----------------------------------------------------------------
2025-03-22 09:23:38 | shestnadtsatirichnye-i-dvoichnye-konstanty | Клихальт

[b] Евгений Л.[/b], 

[q]Во-первых, помимо 16-ричных цифр, в дальнейшем может возникнуть необходимость (да чего там, не "может" а обязательно будет) записи кириллицей 32- и 64-ричных цифр.[/q]
Ну если для записи 32-ричных цифр и латиницы и кириллицы ещё хватит, то как вы собираетесь записывать 64-ричные цифры? Будете использовать псевдографику, или сразу перейдёте на иероглифику с прицелом на то, что в будущем разрядность будет расти и дальше?
----------------------------------------------------------------
2025-03-22 12:57:02 | shestnadtsatirichnye-i-dvoichnye-konstanty | Евгений Л.

(**Клихальт**)
(""как вы собираетесь записывать 64-ричные цифры?"")

Можно в стиле ныне существующего Base64 - (0-9,А-Я,а-я) - это уже 10+33+33=76 символов, с запасом. Но мне очень сильно не нравится использование одинаковых букв в разном регистре для обозначения разных 64-ричных чисел. На мой взгляд, использование представлений с основанием более 32 вообще не имеет никакого практического смысла для человека. Если очень уж хочется представить какое-то число с большим основанием счисления, то мой вариант как раз это позволяет и не имеет вообще никаких ограничений на основание. Используются символы (0-9,А-Я) 10+33=43 попарно, что даёт 43*43=1849 значений. Вот вам запись одного и того же числа с основанием 10 и 1849 (пример гипотетический, только для иллюстрации):

10:  23454557798709845473450837456875407602340348234765783464767534978365084359854876
1849:Ы4.7Ф.ЮЙ.49.Э2.ЖЪ

Можно, но зачем? (--640 килобайт хватит всем--) 16 и 32 разрядных чисел для записи в текстах программ вполне достаточно.
----------------------------------------------------------------
2025-03-23 09:45:31 | shestnadtsatirichnye-i-dvoichnye-konstanty | Клихальт

[b]Евгений Л.][/b]
[q]Можно, но зачем? [s]640 килобайт хватит всем[/s] 16 и 32 разрядных чисел для записи в текстах программ вполне достаточно.[/q]Практика показала, что 640 килобайт таки всем мне хватило. ;)
----------------------------------------------------------------
2025-03-23 15:23:35 | shestnadtsatirichnye-i-dvoichnye-konstanty | Санек

[b]Евгений Л.[/b],
[q]Использовать всё-таки именно последовательность "А Б В Г Д Е".[/q]
[q]и не занимать под 16-ричные 10,11,12,13,14,15 буквы "П Р С Т" и прочие сверх первых шести.[/q]
Да, этот вариант лучше. (АБВГДЕ)
Можно еще лучше кодовую таблицу изменить:
..    0  1  2  3  4  5  6  7  8  9  А  Б  В  Г  Д  Е
0x  0  1  2  3  4  5  6  7  8  9  А  Б  В  Г  Д  Е	 
1x  Ё  Ж  ...
Чтобы можно было проще высчитывать, отображать шестнадцатеричные числа.
                    
Управляющие символы где-то в другом месте, какие нужно.

[q]Во-вторых, проблему похожести 6 и б, 8 и В, 4 и Ч, 0 и О — лучше всего решить изменением шрифта.[/q]
Да, видимо только так эту проблему и решать.
                    
[b]Автор сайта[/b],
Подключили бы какую-нибудь js-библиотеку текстовый редактор, было бы удобнее вводить оформление для текста.
----------------------------------------------------------------
2025-03-23 15:49:54 | shestnadtsatirichnye-i-dvoichnye-konstanty | Вежливый Лис

[q]Подключили бы какую-нибудь js-библиотеку текстовый редактор, было бы удобнее вводить оформление для текста.[/q]
Сдалали бы вы прототип, продемонстрировали бы как надо, написали бы статью что как делать, да прислали бы эту статью автору сайта.
----------------------------------------------------------------
2025-03-23 15:59:20 | shestnadtsatirichnye-i-dvoichnye-konstanty | Санек

Вежливый Лис,
[q]Сдалали бы вы прототип, продемонстрировали бы как надо, написали бы статью что как делать, да прислали бы эту статью автору сайта.[/q]

Не научную же статью писать как редактор подключить? л
Все уже есть в инете есть https://ru.docs.webix.com/desktop__text_editors.html, было бы желание сделать.
----------------------------------------------------------------
2025-03-23 18:52:17 | shestnadtsatirichnye-i-dvoichnye-konstanty | Автор сайта

(""обязательно будет... запись кириллицей 32- и 64-ричных цифр.

Base64"")
Двоичной и шестнадцатеричной формой записи можно выразить всё (ну кроме троичной системы счисления в (,,Сетуни,,) или системы счисления в остаточных классах в спецпроцессорах). Увеличение основания системы счисления только усложнит программирование. У Base64 совсем иное назначение и применение. Зачем его тащить в языки программирования? Так можно дойти до того, что константы будут записывать символами Юникода, где значение константы будет равно кодовой позиции символа. Хороший способ обфускации.
(""разработать специальное новое "компьютерное" начертание этих букв русского алфавита."")
Денис Будяк разработал шрифт, в котором одинаковые в обычных шрифтах символы латиницы и кириллицы имеют разное начертание. Мне понравилось. Теперь надо ещё уговорить Дениса, чтобы сделать моноширинный вариант своего шрифта. Мы ж программисты, нам надо моноширинный.
(""я использую в своём проекте русского ЯП"")
В <a href="entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty.php">списке языков</a> не нахожу такого автора -- (,,Евгений Л,,). Или проект ещё не завершён?
(""подключили бы какую-нибудь js-библиотеку текстовый редактор"")
В том то и фишка, что на сайте нет js. Когда-то между наличием js и тормознутостью сайта была прямая связь. Сайт делался в те времена. Со временем проблема js рассосалась, а вот переделывать то, что и так работает, неохота. Ну и ещё к js у меня личная неприязнь после того, как увидел, что 2 + 2 равно "22" -- немедленно закрыл руководство по js и сказал себе, что я к нему никогда не прикоснусь.
----------------------------------------------------------------
2025-03-23 20:10:21 | shestnadtsatirichnye-i-dvoichnye-konstanty | Cанек

(**Автор сайта**),
(""В том то и фишка, что на сайте нет js."")
Есть js на этом сайте.
(==
<!-- Yandex.Metrika counter -->
<script type="text/javascript" >
   (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
   m[i].l=1*new Date();
==)
[q]Ну и ещё к js у меня личная неприязнь после того, как увидел, что 2 + 2 равно "22"[/q] 
Ждем редактор без JS.
----------------------------------------------------------------
2025-03-23 20:16:57 | shestnadtsatirichnye-i-dvoichnye-konstanty | Автор сайта

(""Есть js на этом сайте."")
Ждал этого вопроса.
(.. Первое: он не мой...)
(.. Второе: без него (,,метрика,,) не работает, выхода не было...)
(""Ждем редактор без JS."")
То, что Вы видите -- это и есть редактор без JS.
----------------------------------------------------------------
2025-03-23 21:19:51 | shestnadtsatirichnye-i-dvoichnye-konstanty | Санек

[q]То, что Вы видите — это и есть редактор без JS.[/q]М0жет стоит выложить исходники сайта и кто-нибудь его улучшит если вам лень.
----------------------------------------------------------------
2025-03-23 22:26:49 | shestnadtsatirichnye-i-dvoichnye-konstanty | Автор сайта

По той ссылке, что Вы дали. Там js-код подгружается со стороны:
(==
<link rel="stylesheet" href="//cdn.webix.com/edge/webix.css" type="text/css" media="screen" charset="utf-8">
<script src="//cdn.webix.com/edge/webix.js" type="text/javascript" charset="utf-8"></script>
==)
И этот сторонний код имеет размер аж 46 тыс. строк! Как-то многовато для простой формы комментариев, чтобы разметку не клавиатурой набирать, а мышканьем кнопок.
----------------------------------------------------------------
2025-03-24 01:47:04 | shestnadtsatirichnye-i-dvoichnye-konstanty | Санек

[q]По той ссылке, что Вы дали. Там js-код подгружается со стороны:[/q]
Дал первое попавшееся. То, что со стороны, можно сделать локальным. 
Можно здесь посмотреть другие:
https://en.wikipedia.org/wiki/Category:JavaScript-based_HTML_editors
Вот WYMeditor к примеру https://wymeditor.github.io/wymeditor/dist/examples/
[q]И этот сторонний код имеет размер аж 46 тыс. строк![/q]Выберите другой поменьше, удалите ненужное и будет вам счастье.
----------------------------------------------------------------
2025-03-24 07:04:47 | shestnadtsatirichnye-i-dvoichnye-konstanty | Вежливый Лис

[q]Выберите другой поменьше[/q]
Почему это должен делать автор сайта, а не предлагающий инициативу?
----------------------------------------------------------------
2025-03-24 13:09:46 | shestnadtsatirichnye-i-dvoichnye-konstanty | Санек

[q]Почему это должен делать автор сайта, а не предлагающий инициативу?[/q]Автор сайта может ничего не делать и его сайт стухнет.
----------------------------------------------------------------
2025-03-24 18:59:55 | shestnadtsatirichnye-i-dvoichnye-konstanty | Вежливый Лис

Но это неточно.
----------------------------------------------------------------
2025-03-25 19:50:21 | shestnadtsatirichnye-i-dvoichnye-konstanty | Клихальт

Возможно стоит вернуться к обсуждению вопросов, напрямую связанных со статьёй? ;)
----------------------------------------------------------------
2025-03-25 21:41:35 | shestnadtsatirichnye-i-dvoichnye-konstanty | Санек

[q]Возможно стоит вернуться к обсуждению вопросов, напрямую связанных со статьёй? ;)[/q] Можно, если будет удобно что-то писать. А так надо смотреть на коды оформления, пару раз тыкать чтобы понять как это будет выглядеть после отправки. В общем есть определенное неудобство. 
Можно наверное это где-то в другом месте писать. Где? Есть место где можно писать предложения по улучшению сайта? Или они вообще не принимаются?
----------------------------------------------------------------
2025-03-26 00:06:41 | shestnadtsatirichnye-i-dvoichnye-konstanty | Автор сайта

Вернуться к теме конечно же надо. Что касается комментирования.
(..Написание продвинутых сайтов не является зоной моих жгучих интересов. Мне бывает достаточно, когда 20% усилий реализуют 80% моих хотелок. А оставшееся свободное время хочется отдать другому...)
(..Нет в мире совершенства. Мне, например, не нравится комментирование на Хабре. Ну и что мне с этим поделать? Только смириться. Мне, кстати, не нравится js. Кто возьмётся за его переделку до состояния, что он мне понравился? А я бы на таком js написал бы хорошую форму отзывов. Ладно, это шутка юмора такая...)
Ещё надеюсь на то, что многие темы будут закрываться со временем. Потому что ничего нового не звучит, тему можно считать рассмотренной со всех сторон. И раз её семь раз отмерили, пора один раз отрезать. А сам сайт, надеюсь, будет «зафиксирован» и создан новый сайт с документацией. С доменным именем (__(++<название языка>.org++)__).
----------------------------------------------------------------
2025-03-26 02:12:54 | shestnadtsatirichnye-i-dvoichnye-konstanty | Вежливый Лис

[q]А сам сайт, надеюсь, будет «зафиксирован» и создан новый сайт с документацией. С доменным именем <название языка>.org[/q]
У вас цель поменялась. Раньше вы декларировали, что хотите изучить "сам процесс проектирования языка". Результатом такого должны быть сайт типа "Викиучебник проектирования языков", "Методика обучения проектирванию языков", "Аспекты проектирования языков" и т.д.

А Вы нас, получается, обманывали на заглавной странице и всего лишь пишете компилятор, как те книги, в которых Ахо и Ульман пишут как сделать компилятор. Всё путаете сами, в чём обвиняли других.
----------------------------------------------------------------
2025-03-26 02:38:51 | shestnadtsatirichnye-i-dvoichnye-konstanty | Санек

[q]Мне бывает достаточно, когда 20% усилий реализуют 80% моих хотелок.[/q]Использование библиотек это как раз тот самый случай.
----------------------------------------------------------------
2025-03-26 21:28:58 | test-kakoj-vy-programmist | Ivan

Не сказано, что нужно делать в том случае, если I не равно ни 1, ни 2, если, конечно, оно может принимать иные значения, кроме 1 и 2.
----------------------------------------------------------------
2025-03-26 23:00:16 | shestnadtsatirichnye-i-dvoichnye-konstanty | Автор сайта

Давайте не наводите тень на плетень. Разве проектирование языка налагает запрет на создание к нему компилятора? Нет, не налагает. Были обязательства не писать компилятор? Нет, не было. Создание компилятора перечеркнёт или обесценит озвученные идеи по написанию языков? Нет, не обесценит. С этой стороны претензий быть не должно.

В отличие от написания компилятора, придумывание языков в большой степени эвристика и не имеет общей методики. Но темы на эти статьи появляются? Да, появляются. Хотя упрёк в бессистемности и хаотичности вполне справедлив. В будущем будут статьи? Да будут. Какие претензии?

Когда-нибудь прекратится написание статей? Да, конечно. Те же Ахо и Ульман не пишут же бесконечную книгу о компиляторах, они в своё время остановились и выпустили книгу. Дональд Кнут тоже периодически останавливался сдавал в печать — сперва том 1, потом том 2 и т. д. К чему претензия? Что определённые темы уже невозможно обсуждать, они затёрты до дыр и новое не приходит в голову? Но это естественно.

Многие статьи тут уже долго не комментируются, их бы по-хорошему надо «зафиксировать». Для этого достаточно поставить запрет комментирования. Для них подойдёт чистый html, их можно залить на что-то типа narod.ru – такие сайта дают «цифровое бессмертие», они не умрут при неоплате хостинга.

В разделе «Компилятор» статей — раз, два и обчёлся. Так что я не пытаюсь отобрать хлеб у Ахо и Ульмана. Хотя собираюсь статью и описать некий метод в дополнение к известным и описанным. Но это — в качестве заметок в процессе написания компилятора. Просто практика даёт идеи по развитию теории. Однако это исключение и общей направленности сайта не меняет.
----------------------------------------------------------------
2025-03-27 01:01:23 | test-kakoj-vy-programmist | Санек

(==I=I¬3;==)
----------------------------------------------------------------
2025-03-27 01:05:09 | test-kakoj-vy-programmist | Санек

(==I¬=3;==)
----------------------------------------------------------------
2025-03-27 05:24:06 | shestnadtsatirichnye-i-dvoichnye-konstanty | Евгений Л.

(**Автор сайта,**)
(""В списке языков не нахожу такого автора — «Евгений Л». Или проект ещё не завершён?"")

Да, ещё не завершен. Проект выкладывается на gitflic.ru, на данный момент пока идёт процесс оформления документации.
Кодовое название проекта "Лисик" (Lisik), составленное из названий LISP + Basic.
ЯП ориентирован преимущественно на обработку списков и основан на следующих концепциях:

1. Простейший общеупотребимый и человеко-понятный синтаксис математических выражений, без сложных придуманных "шифровок" из составных символов. Когнитивная нагрузка по восприятию семантики должна лежать на компьютере, а не на человеке
2. Разделение программы на два базовых компонента - "логика" и "реализация"
3. Полное отсутствие зарезервированных ключевых слов
4. Отсутствие специальных выделенных операторов условия, переключателя, выборки и циклов, вместо них применяется единый обработчик списков
5. Приоритет русского языка. Можно создавать идентификаторы на абсолютно любом языке и даже из любых небуквенных символов, без каких-либо ограничений. Но создание идентификаторов из алфавита кириллицы делается легко и удобно, а для всех прочих алфавитов специально неудобно и с некоторыми дополнительными накладными трудозатратами
----------------------------------------------------------------
2025-03-27 06:01:12 | shestnadtsatirichnye-i-dvoichnye-konstanty | Вежливый Лис

[q]с некоторыми дополнительными накладными трудозатратами[/q]
каким образом? специальные кавычки?
реализации SQL так иногда делают для неанглийских букв.
или префиксы и/или постфиксы?
----------------------------------------------------------------
2025-03-28 01:36:54 | len-dvigatel-progressa | Санек

Кроме лени есть много других "двигателей", к примеру, наличие большого количества дел или желание сделать больше чем делаешь сейчас. Оптимизируешь что-то, сделаешь больше.
----------------------------------------------------------------
2025-03-29 00:22:27 | len-dvigatel-progressa | Автор сайта

Да, к Евгению есть вопросы. Но дождёмся окончания работ. Раз рассказывают о каких-то свойствах языка, значит завершение не за горами. Ждём-с.
----------------------------------------------------------------
2025-03-30 14:57:54 | test-kakoj-vy-programmist | Неслучайный читатель

(""Не сказано, что нужно делать"")
Что нужно делать? Если это написано в разделе (,,юмор,,), то не обязательно со всей серьёзностью искать огрехи в техническом задании.
----------------------------------------------------------------
2025-03-30 14:57:54 | test-kakoj-vy-programmist | Неслучайный читатель

(""Не сказано, что нужно делать"")
Что нужно делать? Если это написано в разделе (,,юмор,,), то не обязательно со всей серьёзностью искать огрехи в техническом задании.
----------------------------------------------------------------
2025-03-31 02:48:56 | shestnadtsatirichnye-i-dvoichnye-konstanty | MihalNik

[q]Проект выкладывается на gitflic.ru, на данный момент пока идёт процесс оформления документации[/q]
Не помешала бы ссылка.
----------------------------------------------------------------
2025-03-31 16:58:21 | shestnadtsatirichnye-i-dvoichnye-konstanty | Клихальт

[b]MihalNik[/b], [q]Не помешала бы ссылка.[/q]
Ссылку найти и самому не проблема [u]https://gitflic.ru/project/larinev/lisik[/u], только пустая она -- нет там ничего.
----------------------------------------------------------------
2025-03-31 17:51:27 | programmirovanie-ischeznet-budet-dressirovka-nejronnyh-setej | Бурановский дедушка

Билл Гейтс назвал три профессии, которые выживут после развития ИИ: 
https://eadaily.com/ru/news/2025/03/30/bill-geyts-nazval-tri-professii-kotorye-vyzhivut-posle-razvitiya-ii
(""Это программисты, эксперты по энергетике и биологи... Нам по-прежнему будут нужны люди для написания кода и управления системами"")
Думаю, нет смысла рассуждать, какие профессии убьёт ИИ. Ни одну из них полностью не убьёт. Какой-то процент рабочих мест он сократит, а какой-то останется.
----------------------------------------------------------------
2025-04-02 00:16:41 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Автор сайта

При разработке компилятора предъявляю к утилите новые требования и дорабатываю её под них. На определённом этапе я понял, что помогает не только русификация исходников, но и имен файлов. Особенно когда этих файлов становится много. Теперь вставку можно делать в таком стиле:
(""
#вставка  кириллическое имя файла.расширение
"")
И это при транслитерации будет заменено на
(""
#include  "кириллическое имя файла.расширение"
"")
----------------------------------------------------------------
2025-04-04 12:24:57 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

Рукалицо. Вот зачем, зачем писать компилятор на C++? Этот язык устарел, даже Линус Торвальдс уже это воплотил в управленческих решениях. С таким уровнем культуры у Вас ровно ноль шансов сделать что-то передовое. Объясняю на пальцах (странно, что приходится это делать столько лет спустя). Есть два с половиной способа управления памятью: явное управление, сборка мусора и дальше вариации на тему выделения на стеке, которые в Расте. Из них явное управление нужно только для систем, жёстко оптимизированных по производительности, в т.ч. там, где паузы из-за запуска сборщика мусора неприемлемы. Оно трудоёмко (нужно отследить время жизни каждой сущности) и  опасно (ошибки в этом отслеживании дорого стоят), регуляторы США это уже официально заявили два-три года назад. Т.е. даже для системного софта от Си и Си++ рекомендовано отказаться. Для компилятора же наиболее естественна сборка мусора, поскольку в нём есть процессы генерации деревьев, их преобразования. Он не является процессом реального времени - его задача - просто читать файлы, обрабатывать данные и писать их обратно в файлы. Подойдёт любой язык. Но Вы выбрали C++ для написания своего компилятора. Это значит, что Вы в общем-то в программировании не разбираетесь. Если бы Вы в нём разбирались, Вы бы имели кругозор, опыт программирования на разных языках и выбрали бы более подходящий язык для данной задачи. Вот посмотрите, как Недоря сделал, ну или хотя бы как сделал Вирт: он уже сто лет назад писал даже системный софт на языках со сборкой мусора (не говоря о компиляторах), т.е. даже там узость не столь критична, а где необходимо, крупицы явного управления памятью можно вставить и в Оберон. Т.е. Вы идёте, может быть и вперёд, но плетётесь в хвосте. 

Я ещё 15 лет назад говорил, что C++ это дерьмо, но те, кто на нём пишут, меня не слушали. Теперь это говорят авторитетные органы США, страны - безусловного мирового лидера в ИТ, но и их не слушают. 

Если Вам трудно изучить разные языки и Вы пишете на C++, потому что к нему привыкли, это тоже не говорит в пользу Вашей способности сделать что-то передовое в языкостроении. Потому что чтобы сделать что-то новое, нужно сначала более-менее неплохо изучить старое. Уметь работать в разных парадигмах. Например, если Вам не хватает в Го возможности строить семиэтажные контейнеры с угловыми скобками, надо задуматься над тем, почему и как другие люди без этого обходятся. Без этого понимания не получится сделать передовой язык, потому что это означает недостаточное знакомство с разными стилями программирования. Поэтому - окститесь, поучите хорошее, что уже сделано и перейдите на Го, ну, или может быть, на C#, если уж прямо не можете без ООП (а надо мочь, раз Вы разрабатываете ЯП). Я бы ещё мог посоветовать ocaml (на нём пишут компиляторы), CL, Haskell либо Яр-23, но тут везде проблематично с отладчиком, что тоже замедляет разработку. Питон не посоветую - он для маленьких программ и тормозной. Раст - для задротов. А больше вроде и не из чего выбирать.
----------------------------------------------------------------
2025-04-04 12:36:55 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Gudleifr

(""Рукалицо"") В (--программировании--) жизни все просто: есть потребность, есть инструмент, есть результат. А "стандарты" - это для тех, кто сам не умеет получить результат по потребности.
----------------------------------------------------------------
2025-04-04 13:27:24 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Вежливый Лис

http://plana.mybb.ru/viewtopic.php?id=2425
----------------------------------------------------------------
2025-04-04 13:34:51 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

Есть потребность срубить дом. 
Есть инструмент - тупой топор - слетающий с ручки
Есть результат: построен кривой дом, который может упасть на голову в любой момент, и минус два пальца на руках. 
Впрочем, в данном проекте результата и нет.
----------------------------------------------------------------
2025-04-04 15:00:22 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

Ну ладно, на самом деле и на C++ можно писать компиляторы. Просто это хуже, чем на чём-то более нормальном. Но цель в принципе достижима и так.
----------------------------------------------------------------
2025-04-04 15:29:22 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Автор сайта

Объясняю ход своих мыслей.

1) Пишу компилятор на Си. Обратите внимание, что не на C++, а именно на Си. Который, в отличие от детища Страуструпа, (**распространён на гигантском количестве платформ**). Поэтому, написав свой компилятор на Си, я получаю доступ ко всем этим платформам. Да, иногда это потребует допиливания напильником. Тем не менее трудоёмкость переноса на новые платформы куда меньше, чем если бы на каждую платформу я писал на ассемблере.

2) Первый компилятор, написанный на Си, будет поддерживать не весь язык, а лишь достаточное для <a href="raskrutka-kompilyatora.php">раскрутки компилятора</a> подмножество.

3) Затем пишу компилятор своего языка на самом языке. Который будет безопасен. Потому что безопасность — это то, что является <a href="filosofiya-yazyka.php">одним важнейших приоритетов</a> при разработке языка. Опасность тут может появиться в том случае, если компилятор Си для какой-то платформы некачественный и генерирует неправильный машинный код.

Так что для меня Си — это своего рода ассемблер, который просто повыше уровнем и на нём программируется быстрее. Кстати, Алексей Недоря выбрал примерно такой же путь — Си для генерации кода под каждую платформу. При этом он подчёркивает, что выбирает именно Си, а не LLVM. Ссылку не дам, лень искать.
----------------------------------------------------------------
2025-04-05 11:36:35 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

Компилятор Недори написан на Го, не знаю, что там дальше он стал делать с Си, возможно, использует транспиляцию для портирования. Но при этом уровень качества снижается. Вы определитесь - либо безопасность, либо множество платформ. Это противоречащие требования, если пытаться погнаться за двумя зайцами, сами знаете, что бывает. Если Ваш язык будет транспилироваться через Си, уровень безопасности итогового приложения будет на уровне Си и с этим мало что можно поделать. В платформах есть закрытые прошивки (как в RPi), доп. чипы типа IME или даже скрытые системы команд, поэтому для них нельзя написать безопасную программу, ни на каком языке. Дальше, Вам не обязательно запускать компилятор на микроконтроллере с 10кб памяти (и это не получится сделать всё равно). Оберон и лисп в ту сторону ходили, но до конца туда нельзя дойти. Результатом работы компилятора является просто файл, Вам не нужно контролировать биты в самом компиляторе. Есть кросскомпиляция. В Хаскеле не только списки, там полно уже готовых контейнеров. В Лиспе, с которым Вы, видимо, Хаскель перепутали, тоже. 

Далее, Си не является ассемблером, в нём есть неопределённое поведение. Вы к этому могли привыкнуть - и это очень плохая привычка. Но речь сейчас не о том. То, что в Си можно всё контролировать - это иллюзия и неправда. Например, в Си никак нельзя контролировать стек, а есть куча языков, в которых это можно. Также нельзя обойти все выделенные объекты, а в куче языков это можно. Т.е. Си не является каким-то "общим знаменателем" и "предельной точкой" в движении к контролю над аппаратурой. Это просто какая-то точка в пространстве возможных языков и уровней доступа к железу.
----------------------------------------------------------------
2025-04-05 13:05:16 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | MihalNik

[q]Вы определитесь — либо безопасность, либо множество платформ. Это противоречащие требования, если пытаться погнаться за двумя зайцами, сами знаете, что бывает.[/q]
Это не противоречащие требования. Одно другому не мешает. Иметь транспилятор в С и отдельно безопасный компилятор под какую-то платформу.

[q]Затем пишу компилятор своего языка на самом языке. Который будет безопасен.[/q]
И вероятно уже все платформы поддерживать не будет. Но считать все платформы безопасными и так нельзя.
----------------------------------------------------------------
2025-04-05 14:01:26 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

МихалНик, ну уже надоело бороться с Вашей риторикой. Если у нас есть противоречивые требования, мы делаем в три хода:

* делаем один продукт под одно требование
* делаем другой продукт под другое требование
* объявляем требования не противоречивыми

Вот в шахматы интереснее играть, чем такие обсуждения.
----------------------------------------------------------------
2025-04-05 16:21:51 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Автор сайта

(""Компилятор Недори написан на Go, не знаю, что там дальше он стал делать с Си, возможно, использует транспиляцию для портирования"")
Да, так и есть.
(""Но при этом уровень качества снижается"")
Ну так можно договориться до того, что когда программа меняет форму своего существования -- из текста на ЯВУ превращается в машинный код, то (о ужас!) программа оказывается воплощённой в машинный код. А машинный код -- это же так опасно! Аж сердце заходится от стресса!

На самом деле, всё зависит от того, какой код генерируется. Как плохой, так и хороший код можно получить как прямой трансляцией, так и транспиляцией через Си.
(""Вы определитесь — либо безопасность, либо множество платформ. Это противоречащие требования"")
Дайте, пожалуйста, ссылки на авторитетные источники в подтверждение своих слов.
(""Если Ваш язык будет транспилироваться через Си, уровень безопасности итогового приложения будет на уровне Си"")
А если транслироваться в машинный код, то безопасность будет на уровне вручную написанного машинного кода -- если продолжить Вашу мысль.
(""В платформах есть закрытые прошивки (как в RPi), доп. чипы типа IME или даже скрытые системы команд, поэтому для них нельзя написать безопасную программу, ни на каком языке"")
Если разработчик сделал платформу, которая не будет безопасной ни при каких обстоятельствах, то можут ну её, такую платформу? Любой разработчик нового железа заботится, чтобы к нему был хороший софт. И компилятор Си к нему -- это первое, с чего начинают. Как правило.
(""Вам не нужно контролировать биты в самом компиляторе"")
Вы перепутали себя и меня. Вам, наверное, не нужно, а мне -- нужно. Могу отвечать за работу компилятора только тогда, когда я знаю назначение каждого байта.
(""В Хаскелле не только списки, там полно уже готовых контейнеров"")
Двоичный или шестнадцатеричный код в студию, с описанием назначения полей.
(""Си не является ассемблером, в нём есть неопределённое поведение"")
В Си есть описываемое стандартами поведение, так и поведение, которое оставлено на усмотрение разработчиков компиляторов. Поэтому при генерации кода надо выбрать первое и избежать второго.
(""То, что в Си можно всё контролировать — это иллюзия и неправда"")
Я встречал такое утверждение, что если на каком-то языке можно что-то написать, то на ассемблере это тем более можно написать; ассемблер -- самый могущественный инструмент. Но это опровергается такой умозрительной ловушкой: на ЯВУ можно написать куайн (квайн, quine) и уложить его в десяток строк, то на ассемблере так не получится. Так что в любом подходе есть плюсы и минусы. Так что интересен их максимально положительный баланс.
(""в Си никак нельзя контролировать стек"")
Я таки <a href="realizatsiya-dvuhstekovoi-modeli-razmescheniya-dannyh.php">пытаюсь</a>, правда это платформозависимое. Можно выбрать Форт с его контролем над стеком, но этот плюс будет погашен минусами в другом.
(""нельзя обойти все выделенные объекты"")
Это на Си. А вот в программе, сгенерированной из другого языка транспиляцией через Си, -- можно. Си -- это лишь пластилин, из которого лепится желаемое.
(""вероятно уже все платформы поддерживать не будет"")
А все и не надо, достаточно самые распространённые. Главное, чтобы под нужные платформы был выбор из компиляторов Си. Чтобы если один по каким-то причинам не подошёл, то можно было бы выбрать другой. Я, к примеру, проверяю свои наработки сразу двумя компиляторами. Это хорошее подспорье в работе.
(""у нас есть противоречивые требования"")
Поэтому надо расставлять приоритеты. Безопасность, надёжность, безошибочность -- на первом месте, а вот охват всего и вся по платформам -- это как получится. Если софт будет работать на 10 платформах, я был бы этим доволен.
----------------------------------------------------------------
2025-04-05 16:37:50 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

""Вы перепутали себя и меня. Вам, наверное, не нужно, а мне — нужно. Могу отвечать за работу компилятора только тогда, когда я знаю назначение каждого байта.""

Для написания компилятора не нужно контролировать каждый бит в самом компиляторе. Если Вы взяли такое стилистическое ограничение для себя (как Довлатов), то это Ваш вкус, но я бы за это деньги не заплатил. В рамках хобби-проекта можете и это делать, но это замедлит решение Вашей задачи.
----------------------------------------------------------------
2025-04-05 16:38:40 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

quine - это рефлексия, то же, что "Бог не может сделать камень, который не может поднять", вычёркиваем.
----------------------------------------------------------------
2025-04-05 16:41:31 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

> Ну так можно договориться до того, что когда программа меняет форму своего существования — из текста на ЯВУ превращается в машинный код, то (о ужас!) программа оказывается воплощённой в машинный код. А машинный код — это же так опасно! Аж сердце заходится от стресса!

Да, и поэтому придумали jar-файлы и распространение веб-приложений в виде исходников на JS. Это является защитой от того, чтобы Вы на своём устройстве не выполнили вредоносный код.
----------------------------------------------------------------
2025-04-05 16:46:36 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

""Это на Си. А вот в программе, сгенерированной из другого языка транспиляцией через Си, — можно. Си — это лишь пластилин, из которого лепится желаемое."" 
Можно, но не нужно. 

Касаемо противоречия между кроссплатформенностью и безопасностью я уже сказал выше. Сишные API сами по себе опасны. Поэтому, если на платформе есть Си, то она уже опасна. Я знаю только, наверное, три категории относительно безопасных платформ:

* Эльбрус (и его западные аналоги, вроде Берроуз). Но Вы не можете нормально писать на Си для Эльбруса в безопасном режиме. Оказывается, что там нет основных абстракций Си, которые у вас в каждой строчке буквально
* основанные на Обероне (и там тоже нет Си)
* основанные на java-байткоде (хотя таким я под капот не заглядывал) 

Во всех трёх случаях Си совсем не при делах. Всё, что на Си - это Линукс, Windows - и всё это представляет из себя полное и позорное решето.
----------------------------------------------------------------
2025-04-05 16:52:29 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

**Двоичный или шестнадцатеричный код в студию, с описанием назначения полей.**
Нет, я не буду за Вас смотреть в компилятор Хаскеля. Я только знаю, что он написан на Хаскеле и даёт достаточно быстрый машинный код. Можете мне не верить или не интересоваться, это не моя проблема.
----------------------------------------------------------------
2025-04-05 17:19:21 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

Ещё забыл про Аду - это некоторые Боинги, если не путаю. Ну, и военные изделия, которые нас "радуют" своим появлением в нашем небе.
----------------------------------------------------------------
2025-04-05 23:13:53 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Автор сайта

(""Для написания компилятора не нужно контролировать каждый бит в самом компиляторе"")
Цель -- контролировать каждый байт в исполняемом коде. А чтобы заранее отработать все нюансы, это же самое контролирую в компиляторе. Мне не хочется оказаться в положении, что "я не знаю, как это работает, но оно почему-то работает".
(""quine — это рефлексия, то же, что "Бог не может сделать камень, который не может поднять""")
Это косвенный, хотя и не полноценный показатель удобности языка. Ведь на одних языках удобно делать такой камень, а на других нет. Это чтобы не сесть в лужу, когда обнаружится идеологический просчёт. Было так с (,,Драконом,,), когда его много лет рекламировали как отработанный на космических проектах инструмент, а студенты быстро выявили, что в нём нет рекурсии.
(""поэтому придумали jar-файлы и распространение веб-приложений в виде исходников на JS. Это является защитой от того, чтобы Вы на своём устройстве не выполнили вредоносный код"")
Это не единственные способы. Вы же сами наверняка их не используете у себя в ЯОС. Тут мы либо соглашаемся с тем, что к нам приводят импортного троянского коня, который в рекламных буклетах рекомендован как безопасный. Либо говорим "нет" и занимаемся своим.
(""Сишные API сами по себе опасны"")
Не все.
(""три категории относительно безопасных платформ... Эльбрус... о Вы не можете нормально писать на Си для Эльбруса в безопасном режиме... Всё, что на Си — это Линукс, Windows — и всё это представляет из себя полное и позорное решето."")
Вы будете долго смеяться, но Алексей Маркин (http://alexanius.ru/) -- разработчик компилятора C++ для (,,Эльбруса,,) под ОС МСВС-Э на основе Linux. Алексей, наверное, лучше расскажет подробности.
(""основанные на Обероне"")
Не смешите. Разве в нём есть что-то наподобие монады (++may be++), чтобы делалась проверка существования результата функции?
(""основанные на java-байткоде"")
А что, там уже невозможны ситуации, когда адрес может иметь значение NULL? Уже победили?
(""Ещё забыл про Аду"")
Вам, наверное, про Аду (**Arianespace**) напомнила. Они при запуске (,,Ариан-5,,) почти полмиллиарда долларов потеряли из-за <a href="_A/093.html">ошибки в ПО на Аде</a>:
(""Возникшая ошибка в программном модуле произошла во время конвертации 64-битного вещественного числа в 16-битное знаковое целое, и при этом случилось арифметическое переполнение последней"")
----------------------------------------------------------------
2025-04-06 10:49:29 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

""Цель — контролировать каждый байт в исполняемом коде. А чтобы заранее отработать все нюансы, это же самое контролирую в компиляторе.""
Ну я и говорю, Вы делаете новый Си, потому что тренируетесь на Си. Не имея широкого кругозора и спрашивая вопросы о Хаскеле, говорящие об абсолютном незнакомстве с ним (я хотя бы четверть книжки по нему прочитал, но тоже не осилил), Вы принимаете некоторые вещи автоматически, не задумываясь, как условный воздух. 

Про NULL и прочее - это псевдологика. Наконец я чётко увидел паттёрн псевдологического мышления, который показали Глеб, МихалНик и вот теперь Вы. Это называется "выбор из списка, предъявленного оппонентом, наиболее удобного пункта, и фокусировка на нём". С ними двумя это не сработало, они, конечно, не признали поражения, но МихалНик хотя бы по сей момент не нашёл, что ответить. Посмотрим, как на Вас с работает. Безопасность определяется по сумме проблем. Это количественная, а не булева характеристика. Никакой язык не решает всех проблем безопасности. Например, зашитый пароль можно сделать на любом языке, как и обход аутентификации. Надо брать полный перечень классов возможных проблем и смотреть количественно, какие проблемы уходят. Так вот, я читал в одном диссере (единственном, который нашёл) табличку и по ней получилось, что 40% проблем безопасности Linux - это безопасность памяти, которая в Эльбрусе решена. По мнению CISA - это 70%, отсюда и их жёсткое отношение к Си и Си++ (думаю, что 40% ближе к истине). Про безопасность нуля речи не шло. Нуль - это условность, означающая отсутствие чего-то. А монада may be - это вообще эвфемизм для исключений, не знаю, к чему она в этом разговоре. Это то же, что проверять ошибку, просто записанное другим образом. 

Я тоже имел небольшое отношение к программированию с РБВ на Эльбрусе и даже держал в руках методичку по портированию в РБВ, так что я не знаю, что мне даст указанный Вам человек. Я конкретно знаю, в чём там проблемы, мог бы детализировать, но эту методичку я читал на работе, поэтому не могу делиться её содержимым. Может быть она есть и в открытом доступе. Коротко - ничто в моём мнении, что C++ не подходит для РБВ, не поменяется. Да, можно притянуть за уши, можно и в решете воду носить, если заклеить каждую дырочку. Найдите у оберонщиков книжки по Эльбрусу, там есть отдельная глава про проблемы безопасности, и как они решены в Эль-76. Эль-76 создан порядка 40-50 лет назад, Вы же не хотите то же самое (или часть того же самого) в XXI веке заново изобрести?
----------------------------------------------------------------
2025-04-06 11:36:50 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | MihalNik

[q]но МихалНик хотя бы по сей момент не нашёл, что ответить[/q]
МихалНик просто не фантазирует, что автор вдруг станет экспертом по Racket и Lisp.
А также о том, что он делает JIT-компилятор.
Если написано - сишка, то не видит ничего страшного и критичного от потенциального падения самого компилятора, не исключая оного, и не подписывался пока что на разработку его и программ на нем в будущем.
А также не собирается решать всех чужих проблем и вообще вполне удобно не пользуется эпичным количеством вещей, услуг и программ, ставших т.н. "стандартом".
----------------------------------------------------------------
2025-04-06 17:00:23 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Автор сайта

(""А монада may be — это вообще эвфемизм для исключений, не знаю, к чему она в этом разговоре"")
Спалился на том, в чём других упрекал. Вы признаётесь в том, что (**не знаете**), хотя разговор про безопасность. May be и аналоги имеют прямое отношение к безопасности и является альтернативой исключениям. Но не эвфемизмом. Упрёки в недостаточном кругозоре легче адресовать другим, чем себе.
(""спрашивая вопросы о Хаскеле... я хотя бы четверть книжки по нему прочитал, но тоже не осилил"")
И Вы упрекаете в незнакомстве с этим языком тех, кто прочитал несколько книг? Вы даже правильное название языка не запомнили.
(""компилятор Хаскеля... даёт достаточно быстрый машинный код"")
Подобно Фоме неверующему, пока не вложу перста в рёбра -- не поверю. В отличие от Вас, я <a href="c-vs-haskell-sravnenie-skorosti-na-prostom-primere.php">измерял эту скорость</a>, разница между Си и Хаскелл доходила до полутора тысячи раз. Не пользу последнего.

Подытожу: если Вы считаете, что если генерирующий двоичный компилятор априори небезопасный, то надо признать небезопасными абсолютно все существующие компиляторы. Если же признать, что некоторые из них всё-таки генерируют безопасный (точно соответствующий по функциональности исходному коду на ЯВУ) машинный код, то значит есть методы, которые позволяют этого добиться. Значит, есть методы генерации безопасного кода не только в машинный код, но и в Си. И, между прочим, есть микроядра ОС, написанные на (**Си**), корректность которых была (**научно доказана**). Доказательства -- в защищённых диссертациях. А теперь опровергните диссертации и докажите мне, что на Си невозможно писать безопасный код.
----------------------------------------------------------------
2025-04-06 19:31:03 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

""Подытожу: если Вы считаете, что если генерирующий двоичный компилятор априори небезопасный"" - это Вы сделали те выводы из моих высказываний, которые Вам хотелось сделать, выведя меня на некоторые высказывания и переставив их в нужный Вам контекст. Если Вам так удобно убеждать себя в том, что всё ок, ну ладно. Основная проблема у Вас даже не в том, что Вы пишете на С, а в количестве прошедших лет, за которые никакого результата публике не предъявлено. На этом фоне, наверное, не так важно, на чём Вы пишете.
----------------------------------------------------------------
2025-04-06 19:34:30 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

""А теперь опровергните диссертации и докажите мне, что на Си невозможно писать безопасный код""

Я этого не утверждал и это неправда. Я утверждал похожее по звучанию, но другое по смыслу. Что же касается Эльбрусов - Эльбрус - это семейство процессоров, не весьма сильно похожих друг на друга. Я имел в виду Эльбрус-2. Произвольную программу на Си на его архитектуру невозможно скомпилировать (можно, если в Эльбрусе завести массив, изображающий сишную память, т.е. по сути дела, эмуляцией). В современных Эльбрусах есть режим РБВ, который похож на Эльбрус-2, и нельзя просто так скомпилировать в него произвольную программу на Си. Можете дальше не верить, выискивать у меня незнания, и т.п. В принципе, я всё сказал.
----------------------------------------------------------------
2025-04-06 21:32:30 | c-vs-haskell-sravnenie-skorosti-na-prostom-primere | Денис Будяк

Он называется computer language benchmark game.      

Ваш опыт - плохой и ненаучный, Вы не знаете Хаскеля, взяли то, что подходит под априорную точку зрения, что Хаскель не нужен, а нужно Си. Когда это удалось, Вы сразу обрадовались и перешли к выводам, не разбираясь в причинах. Это не научная методология познания, а эмоциональная. Даже из Вашей информации и хода мысли видно, как Вы это делаете, игнорируя неудобную часть фактов и додумывая удобную, чтобы прийти к желанному выводу. 

Я, зная Хаскель не лучше Вас, судя по всему, осилил спросить у DeepSeek, почему эта программа замедляется по мере роста файла. У меня была первая мысль, что в программе используются ленивые вычисления. Но я спросил, почему эта программа замедляется при росте файла, и DeepSeek подтвердил мою гипотезу. В Си ленивых вычислений нет, а на Хаскеле можно писать без них. Так что у Вас есть, куда доработать Ваш пример, а Выши выводы никуда не годятся и являются заблуждением.
----------------------------------------------------------------
2025-04-06 21:58:40 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Бурановский дедушка

Любопытное (https://svpressa.ru/science/article/458805/):
(""На американских форумах можно найти любопытную информацию о «драке в туалете» на какой-то крутой конференции между разработчиками Windows и MacOS. Как пишут неназванные свидетели, жалоб в полицию не было. После того, как первые отлупили вторых, «яблочники» признались, что у них «тупо не хватило бы денег, чтобы сделать с нуля ОС, вот и пришлось «пиратничать»"")
Что-то новенькое. Не раз заявлялось, что Microsoft тырит идеи у Apple. А вот наоборот -- неожиданно. Это из статьи (,,Русская «Аврора» мощно врезала по Windows и MacOS,,). Прямо сенсация, если верить заголовку. Но почему-то она на (,,Яндекс-Маркете,,) не продаётся.
----------------------------------------------------------------
2025-04-06 23:03:54 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Автор сайта

(""Основная проблема у Вас даже не в том, что Вы пишете на С, а в количестве прошедших лет, за которые никакого результата публике не предъявлено"")
Ну вот, а два дня назад основная проблема была в Си.
(""Вы сделали те выводы из моих высказываний"")
Я просто рассуждал: (,,если -- то, иначе -- другое,,). Там же есть ключевое слово (,,если,,).

С (,,Эльбрусами,,) я не настолько знаком, чтобы свободно рассуждать об их устройстве и аппаратной поддержке безопасного программирования. Просто есть компилятор C++ под (,,Эльбрус,,), есть люди, которые над ним работают, есть публикации по теме работ. И нечасто, но периодически вывешивается вакансия разработчика компилятора C++. Ничего личного, просто факты, которые заставляют задуматься о несовместимости C++ и (,,Эльбрусов,,).

Ну раз тезис о невозможности генерации безопасного кода на Си не подтверждён, то продолжу свою работу. Кстати, на такой генерации свет клином не сошёлся. Просто пока это самый короткий путь. А там видно будет.
----------------------------------------------------------------
2025-04-06 23:31:07 | c-vs-haskell-sravnenie-skorosti-na-prostom-primere | Автор сайта

Я знаю, в чём причина. Сперва из нескольких статей я узнал об узких местах Haskell. Потом, спустя какое-то время, наткнулся этот на пример. И, зная об этих узких местах, захотелось подсунуть не просто файл, а большой файл. И сравнить по скорости с Си. В результате тезисы из прочитанных статей подтвердились. Но не ленивость тому причиной. Ведь недетерминированность и побочные эффекты, присущие операциям ввода/вывода (монада (++IO++)), исключают ленивость по определению. И Вы, и DeepSeek ошиблись.
(""Когда это удалось, Вы сразу обрадовались и перешли к выводам, не разбираясь в причинах"")
Это оценочное суждение. Вы ничего не можете знать о моих печалях и радостях. Вы не знаете, сразу это было или постепенно, разбирался я или нет. Если Вы не владеете фактами, не надо их выдумывать.
----------------------------------------------------------------
2025-04-07 01:41:43 | c-vs-haskell-sravnenie-skorosti-na-prostom-primere | Денис Будяк

Ну, тогда Вы лукавите. Вы ссылаетесь на файл как на якобы хороший, не потому что Вы его изучили, а потому что его кто-то опубликовал (из чего ничего вообще не следует, как Вам верно указал МихалНик), а теперь выясняется, что Вы специально подбирали пример. Уж как-то нехорошо. Сел я тут ответить на Ваше обвинение (я-то ничего не понимаю, а вот за --державу-- deepseek) обидно. Не знаю, есть ли ленивость в вашей программе (думаю, да, иначе с чего бы она начала экспоненциально жрать время), но вот в этой программе её вроде бы нет и она работает таки в 20, а не в 2 раза медленнее сишной, но её время выполнения линейно зависит от размера файла, и даже лучше, чем линейно, по какой-то причине. Она считает немного другое, чем Ваша. Но не суть. 

==
{-# LANGUAGE BangPatterns #-}
import System.IO
import System.Environment (getArgs)
import Data.Char (ord)
import Control.Monad (when)
import System.Exit (exitFailure)
import Data.Word (Word32)
import Data.IORef (IORef, newIORef, readIORef, writeIORef, modifyIORef')

main :: IO ()
main = do
    args <- getArgs
    total <- newIORef (0 :: Word32)
    
    when (null args) $ do
        putStrLn "Использование: faster.hs <filename>"
        exitFailure
    
    handle <- openBinaryFile (head args) ReadMode
    
    let readLoop = do
            !isEof <- hIsEOF handle
            when (not isEof) $ do
                !byte <- hGetChar handle  
                modifyIORef' total (+ fromIntegral (ord byte))
                readLoop                 
    
    readLoop
    !total1 <- readIORef total
    print total1
    
    hClose handle
==
----------------------------------------------------------------
2025-04-07 02:47:31 | c-vs-haskell-sravnenie-skorosti-na-prostom-primere | Денис Будяк

Я понимаю, что пишу неприятное. Мне и самому неприятно, когда приходится в ком-то разочаровываться. Можете стереть, но 
я на всякий случай скопировал на свой форум. Никому эти дрязги неинтересны, но раз уж я усомнился в себе, пришлось довести дело до конца (с моей точки зрения). Для Вас - видимо, это ничего не докажет, но это уже Ваше дело. И раз уж жал на кнопки, то сохраню копию. 

Итак. 

Началось с утверждения Юрия, что Хаскель работает "до 1500 раз медленнее Си", а не "в два раза". Это, конечно, явная ложь, пришлось разобраться. В ходе этого разбирательства выяснилось, что:

* Юрий меряет программу на Хаскеле, но не берётся судить, эффективна ли она. Программа объявлена написанной правильно на том основании, что она опубликована.
* Моё предположение о том, что проблема в ленивости (проверенное с помощью DeepSeek) - это ошибка, и что ленивости в этой программе нет.

Здесь уже противоречие - Юрий не берётся судить об эффективности программы на Хаскеле, но знает, что ленивости в ней нет. А при том, знать, что в программе нет ленивости - это уже сильное утверждение об эффективности этой программы, в случае Хаскеля. Одна ложь уже есть - не берётся судить, но судит. Просто самообман или что-то другое? Я считал, что самообман, но теперь склоняюсь к более плохой версии. Тем более, как выяснилось в ходе дискуссии, пример был специально подобран так, чтобы Хаскель сработал наиболее плохо и является результатом определённой работы, по, можно сказать, целенаправленной дискредитации Хаскеля. Т.е. тезис о том, что Юрий считает этот пример эффективным и правильным, тоже начинает выглядеть не очень искренним. Я совершенно не люблю Хаскель, но здесь речь уже совсем о другом.

Далее, ошибся ли я? Программа, приведённая Юрием (вот здесь) https://compiler.su/c-vs-haskell-sravne ... mere.php#4 страдает экспоненциальным замедлением по мере роста размера обрабатываемого файла, хотя её задача состоит в том, чтобы пройти по файлу и посчитать некую "контрольную сумму". Мы все понимам, что эта задача должна выполняться за линейное время и требовать константной памяти.

Итогом двухчасовых препирательств меня и DeepSeek стало улучшение программы Юрия. Я добавил в неё всего одну строчку, первую:
Код: Выделить всё

{-# LANGUAGE Strict #-}
По утверждению DeepSeek, эта строчка устраняет всякую ленивость. Как результат, программа стала работать за линейное время. Да, она работает всё ещё примерно в 15 раз медленнее программы на Си, но никак не в 1500. Т.е., чтобы это ни было, но что-то в программе, и скорее всего ленивость, её замедляло. Когда ленивость запретили, оно перестало замедлять. Что же это такое было? Предлагаю теперь Юрию объясниться, в чём же дело, а я после этого подумаю, продолжать ли считать его честным человеком                    .
----------------------------------------------------------------
2025-04-07 02:58:28 | c-vs-haskell-sravnenie-skorosti-na-prostom-primere | Вежливый Лис

[q]продолжать ли считать его честным человеком[/q]
Ты замучал уже с ненужным перфекционизмом. Ты уже Лиса обвинил в том, что он публикует псевдонауку, но когда Лис закончил разбираться и переклассицифицировал тему - ты не извинился. Теперь Юрия обвиняешь. Юрий-то исправится, а вот кем останешься ты?
----------------------------------------------------------------
2025-04-07 02:58:38 | c-vs-haskell-sravnenie-skorosti-na-prostom-primere | Денис Будяк

P.S. выяснилось, что программа на C была написана не совсем такая - она суммирует файл побайтно, а не по словам.
Значит, коэффициент замедления я взял неправильно (я компилировал сишную программу с O3, а Хаскеллеву с O2, 
но это просто для отчётности сообщаю). У Юрия получилось в лучшем случае для 1-мб файла 14-кратное занижение - его и
надо взять за правду в этом случае. Как превратить его в обещанное двукратное я не знаю и это не особо интересно, 
достаточно уже доказанного (мне, а остальные как хотят).
----------------------------------------------------------------
2025-04-07 03:01:46 | c-vs-haskell-sravnenie-skorosti-na-prostom-primere | Денис Будяк

Лис выполнил работу над ошибками по факту публикации псевдонауки (хотя и не извинился за доставленные неудобства). Молодец.

Проблема в том, что Юрий делал существенные утверждения:
* знание Хаскеля намного лучше меня (прочитал несколько книг, а я только 1/3 книги)
* экспоненциальное замедление связано не с ленивостью (на самом деле была ещё пара версий, но очень маловероятных)
* Хаскель в 1500 раз медленнее Си, хотя даже утверждать, что Питон в 50 раз медленнее Си, надо с определённой осторожностью. 

И всё это с высокой степенью уверенности в своей правоте. Если бы я это пропустил, моя уверенность в моих знаниях была 
бы поколеблена. Поэтому я это делал для себя, а не для Лиса или не для Юрия.
----------------------------------------------------------------
2025-04-07 03:08:32 | c-vs-haskell-sravnenie-skorosti-na-prostom-primere | Вежливый Лис

Меня корёжит от невежливых высказываний.
К сути претензий нет (мне она и не очень интересна, потому что слишком далека от того, что доступно по факту).
----------------------------------------------------------------
2025-04-07 11:02:38 | c-vs-haskell-sravnenie-skorosti-na-prostom-primere | Денис Будяк

Ну ладно, может я отчасти и погорячился с персональными обвинениями. Хотя лукавство в данной статье, на мой взгляд, всё же присутствует.
----------------------------------------------------------------
2025-04-07 13:46:43 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

Опять лукавство (самолукавство): Вам дали очень чёткие подсказки, и я даже разъяснил ситуацию о взаимосвязи Эльбруса и C++. Но Вы их игнорируете. Ваше дело.
----------------------------------------------------------------
2025-04-07 14:42:32 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

Вы живёте не в XXI веке, а раньше 70-х годов XX-го, ведь Эльбрус как ответ именно на те проблемы Си, информацию о которых я Вам пытался донести, был разработан уже тогда. Т.е. Вы не делаете ничего передового, а отстали на 50 лет от уровня техники. И когда Вам об этом говорят, Вы просто отмахиваетесь. Вот в этом большая проблема, вторая после того, что Ваша работа до сих пор не имеет никакого результата. Просто тьфу глядеть на это всё. Хотя что взять с Вас, если даже в МЦСТ это плохо понимают (ну или понимают, но всё засекречено и эта информация не дошла ни до меня, ни до некоторых других, до кого она вроде бы должна была бы дойти). Соответственно, те вопросы, которые разработчики Эльбруса уже решили 50 лет назад, Вы отказываетесь даже ставить на повестку своего дня. И это не Вы лично, а это уровень нашей культуры. Просто обидно за державу, но сделать с этим, к сожалению, ничего у меня не получается.
----------------------------------------------------------------
2025-04-07 14:45:04 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

То, что Вы говорите о безопасности и ничего не знаете об Эльбрусе (хотя есть книжки, которые можно прочитать), и главное, даже не хотите узнать, явно говорит о том, что Вы занимаетесь не своим делом.
----------------------------------------------------------------
2025-04-07 22:05:59 | c-vs-haskell-sravnenie-skorosti-na-prostom-primere | Неслучайный читатель

(""программа на C была написана не совсем такая — она суммирует файл побайтно, а не по словам"")
Она суммирует по 4 байта. Переменная (++очередное слово++) -- указатель на четырёхбайтную переменную, и в каждом цикле этот указатель увеличивается:
(==++очередное слово==)
Указатели на четырёхбайтное инкрементом увеличиваются на 4.
(""Я знаю, в чём причина. Сперва из нескольких статей я узнал об узких местах Haskell. Потом, спустя какое-то время, наткнулся этот на пример. И, зная об этих узких местах, захотелось подсунуть не просто файл, а большой файл"")
А что за узкие места? Почему захотелось проверить на большом файле?
----------------------------------------------------------------
2025-04-07 22:47:32 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Вежливый Лис

> ничего не знаете об Эльбрусе
Это не наша проблема, а проблема Эльбруса. Когда он всё заопенсорсит, тогда на него можно будет начинать смотреть. А пока его нет. И купить его нельзя. Какой смысл сейчас трать время на проприетарную недоступную технологию?
----------------------------------------------------------------
2025-04-07 23:32:51 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

Лис, ты не любишь невежливость, а я не люблю тех, кто мешает моей стране развиваться, т.е. таких людей, как ты. Ты уже написал, что ты далёк от темы Эльбруса - так и не выступай со своим некомпетентным мнением. 

https://oberoncore.ru/library/start?ysclid=m97iynojd2757077407

Вот здесь есть книги по Эльбрусу-2. Для того, чтобы получить достаточный кругозор по теме, их достаточно. А вот и методика портирования программ на C(++) в РБВ, которую каждый человек, всерьёз пытающийся разработать безопасный ЯП и начинающий для этого с противоположного конца, по-хорошему должен хотя бы местами проглядеть. Я не знаю, можно ли там найти текст, т.к. надо регистрироваться, но это нужно не мне.
----------------------------------------------------------------
2025-04-07 23:33:38 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

Плохо получалось, попробую ещё раз:

https://www.elibrary.ru/item.asp?id=62921986
----------------------------------------------------------------
2025-04-07 23:59:45 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Автор сайта

Похоже, чтобы угодить Вашему взыскательному вкусу, я должен сделать два языка. Первый -- для (,,Эльбруса,,) с его аппаратной поддержкой безопасного программирования,,), второй -- для остальных процессоров, где такой поддержки нет. Надо заметить, что вторых куда больше, чем первых. Даже Вы пишите свои комментарии на этом сайте отнюдь не на (,,Эльбрусе,,) -- это я в логах у хостера посмотрел.

Поэтому надо держать в уме прежде всего самые распространённые архитектуры, без аппаратной поддержки. А. Н. Терехов, которого можно назвать самым выдающимся отечественным разработчиком-практиком в области компиляторов, использовал в отечественной архитектуре (,,Самсон,,) совсем другой подход. Он считал, что всё должен проверять компилятор, а не процессор. Он даже выкинул из процессора узлы по проверке кода машинных операций на корректность. Зачем нужна эта проверка? Мы её выкинем и процессор станет проще! Компилятор просто не даст сгенерировать недействительный код операции. А программировать на ассемблере мы не дадим -- пусть программируют исключительно на ЯВУ.

Я придерживаюсь такого же мнения: на (,,Эльбрус,,) надейся, да сам не плошай. То есть надо делать без оглядки на какие-то возможности малораспространённого процессора, который редко кто в глаза видел. Да, есть где-то там офигительные трассы, по которым ездят болиды (,,Формулы-1,,), но нам-то надо сделать машину для обычных дорог и желательно для грунтовых.
(""Вы живёте не в XXI веке, а раньше 70-х годов XX-го"")
Это говорит человек, который находит язык 1986 года самым подходящим для своих проектов? Я-то хоть и использую Си, но я-то имею перед собою цель его заменить. А Вас, человека XXI века, технологии XX века вполне устраивают.
(""Вы занимаетесь не своим делом"")
У Вас, видимо, есть своё дело. Оно состоит в том, чтобы высасывать из неведомо какого пальца небылицы и выдавать их за факты.
----------------------------------------------------------------
2025-04-08 00:43:11 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Вежливый Лис

[q]Вы пишите свои комментарии на этом сайте отнюдь не на «Эльбрусе»[/q]
Публичное разглашение персональной информации. Фу-фу-фу.
----------------------------------------------------------------
2025-04-08 17:02:14 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Ильдар

Разглашаю персональную информацию 99,99999999...% землян:  у них нет "Эльбруса".
----------------------------------------------------------------
2025-04-08 21:34:43 | c-vs-haskell-sravnenie-skorosti-na-prostom-primere | Автор сайта

(**Неслучайный читатель  **)
(""А что за узкие места? Почему захотелось проверить на большом файле?"")Об этом <a href="funktsionalnoe-programmirovanie.php">написано</a>:
(""Ориентированность функционального программирования на иммутабельность данных приводит к тому, что функция, обрабатывая контейнер с данными, возвращает его модифицированную копию. Многие элементы этого контейнера остаются при этом неизменными. В любом случае это уменьшает скорость программы: как при простом копировании неизменяемых элементов (гоняем туда-сюда целиком железнодорожный состав ради нескольких действительно важных вагонов), так и использовании персистентных структур данных."")
То есть, когда иммутабельность касается скалярных данных, новое значение переменной в новом месте эффективность уменьшат несильно. А вот постоянное копирование структур данных должно поедать процессорное время. И чем больше структура, тем больше неэффективность.

Так <a rel="nofollow" href="_ref.php?link=127">утверждают критики Haskell</a>. Целая статья этому была посвящена. И когда попался этот пример, мне вспомнилось это утверждение и решил проверить его на больших объёмах данных. Результат ошеломил.
----------------------------------------------------------------
2025-04-08 22:55:48 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Вежливый Лис

[q]99,99999999...% землян[/q]
это информация статистическая, не персональная. Процент, кстати, завышен.
----------------------------------------------------------------
2025-04-08 23:36:52 | c-vs-haskell-sravnenie-skorosti-na-prostom-primere | Неслучайный читатель

Так всё-таки может ленивость вызывать такое замедление? Может, виновата не иммутабельность, а ленивость? Что говорят учебники по этому поводу?
----------------------------------------------------------------
2025-04-09 00:33:30 | tipy-v-inzhenernyh-zadachah | Неслучайный читатель

Я бы такую типизацию назвал (**метатипизацией**). Эта как есть просто программирование, а есть метапрограммирование, которое не интересуется деталями, а оперирует обобщёнными понятиями. Так же и (**метатипизация**) не интересуется деталями физического представления данных (которыми занимается обычная типизация), а занимается назначением, смыслом данных.
----------------------------------------------------------------
2025-04-09 10:16:29 | otechestvennye-razrabotki | Бурановский дедушка

https://www.cnews.ru/news/top/2025-04-08_kitaj
Александр Тимошенко занимается развитием архитектур на основе троичной арифметики. Первая архитектура «Трит-2» проектируется по принципу «троичная логика на двоичных физических элементах». Другая архитектура «Трит-6» использует принцип «троичная логика на троичных элементах». Его компания «Тайфун» заканчивает проектирование и готовится к производству тестовых образцов. Huawei запатентовала на себя эту технологию сразу после доклада разработчика на конференции: «Из презентации скопировали даже ошибки». Китайцы очень интересовались технологией и предлагали поработать вместе.
----------------------------------------------------------------
2025-04-09 16:02:20 | otechestvennye-razrabotki | Клихальт

[q]Александр Тимошенко занимается развитием архитектур на основе троичной арифметики.[/q]
Это всё со слов самого Тимошенко. Интересно как дело обстоит в действительности.
----------------------------------------------------------------
2025-04-09 18:03:22 | otechestvennye-razrabotki | Вежливый Лис

[q]Интересно как дело обстоит в действительности[/q]
Нет, неинтересно. И если вам неважно моё неаргументированное мнение, то почему мне должно быть интересно ваше (настолько же неаргументированное)? Явное противоречие. Давайте же поговорим об этом. Почему по-вашему, это может быть интересно? Для меня было бы интересно, если бы они сделали поатомарное моделирование вычислений на основе ДНК, там система счисления с основанием 4. Но троичная??? Говорят, что было где-то какое-то доказательство того, что оптимум для основания это ~2.7 (число e), но кто то доказательство читал, понял и может объяснить?
----------------------------------------------------------------
2025-04-09 22:17:16 | otechestvennye-razrabotki | Деньги на WWWетер

Говорят, что это фон Нейманом доказал, что самая экономичная система счисления — с основанием e.
----------------------------------------------------------------
2025-04-09 22:23:57 | otechestvennye-razrabotki | Вежливый Лис

год, название работы? А то ещё говорят что Шеннон это был.
----------------------------------------------------------------
2025-04-09 22:45:49 | otechestvennye-razrabotki | Вежливый Лис

https://www.typhoon.su/assembler.html

«Тритон - язык программирования, на сайте есть информация.»
«Одна из особенностей нашего языка программирования в том, что код на нём пишется на русском языке.»
«Это системный язык, по сути — автокод, из которого будет выходить сразу троичный код.»
----------------------------------------------------------------
2025-04-09 22:46:44 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Вежливый Лис

https://www.typhoon.su/assembler.html

«Тритон — язык программирования, на сайте есть информация.»
«Одна из особенностей нашего языка программирования в том, что код на нём пишется на русском языке.»
«Это системный язык, по сути — автокод, из которого будет выходить сразу троичный код.»
----------------------------------------------------------------
2025-04-09 23:13:10 | otechestvennye-razrabotki | MihalNik

[q]Говорят, что было где-то какое-то доказательство того, что оптимум для основания это ~2.7 (число e), но кто то доказательство читал, понял и может объяснить?[/q]
А что там непонятного? Что такое экстремум функции не знаете? Это ж чисто математическая сущность некой "стоимости" в идеальном мире по какой-то формуле. А в физически реальном она упирается в конкретные технологические процессы. Дырку в бумаге пробить, намагнитить/электризовать участок и т.п. Будет экономически эффектно - хоть шестирично будут данные кодировать, хоть двадцатерично, на атомарном уровне там вариантов куча может быть.
Физически в том же триплете из 64 комбинаций 3 стоп-кодона. Ну вот так технологически сложилось.
----------------------------------------------------------------
2025-04-09 23:20:05 | otechestvennye-razrabotki | Автор сайта

<a href="es-evm-eto-izmena-trusost-i-obman.php#28">Отсюда</a>:
(""Зарубежом был очень большой интерес к «Сетуни», так как это была единственная в мире ЭВМ на троичной системе счисления. Она, можно сказать, замкнула на себя весь мировой интерес к троичной системе счисления. Наших участников зарубежных компьютерных конференций засыпали вопросами о ней. А вот интереса к нашим клонам их техники не было. &#175;\_(&#12484;)_/&#175;"")
----------------------------------------------------------------
2025-04-09 23:46:22 | otechestvennye-razrabotki | Вежливый Лис

У меня там сообщение в этой теме про язык Тритон не туда записалось, его надо стереть.
----------------------------------------------------------------
2025-04-09 23:49:49 | otechestvennye-razrabotki | Вежливый Лис

[q]Что такое экстремум функции не знаете?[/q]
Абстрактно знаю. Но хочу прочитать связное изложение именно этой темы в целом,
чтобы было видно, почему троичное взлетать не хочет.
У меня когда-то была такая мысль, подобрать молекулы, которые по-разному могут в пространстве располагаться. Ну, типа, как шаговый мотор на три фиксированные позиции. А потом подумал, что пространство вообще тетраидами заполняют, а там граней четыре. В общем, давайте всё, какую фунгкцию оптимизировали, зачем это делали, как так получилось, что выиграла другая функция (приводящая к двоичной логике)
----------------------------------------------------------------
2025-04-10 01:59:16 | otechestvennye-razrabotki | MihalNik

[q]хочу прочитать связное изложение именно этой темы в целом,
чтобы было видно, почему троичное взлетать не хочет.[/q]
Оно ни как не будет видно. Потому что причина в физике и экономике, а не математике.
Вам нужен эффективный экономически троичный элемент. И производство вычислительных схем на его основе.
Например, взять нейтральный элемент, + и -, три разные степени заряда/намагниченности одного знака, три длины волны света, три разных атома и т.п. И реализовать на них логические операции. Тут вопрос удачного стечения физических законов.
А программисту на ЯВУ все равно как там числа представлены будут.
Троичной в Сетуни физически не было - ее имитировали парами бит, т.е. использовали неэффективно.

[q]В общем, давайте всё, какую фунгкцию оптимизировали, зачем это делали, как так получилось, что выиграла другая функция (приводящая к двоичной логике).[/q]
Гугл забанил что ли? Первая же ссылка:
https://habr.com/ru/articles/427969/
Функция одна, а не какая-то другая.
----------------------------------------------------------------
2025-04-10 22:47:14 | tipy-v-inzhenernyh-zadachah | Автор сайта

Хорошее определение Вы дали. Думаю, Дмитрий Юрьевич его оценил бы. Жаль, что его нет. О судьбе его разработки ничего не знаю, с января новой информации не поступало. А наладить контакты не удалось.
----------------------------------------------------------------
2025-04-10 23:15:20 | c-vs-haskell-sravnenie-skorosti-na-prostom-primere | Автор сайта

В учебниках пишут то, что хотят сказать авторы. А не то, что хочется спросить читателям. В них -- сплошное (,,благорастворение воздухов,,): Haskell -- отличный язык, делайте, как вам говорят и будем вам счастье. Нет ни единого абзаца, где бы говорилось о замедлениях или о том, как оптимизировать программу. Скорее всего, зарубежная литература была бы более полной. Но лучшего всего -- гуглить. А ещё задавать вопросы на форумах.

Изучал Haskell специфическим образом: в первую очередь старался понять саму концепцию, как она используется, в чём её суть, какие выгоды она несёт. Пытался понять реализацию, но это ж нигде не написано, только если сами исходники смотреть. То ещё удовольствие. А вопросы были. Например такой: как чистые функции, которые с монадой IO, остаётся чистыми, производя побочные эффекты и получая недетерминированную информацию. На форумах мне отвечали в таком духе: да брось ты задавать такие вопросы, ты программируй и всё. А я не хочу программировать на Haskell! Мне нужно понять внутреннее устройство. Вот <a rel="nofollow" href="_ref.php?link=127">эта фраза</a>
(""Понадобилось 50 лет, чтоб разбавить концентрацию высокомерных снобов в сообществе до той степени, чтоб можно было получить полезный ответ по функциональному программированию"")
хоть и написана зарубежным автором о ситуации (,,там,,), но здесь этот язык используют крайне редко. Иногда в описании вакансии есть Haskell, но не основным, а третьим-четвёртым языком. Вот и всё.
----------------------------------------------------------------
2025-04-11 01:17:36 | c-vs-haskell-sravnenie-skorosti-na-prostom-primere | MihalNik

[q]Если бы я это пропустил, моя уверенность в моих знаниях была бы поколеблена.[/q]
Такие уязвимости надо прорабатывать. 2 часа убито на британское убожество, а потом, жалобы, что кто-то не дает кому-то развиваться.
----------------------------------------------------------------
2025-04-11 13:38:42 | otechestvennye-razrabotki | veector

[q] А программисту на ЯВУ все равно как там числа представлены будут.[/q]
В целом, согласен, но, возможно, есть нюанс.
ЯВУ написан на языке низкого уровня (ЯНУ), а ЯНУ пользуется числами, с которыми работает процессор (и сопроцессор), поэтому, ЯНУ и процессор могут влиять на ЯВУ.
Например, на диапазоны целых чисел, на точность дробных чисел и пр.
Многое можно пытаться эмулировать, но тогда будет потеря в скорости обработки, а она также важна, как и абстрактные модели данных.
----------------------------------------------------------------
2025-04-11 17:25:02 | es-evm-eto-izmena-trusost-i-obman | Бурановский дедушка

https://dzen.ru/a/Z-cMjUi2MHkCpPOD(""Советские компьютеры, такие как ЭВМ "Минск-32", стали неожиданной находкой для американских военных.

Советские ученые разработали "Минск-32" как универсальную вычислительную машину, способную выполнять сложные математические расчеты. В это время американские военные искали решение для расчетов траекторий ракет и других критически важных задач. Неожиданно, как гром среди ясного неба, пришла информация, что "Минск-32" может стать идеальным инструментом для этих задач.

...произошло незаслуженно забытое событие — сделка между советскими и американскими официальными лицами, в ходе которой в Пентагон попали несколько экземпляров "Минск-32".

Чем же "Минск-32" так поражал американских военных? Прежде всего, это была его способность обрабатывать огромные объемы данных.

Данные, которые обрабатывались на "Минск-32", оказали большое влияние на военные стратегии США. Например, в 1968 году компьютер был использован для моделирования траекторий ракетных запусков, что значительно улучшило точность и эффективность операций.

... опыт использования "Минск-32" стал важным уроком для США"")
(**Ох, уж эти сказочки... Ох, уж эти сказочники!**) У "Минска" память была маленькая, огромных объёмов данных он обрабатывать не мог. Если автор имел в виду память на дисках или лентах, то они по надёжности были хуже американских. Явная попытка переписать историю задним числом.
----------------------------------------------------------------
2025-04-11 18:58:00 | tipy-v-inzhenernyh-zadachah | Неслучайный читатель

(""Мне всегда больно, когда умирают талантливые люди, потому что мир нуждается в них больше, чем небо."")
----------------------------------------------------------------
2025-04-12 00:00:59 | es-evm-eto-izmena-trusost-i-obman | Автор сайта

(""Чую, что Малайзию надо благодарить"")
Вроде бы появились намёки, что это китайцы для нас делают, SMIC.
(""У "Минска" память была маленькая"")
Да, разрядность адреса -- всего 16. Не разбежишься.
("""Минск-32" так поражал американских военных"")
Интересно, как он мог поражать американских военных, если он совсем не поражал наших:
(""Были активны минские разработчики, но они стремились ограничиться машинами невысокой производительности. Московскую научную общественность, военных заказчиков и руководство отрасли не устроили массовые ЭВМ без перспективы быть высокопроизводительными"")
Уж американцы были куда более избалованы качественной высокопроизводительной техникой, чем наши.
----------------------------------------------------------------
2025-04-12 00:01:09 | es-evm-eto-izmena-trusost-i-obman | Автор сайта

(""Чую, что Малайзию надо благодарить"")
Вроде бы появились намёки, что это китайцы для нас делают, SMIC.
(""У "Минска" память была маленькая"")
Да, разрядность адреса -- всего 16. Не разбежишься.
("""Минск-32" так поражал американских военных"")
Интересно, как он мог поражать американских военных, если он совсем не поражал наших:
(""Были активны минские разработчики, но они стремились ограничиться машинами невысокой производительности. Московскую научную общественность, военных заказчиков и руководство отрасли не устроили массовые ЭВМ без перспективы быть высокопроизводительными"")
Уж американцы были куда более избалованы качественной высокопроизводительной техникой, чем наши.
----------------------------------------------------------------
2025-04-12 00:27:07 | c-vs-haskell-sravnenie-skorosti-na-prostom-primere | Автор сайта

Совершенно не согласен, что Haskell -- это убожество. Просто его надо считать экспериментальным языком, тогда многое становится на свои места. Это полигон для отработки новых концепций. Разбиение функций на разные категории, сделанное посредством типов, позволило отделить мух от котлет. Согласен с теми, кто утверждает, что Haskell (,,прочищает мозги,,). Очень полезно взглянуть на задачи под другим углом.

В книге (,,Теория и практика структурного программирования,,) (Р. Лингер, Х. Миллс, Б. Уитт) встретил термин (,,умственное поднятие тяжестей,,), и там же: (,,приобретение десятилетнего опыта [сводится] к десятикратному повторению годового опыта,,). Так вот Haskell -- своего рода умственная (,,качалка,,). Не везде и во всём, но в существенном.
----------------------------------------------------------------
2025-04-12 19:48:59 | c-vs-haskell-sravnenie-skorosti-na-prostom-primere | Неслучайный читатель

Хочу порассуждать. Допустим, присваивается нового значение какому-то небольшому количеству элементов структуры. Большая часть элементов не меняется. Вот тут логично, на мой взгляд, включить ленивость: раз нет изменений, то переписывание неизменённых значений отложить. Если они дальше не понадобятся, то сэкономим на вычислениях. Ленивые вычисления для того и задумывались. То есть когда включен режим ленивых вычислений, то вычисления ускоряются.

А тут опция (++{-# LANGUAGE Strict #-}++) наоборот отключает ленивость, все вычисления становятся обязательными. И это отключение ускоряет. Логический парадокс: строгие вычисления быстрее ленивых. Что скажите?
----------------------------------------------------------------
2025-04-13 15:46:57 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | DEAD C0DE

(""Планируемая дата релиза альфа-версии 31.03.2024"")
Пора бы уж обнародовать, второй год пошёл этому Тритону.
----------------------------------------------------------------
2025-04-13 19:48:41 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Вежливый Лис

Я пробовал им звонить по телефону на сайте, но телефон мне ответил, что "абонент не абонент".
----------------------------------------------------------------
2025-04-14 20:26:37 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Борис К.

(==    целый  №ер,Номер,Nomer;
    целый  А,Б,В,Г,Д,Е,Ё,Ж,З,И,Й;
    целый  К,Л,М,Н,О,П,Р,С,Т,У,Ф;
    целый  Х,Ц,Ч,Ш,Щ,Ъ,Ы,Ь,Э,Ю,Я;==)
(==    celyj  Nomer,Nomer,Nomer;
    celyj  A,B,V,G,D,E,YO,ZH,Z,I,J;
    celyj  K,L,M,N,O,P,R,S,T,U,F;
    celyj  H,C,CH,SH,SCH,q,Y,q,W,YU,YA;==)

1.  Как-то логичнее было бы использовать однозначную транслитерацию,  например:

(++    a b v g d e yo zx z i j 
    k l m n o p r s t u f 
    h c cx sx sw qx iw q ew yu ya

    № nw
    § pw ++)
    
2.  Языковую смесь запретить нахрен.
3.   На выход выдавать идентификаторы с префиксом языка.

(++    number -> en$number
    номер  -> ru$nomer

    целый  №ер,Номер,Nomer; -> ru$celiwj ru$nwer,ru$Nomer,en$Nomer;++)
----------------------------------------------------------------
2025-04-15 09:25:55 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

За время пути собака могла подрасти. Современные компиляторы и так понимают кириллицу, без всяких утилит. 

[code]
#include <stdio.h>

typedef int цел;
typedef char симв;

цел main(цел квоАргтов, симв *векторАргтов) {
  printf("Привет, мир! Я получил %d аргументов", квоАргтов);
  return 0;
}
[/code]

Вот это компилируется под Ubuntu 22 (gcc 11.4). Транспиляция же стандартных имён (таких, как printf) упирается вовсе не в технические возможности, а в то, что надо будет заново учить их названия, и нельзя будет просто скопировать код из ChatGPT. Хотя можно написать #define пишиСтд printf и транслитерация будет тем самым достигнута.
----------------------------------------------------------------
2025-04-15 12:40:38 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Неслучайный читатель

Транслитерация для (++include++) и (++define++) уже достигнута? Или собака ещё не подросла?
----------------------------------------------------------------
2025-04-15 13:06:21 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

Не достигнута, но она и не нужна для реальной работы. Проблема непонимания русскоговорящими людьми кода кроется не в нескольких десятках ключевых слов, которые легко учатся, а в нескольких десятках тысяч слов общего лексикона, из которых программисту понадобятся как минимум несколько тысяч. Для C++ эту проблему вряд ли можно решить вообще, поскольку понадобится тогда локализовать stl, Qt, boost, MFC и прочее общеупотребимое-полезное. Ввиду особенностей языка он с трудом поддаётся такой операции. 

С другой стороны, подобные утилиты наносят весьма измеримый урон продуктивности программиста, когда речь идёт о поддержке. Поэтому здесь должен был бы обсуждаться инженерный компромисс.
----------------------------------------------------------------
2025-04-15 13:11:49 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

Соответственно, возможность кодирования пользовательских имён в utf-8 выглядит такой точкой, по достижении которой эту утилиту следует закопать и забыть про неё, если мы хотим заниматься работой, а не мммм, ну так скажем, игрой.
----------------------------------------------------------------
2025-04-15 13:16:13 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

Просто давайте представим себе любой hello, world с испльзованием stl, основанный на этой утилите. Он будет наполовину на английском, или на 90%. Как сделать, чтобы он был на русском?

* написать движок перевода для кодов на Си
* заполнить словари

Как человек, который больше года на практике этим иногда занимался, я скажу, что это очень большая работа. Кто будет её делать? Никто. А значит, и цель получения русскоязычного С++ не будет достигнута. Или есть добровольцы? Сделать движок перевода, который на входе получит stl, а на выходе - "русский stl" - эта работа примерно на 3 порядка сложнее, чем делать данную утилиту, которая спустя 12 лет всё ещё не стабилизировалась и меняется. Она не просто сложнее - там будут проблемы. Заполнение словарей - это тоже большая работа. 

Или кому-то нужен чистый C++ без библиотек? Или include нам обязательно надо русифицировать, а boost и MFC мы потерпим?
----------------------------------------------------------------
2025-04-16 00:17:33 | c-vs-haskell-sravnenie-skorosti-na-prostom-primere | Автор сайта

Могу сказать, что в книгах и статьях, которые у меня есть, оптимизации и прочие вопросы реализации не рассматриваются. Тут или целенаправленно искать и изучать, или задать вопрос <a rel="nofollow" href="_ref.php?link=82">на форуме</a> касательно этого примера.
----------------------------------------------------------------
2025-04-16 00:41:23 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Автор сайта

(**Борис К.**), вы делаете замечания по утилите, но сами-то пользуетесь ею? Или это только умозрительные соображения?

(**Неслучайный читатель**), если ключевые слова ещё можно переопределить с помощью (++#define++), то команды препроцессора -- нет. Поэтому в утилите есть словарь замен.
----------------------------------------------------------------
2025-04-16 10:05:10 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Борис К.

(**Автор сайта**)
Тут уже справедливо заметили, что в С++ вопрос снят. Что еще лучше, utf8 допустим в виндовых экзешниках в разделах импорт-экспорт.

Соображения житейские: запустил, увидел косяк, рефлекторно обругал. Сам интерес к разбору/генерации сишного кода не умозрительный: при разработке ЯП этой хренью тоже надо заниматься.
----------------------------------------------------------------
2025-04-16 15:27:03 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Неслучайный читатель

(""в С++ вопрос снят"")
А как он снят? В каких-то конкретных компиляторах может и снят. А вот про то, что utf-8 является законным для идентификаторов с точки зрения стандарта ISO, -- не слышал таких новостей.
----------------------------------------------------------------
2025-04-16 17:51:08 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Вежливый Лис

[q]C++11 supports three Unicode encodings: UTF-8, UTF-16, and UTF-32[/q]
оттуда - https://en.wikipedia.org/wiki/C%2B%2B11 

А у Вас, уважаемый сэр, вообще есть текст документа "ISO/IEC:14882-2011, Official C++ Language Specifications" ?
----------------------------------------------------------------
2025-04-16 17:56:11 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Вежливый Лис

[q]E.1
Ranges of characters allowed
[charname.allowed]
00A8, 00AA, 00AD, 00AF, 00B2-00B5, 00B7-00BA, 00BC-00BE, 00C0-00D6, 00D8-00F6, 00F8-00FF
0100-167F, 1681-180D, 180F-1FFF
200B-200D, 202A-202E, 203F-2040, 2054, 2060-206F
2070-218F, 2460-24FF, 2776-2793, 2C00-2DFF, 2E80-2FFF
3004-3007, 3021-302F, 3031-303F
3040-D7FF
F900-FD3D, FD40-FDCF, FDF0-FE44, FE47-FFFD
10000-1FFFD, 20000-2FFFD, 30000-3FFFD, 40000-4FFFD, 50000-5FFFD,
60000-6FFFD, 70000-7FFFD, 80000-8FFFD, 90000-9FFFD, A0000-AFFFD,
B0000-BFFFD, C0000-CFFFD, D0000-DFFFD, E0000-EFFFD[/q]
Русские буквы находятся в диапазоне символов Юникода от 0400 до 04FF. Однако в предоставленном списке этот диапазон не указан.
----------------------------------------------------------------
2025-04-16 17:57:36 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Вежливый Лис

Но он находится внутри 0100-167F.
----------------------------------------------------------------
2025-04-16 18:03:18 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Вежливый Лис

[q]The ISO/IEC 14882:2011 3rd editon was published 2011-09-01[/q]
оттуда - https://www.open-std.org/jtc1/sc22/wg21/docs/standards
----------------------------------------------------------------
2025-04-17 14:00:46 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Неслучайный читатель

https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3242.pdf, страница 18
(""(**Character sets**)
The basic source character set consists of 96 characters: the space character, the control characters representing horizontal tab, vertical tab, form feed, and new-line, plus the following 91 graphical characters:"")
(==a b c d e f g h i j k l m n o p q r s t u v w x y z
A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
0 1 2 3 4 5 6 7 8 9
_ { } [ ] # ( ) < > % : ; . ? * + - / ^ & | ~ ! = , \ " '
==)
Видим, что из букв -- 52 символа латиницы, а про Юникод ни слова.

https://en.wikipedia.org/wiki/C%2B%2B11
Про UTF-8, UTF-16 и UTF-32 пишут то, что они могут применяться в строчных литералах:
(==u8"I'm a UTF-8 string."
u"This is a UTF-16 string."
U"This is a UTF-32 string."==)
Но про Юникод в идентификаторах опять ни слова.
(""есть текст документа "ISO/IEC:14882-2011, Official C++ Language Specifications"?"")
Нет. Нашёл стандарт на сайте iso.org, пожелал его скачать, но мне задали вопрос : "Что ещё Вы бы хотели купить у нас?"
----------------------------------------------------------------
2025-04-17 16:02:57 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | veector

"Стандарты нужны для того, чтобы их нарушать"

Разработчики компиляторов (GCC) в принципе могут и забить на этот "стандарт", если он им будет мешать. Сейчас уже на столько очевидно, что если в GCC не будет поддержки имен переменных, функций и т.п. вещей в кодировке utf8, то GCC просто останется за бортом. Не переживайте, если GCC захотят, то протолкнут всё, что им нужно в очередной стандарт.
----------------------------------------------------------------
2025-04-17 16:10:11 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | veector

А диапазоны юникода, скорее-всего, они включают для того, чтобы не пытались использовать кодовые точки юникода (codepoint), которые не соответствуют символам алфавитов (например, те же эмоции). Все остальные символы юникода, со временем, разрешат, или будут использовать втихую.
----------------------------------------------------------------
2025-04-18 11:42:43 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

В черновике по Вашей ссылку есть вот такое, при описании этапов трансляции. 

"" Any source file character not in the basic
source character set (2.3) is replaced by the universal-character-name that designates that character. (An implementation may use any internal encoding, so long as an actual extended character
encountered in the source file, and the same extended character expressed in the source file as a
universal-character-name (i.e., using the \uXXXX notation), are handled equivalently except where this
replacement is reverted in a raw string literal.)""

Допустимость universal-character-name в идентификаторе также описана в синтаксисе идентификатора. Так что не "ни слова", а достаточно конкретно описано. В стандарте Си от 2011 года, по заявлениям DeepSeek, это тоже возможно. На практике, gcc, clang и msvs поддерживают это.
----------------------------------------------------------------
2025-04-18 18:09:16 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Неслучайный читатель

Перевод:(""Любой исходный символ файла, не входящий в базовый исходный набор символов (2.3), заменяется на универсальное-имя-символа, которое обозначает этот символ. (Реализация может использовать любую внутреннюю кодировку, пока фактический расширенный символ, встречающийся в исходном файле, и тот же расширенный символ, выраженный в исходном файле как универсальное-имя-символа (т. е. с использованием нотации \uXXXX), обрабатываются эквивалентно, за исключением случаев, когда эта замена отменяется в необработанном строковом литерале.)"")
Из текста следует, что универсальное-имя-символа использует нотацию \uXXXX. А любой исходный символ файла, не входящий в базовый исходный набор символов, заменяется на это самое универсальное-имя-символа с нотацией \uXXXX. Если литералы использует такую нотацию, то вопросов нет. Но речь идёт об идентификаторах. Выходит, что идентификаторы тоже использует нотацию \uXXXX? То есть писать
(==  Идентификатор==) неправильно, надо писать (==  \uИдентификатор==).
----------------------------------------------------------------
2025-04-18 18:48:26 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Ильдар

Страница 1232:
(""Annex E (normative)
Universal character names for identifier characters 

E.1 Ranges of characters allowed [charname.allowed]
00A8, 00AA, 00AD, 00AF, 00B2-00B5, 00B7-00BA, 00BC-00BE, 00C0-00D6, 00D8-00F6, 00F8-00FF
0100-167F, 1681-180D, 180F-1FFF
200B-200D, 202A-202E, 203F-2040, 2054, 2060-206F
2070-218F, 2460-24FF, 2776-2793, 2C00-2DFF, 2E80-2FFF
3004-3007, 3021-302F, 3031-303F
3040-D7FF
F900-FD3D, FD40-FDCF, FDF0-FE44, FE47-FFFD
10000-1FFFD, 20000-2FFFD, 30000-3FFFD, 40000-4FFFD, 50000-5FFFD,
60000-6FFFD, 70000-7FFFD, 80000-8FFFD, 90000-9FFFD, A0000-AFFFD,
B0000-BFFFD, C0000-CFFFD, D0000-DFFFD, E0000-EFFFD

E.2 Ranges of characters disallowed initially [charname.disallowed]
0300-036F, 1DC0-1DFF, 20D0-20FF, FE20-FE2F"")
Кириллица имеет находится в диапазоне 0400 -- 04FF, то есть входит в диапазон 0100-167F (Ranges of characters allowed).
----------------------------------------------------------------
2025-04-18 18:51:55 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | DEAD C0DE

Изгнали же наших разработчиков из ядра Линукс. Так же выпилят кириллицу из компиляторов. Может, это кому-то покажется немыслимым. Но многие ещё вчера немыслимые вещи становятся реальностью сегодня.
----------------------------------------------------------------
2025-04-19 01:26:27 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Вежливый Лис

[q]Допустимость universal-character-name в идентификаторе также описана в синтаксисе идентификатора[/q]
Надо было этот фрагмент зацитировать тоже.

[code]
2.11 Identifiers [lex.name]
identifier:
    identifier-nondigit
    identifier identifier-nondigit
    identifier digit

identifier-nondigit:
    nondigit
    [b]universal-character-name[/b]
    other implementation-defined characters
[/code]
----------------------------------------------------------------
2025-04-19 01:35:20 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Вежливый Лис

[q]То есть писать "Идентификатор" неправильно[/q]
Почему? Написано же, что замена производится компилятором, если в исходном тексте используется символ unicode из не ascii диапазонов.
----------------------------------------------------------------
2025-04-21 11:43:09 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

Украинский язык тоже использует кириллицу, причём на 90% ту же, поэтому так сразу не выпилят. Ну разве только после полного запрета украинского языка и перевода всей страны на английский. Думаю, ближайшие 50 лет можно на эту тему спать спокойно.              

Должен ли я был цитировать стандарт дальше? Думал, что Неслучайный Читатель является вдумчивым читателем и для него достаточно. Но теперь вижу, что он просто находится в фазе отрицания. Как же, 11 лет делали такую замечательную утилиту и вдруг тут наглецы утверждают, что она потеряла актуальность. Поэтому и стандарт не получилось достать, и даже увидеть то, что прямо написано в стандарте, не выходит. Я дал минимум, который нужен, чтобы увидеть упущение при непредвзятом чтении стандарта. С предвзятостью надо работать гораздо дольше, и эта возможность предоставляется Лису.
----------------------------------------------------------------
2025-04-21 12:06:30 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

Т.е. надо нашему коллеге сделать вывод из ряда фактов:
* некоторые компиляторы (все наиболее известные) позволяют писать Идентификатор, а не \uИдентификатор или что-то иное
* БЯМы утверждают, что да, поддерживает
* и в стандарте написаны некие слова, которые просто нужно постараться и понять

И дальше уже решать, что делать с этим фактом. А не на каждом шаге говорить "мне не удалось доказать, что в C++ можно использовать кириллицу, поэтому я дальше в этом направлении думать не буду" и выносить этот вывод на данную (узкую) публику.
----------------------------------------------------------------
2025-04-21 16:41:40 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Неслучайный читатель

Понятно, Юникод и кириллица поддерживается стандартом C++. Нашёл последний стандарт C (а не C++) ISO/IEC 9899:2024, там тоже поддержка Юникода. Но русского перевода стандартов нет, это ограничивает их известность.

Запрет кириллицы вообще выглядит фантастикой, ведь на ней пишут в Монголии и Киргизии, не говоря уже о Сербии и Болгарии.
(""он просто находится в фазе отрицания"")Не переходите на личности, это Вас не красит.
(""11 лет делали такую замечательную утилиту и вдруг тут наглецы утверждают, что она потеряла актуальность"")
Для Вас она изначальна не была актуально. А кому-то, возможно, до сих нужна. Не все же компиляторы поддерживают стандарты. Особенно те, которые давно не обновлялись.
----------------------------------------------------------------
2025-04-21 16:58:48 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

Я говорю о Вашем состоянии, а не о Вашей личности. Вы так и остались в фазе отрицания. Раньше Вы утверждали, что утилита нужна, потому что компиляторы поддерживают кириллицу по своей инициативе. Теперь, когда это оказалось неправдой Вы утверждаете (и это было легко предсказать), что утилита нужна, потому что есть компиляторы, которые её не поддерживают. Правда, нужно выяснить ещё один вопрос: как это соотносится с общей идеей проекта Юрия и сколько стоит применение этой утилиты с учётом того, что она теперь нужна только для каких-то отдельных компиляторов. Кстати, было бы интересно узнать, нужна ли она лично Вам и для какого компилятора. 

Общая идея проекта Юрия состоит в том, что он делает свой ЯП, который (и то, как я понял, на начальном этапе) будет транспилировать код в Си/Си++. При наличии своего компилятора выглядит логичным генерировать не русскоязычный C++, требующий дальнейшей обработки, а включить функционал этой утилиты в сам компилятор языка, который Юрий планирует разработать.
----------------------------------------------------------------
2025-04-21 17:11:58 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Вежливый Лис

«Vala компилирует код в C. Vala — это язык программирования, который был разработан для создания приложений на платформе GNOME. Он предоставляет синтаксис, похожий на C#, и поддерживает объектно-ориентированное программирование, но в конечном итоге компилируется в C-код, который затем может быть скомпилирован с помощью стандартного компилятора C, такого как GCC. Это позволяет Vala использовать существующие библиотеки на C и интегрироваться с экосистемой GNOME.»
«в Vala вы можете использовать идентификаторы переменных, написанные русскими буквами или другими символами из Unicode.»

Дело за малым - переписать все библиотеки.
----------------------------------------------------------------
2025-04-21 17:21:17 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

Да не нужна никому ни Vala, ни Gnome. Покажите мне, сколько на hh.ru вакансий с требованиями знания Vala или Gnome. Вакасии все по Qt в основном. Любая транспиляция - это дорогостоящий процесс, потому что появляется лишний слой. Этот слой мешает во внутреннем цикле работы программиста, в каждом элементарном действии, будь то понимание ошибок компиляции, отладка или чтение распечаток стека. Это примерно как собирать лего-конструктор под водой. Т.е. любой транспилятор (даже утилита из этой темы) - это достаточно дорогая игрушка и неоптимальное решение на круг.
----------------------------------------------------------------
2025-04-21 18:22:31 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Клихальт

[b]Денис Будяк[/b], [q]Да не нужна никому ни Vala, ни Gnome. Покажите мне, сколько на hh.ru вакансий с требованиями знания Vala или Gnome.[/q]
Если я вас правильно понял, вы закрыли свои проекты "ЯР" и "ЯОС" и больше ни к ним, ни к чему бы то ни было подобному никогда не вернётесь, ведь на hh.ru не было, нет и не будет вакансий с требованиями их знания и предлагаете всем последовать за вами?
----------------------------------------------------------------
2025-04-21 18:56:05 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

Во-первых, я ЯОС не закрыл, работа продолжается, хотя и без прежнего фанатизма и репозиторий закрыт теперь недоступен широкой публике. Понятно, что Вы тут пытаетесь меня как-то "тяпнуть", но это не сработало в данном случае. Я вполне конкретно и обоснованно пишу, что данная утилита транслитерации в C++ в современном мире смысла не имеет. Я написал исчерпывающие доводы, никто не ответил. Попробуйте хотя бы на них ответить что-то такое, обезоруживающее. А не вот это, что Вы сейчас написали.
----------------------------------------------------------------
2025-04-21 18:58:30 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

И да, я на работе тоже эксплуатировал разные транспиляторы, начиная от Chestnut и заканчивая самописным макропроцессором для SQL, поэтому я не в теории, а на практике понимаю, что такое "собирать конструктор лего под водой". Это иногда тоже может иметь смысл, но нужно хорошо взвесить за и против. В случае данной утилиты, против перевешивают. За одним исключением - если у кого-то легаси компилятор C++, который не будет обновлён, и непреодолимое желание писать именно на русском C++. Если такой человек существует, то может быть, он отзовётся?
----------------------------------------------------------------
2025-04-21 19:07:50 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

Вот есть (был?) такой проект Концепт. Когда я работал над проектом Яр, точнее, когда я уже сдулся, его автор пришёл ко мне и сказал "я не осиливаю этот проект, в команде проекта есть разные роли. Давай будем вместе что-то делать и найдём для меня роль". Но на тот момент я уже не хотел развивать Яр. Видите, человек сделал реально достаточно уникальную вещь, она была доведена до конца, пусть и с ограничениями. Но он понял, что в одиночку не тянет, и стал искать способы объединиться с кем-то, у кого он увидел достаточно силы и энергии. Энергии уже не было на тот момент, и главное, мне не нравилась тема ИИ (она мне и сейчас не нравится), а Концепт идёт в том направлении, и Яр туда же шёл. Что сделал Юрий или Вежливый Лис? Что они довели до конца? Даже утилиту транслитерации Юрий не смог сделать так, чтобы Паша отличалась от Пасхи, это вообще-то существенный изъян, даже если он не попался, поскольку нет технической обратимости и нельзя, например, перевести выдачу стека обратно на русский: преобразование неоднозначно. За 13 лет появилась ли хотя бы первая версия его проекта? Нет. Про Лиса вообще говорить нечего. Если бы эти люди более адекватно оценивали бы свои возможности, они бы пришли в какой-то проект (необязательно ЯОС) и предложили бы то же, что предложил в своё время мне автор Концепта. Но гордыня не даёт. Да, об этом я пока не устал писать, потому что от этого страдают не только эти люди, которые лишаются возможности сделать что-то реально полезное в жизни, но и все мы, потому что полезная энергия этих людей не идёт на благо страны и вообще ни на какое благо. Это я называю "синдром велосипедостроения" и писал об этом много раз.
----------------------------------------------------------------
2025-04-21 20:44:58 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Неслучайный читатель

(""Я говорю о Вашем состоянии"")Откуда знаете о нём?! Даже гадалки просят фото. Ясновидящий!
(""Вы так и остались в фазе отрицания... когда это оказалось неправдой Вы"")
Отрицания чего? Ясно же написал:
(""Понятно, Юникод и кириллица поддерживается стандартом C++"")
То есть признался в том, чего не знал. И это было незнанием, а не неправдой.
(""включить функционал этой утилиты"")
Вы понятие "функциональность" заменяете словом "функционал", у которого такое определение:
(""Функционал — функция, заданная на произвольном множестве и имеющая числовую область значений: обычно множество вещественных чисел или комплексных чисел. В более широком смысле функционалом называется любое отображение из произвольного множества в произвольное (не обязательно числовое) кольцо"")
Это что? Наглая ложь? С какой целью Вы лжёте и запутываете людей? Неужели совесть даст Вам заснуть? Вы на кого работаете? Легко выяснить значение этих слов -- выходит, что Вы и гуглить не умеете?
(""легко предсказать... что утилита нужна, потому что есть компиляторы, которые её не поддерживают"")
Ещё потому, что русскоязычные директивы препроцессора никак не русифицируются компиляторами, которые поддерживают Юникод. Представьте доказательства, если это не так, если в стандарте директивы препроцессора имеют русский вариант.
----------------------------------------------------------------
2025-04-21 21:56:56 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

Ну некреативно совсем пытаетесь докопаться со своими восклицательными знаками. Про слово #include я ответил гораздо выше, не буду повторяться. 

Вопрос не в том, что Вы не знали про допустимость кириллицы, а сколько у Вас было заготовлено защитных линий перед тем, как Вы это признали. Это не совсем профессионально. Если Вам что-то даже намекнули, можно пойти и самому это выяснить, а не упираться до последнего. Фаза отрицания в этом и состоит. Я не гадалка, возможно и ошибся - это не важно и не стоит траты времени. Если Вы не были в фазе отрицания - то и прекрасно. Тогда самостоятельно прочитайте и осознайте мой ответ про #include, мне даже неважно, что Вы надумаете.
----------------------------------------------------------------
2025-04-21 23:21:53 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Автор сайта

TinyCC много лет не обновлялся, Юникод он не поддерживает. Утилита позволяет совместить TinyCC и русские тексты. Ценю его за скорость компиляции, о чём неоднократно говорил. 

(**Неслучайный читатель**), (**Денис Будяк**)
Не надо обсуждать личности, это сайт о технологиях. Переходите на форум к Денису, там можно ругаться более плодотворно.
(""(**Вежливый Лис**): Дело за малым — переписать все библиотеки"")
У меня нет такой проблемы, утилита позволяет переводить по словарику. Добавил русский эквивалент -- и можешь обращаться по русскому имени.

(**Денис Будяк**)
(""будет транспилировать код в Си/Си++"")
Нет, только в Си.
(""включить функционал этой утилиты в сам компилятор языка, который Юрий планирует разработать"")
Зачем? Эта утилита -- совершенно не компилятор, а только костыль.
(""утилита транслитерации в C++ в современном мире смысла не имеет"")
Она имеет смысл для ограниченного круга лиц. Поэтому я её не пиарил, писал о ней лишь на 2 форумах. Но ни в коем не на Хабре. Лишней популярности не добивался. Счётчик закачек на сегодня -- 1673 раза. Думаю, на одном уровне с ЯОС.

Самое главное, что она никому не мешает жить. Ну кроме некоторых. Не нравится -- пройдите мимо.
(""у кого-то легаси компилятор C++, который не будет обновлён... Если такой человек существует, то может быть, он отзовётся?"")TinyCC -- тот самый случай. Делился с исходниками с человеком, который хотел написать такую же утилиту для русификации D. Ещё делился исходниками с Евгением Кирьяновым. Он сперва дорабатывал её на свой вкус, а потом писал интерпретатор виртуальной машины. Так что число интересующих было точно не нулевое.
(""Вот есть (был?) такой проект Концепт"")
Лично встречался с его автором 3 раза. Делал хорошую вещь. Но, на мой взгляд, его проекту не хватало хорошей документации. Говорю, потому что сам пытался изучить этот Концепт. Без документации трудно найти соратников. Ведь соратники появляются тогда, когда у кого-то появился интерес. А документация этот интерес не удовлетворяет. Но такая критика нисколько не умаляет моего уважения к автору Концепта. Может, что-то недооценил, а к чему-то душа не лежит.
(""гордыня не даёт"")
Пусть первый камень бросит тот, кто без этого греха.
(""люди, которые лишаются возможности сделать что-то реально полезное в жизни... полезная энергия этих людей не идёт на благо страны"")
Вы плохо думаете о людях. Те, кто может, тот делает. Если ему кто-то мешает, то точно не я или Лис. Никто никому по рукам не бьёт. И вообще, на этом сайте и нескольких форумах побывала максимум сотня человек, преувеличивать значимость этих площадок будет ошибкой.
(""синдром велосипедостроения"")
Это не значит, что Ваш синдром лучше моего. У каждого свои недостатки © (,,В джазе только девушки,,)
----------------------------------------------------------------
2025-04-22 06:10:40 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

За свои грехи каждый сам отвечает. Никакие мои синдромы никаких Ваших не искупают и не корректируют. Но ладно, если 1000 человек скачали Вашу утилиту, то, наверное, человек 5 её внедрили. ЯОС не внедрил никто, даже я сам ей не пользуюсь. Значит, Вы сделали что-то полезное и законечнное для внедрения РЯ в ИТ и не мне Вас судить, так что даже если мы не дождёмся Вашего языка или он окажется бессмысленным, это уже менее важно. Другое дело, что за всю жизнь можно было бы сделать и ещё что-то, но тут уж как с творческой работой. Писателей миллионы, но знаем мы в лучшем случае о сотне. 

Если рассмотреть аналогию с музыкой, то есть группы одной песни, но большинство групп являются группами нуля песен - они начинают, проходят свой жизненный цикл и распадаются в безвестности. Вот Вы уже человек как минимум одной утилиты, и ещё не умерли. Придётся теперь снова Вас уважать, и это даже неплохо. 

С технической точки зрения, вполне достаточно внести небольшие патчи с TinyCC и опять же для него эта утилита будет не нужна. Поэтому если именно он является целевым компилятором, то даже это не оправдывает существование данной утилиты. Поскольку этот компилятор вряд ли интенсивно меняется и доступен в исходных текстах, то это не должно быть сложным.
----------------------------------------------------------------
2025-04-22 06:14:48 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

Насчёт того, мешает что-то или не мешает, худсоветы были не только в СССР, и они могли положить готовое творение на полку. Худсоветы были и в Древней Греции, и по решению худсовета уже готовую вазу могли разбить. В бизнесе тоже есть свои худсоветы - это крупные корпорации, которые приходят и уничтожают что-то, что им не нравится, никого не спрашивая разрешения. Правда, они руководствуются вовсе не общественным благом и не красотой при этом, а лишь тем, как бы ещё получше ограбить весь мир. 

Я бы, возможно, сломал Вашу утилиту, если бы я был худсоветом. С другой стороны, дерево надо судить по плодам. Если гипотетические 5 человек ей пользуются, то пусть будет. Вообще говоря, моё отношение к Си и Си++ хорошо известно и конечно это бы тоже превратилось в черепки, если бы я был худсоветом и моей целью было бы сделать программирование более эффективным и безопасным. Однако тут уж у меня точно руки коротки. Пока что Си++ меня победил и заставил на себе программировать, а я его не смог победить даже не уровне словесных баталий.
----------------------------------------------------------------
2025-04-22 06:18:08 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

Мешают ли люди? Да, люди вполне могут мешать. Исходя из теории пассионарности, например. Россия стала тем, чем она сейчас есть, благодаря людям, которые были совершенно другими, чем вы. Они думали по-другому, вели себя эффективно и достигали (путём великих подвигов и жертв). А вы её гробите своими алгоритмами поведения и, возможно, угробите. Но опять же, Вы, Юрий, частично амнистированы, исходя из гипотетических 5 промышленных пользователей Вашей утилиты. Вопрос лишь ко всей остальной Вашей деятельности.
----------------------------------------------------------------
2025-04-22 19:01:37 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Вежливый Лис

Интересно, правда ли что в школе не всех учили, что хвалить надо публично, а ругать - лично?
----------------------------------------------------------------
2025-04-22 22:48:10 | arifmetika-sintaksisa-3 | Деньги на WWWетер

Если лаконичность Оберона вызывает восхищение, то нужно поискать чемпиона по минимализму грамматики среди языков. Кажется, я его нашёл.

1. Программа
(==<program> ::= { <word-definition> | <word-execution> }==)
2. Определение слова (словоформы)
(==<word-definition> ::= ":" <word-name> { <word> } ";"
<word-name> ::= <identifier>==)
3. Идентификатор (имя слова)
(==<identifier> ::= <letter> { <letter> | <digit> }
<letter> ::= "A" | "B" | ... | "Z" | "a" | "b" | ... | "z"
<digit> ::= "0" | "1" | ... | "9"==)
4. Выполнение слова
(==<word-execution> ::= <word>
<word> ::= <built-in-word> | <user-defined-word> | <literal>==)
5. Встроенные слова (примеры)
(==<built-in-word> ::= "DUP" | "DROP" | "SWAP" | "+" | "-" | "*" | "/" | "." | "EMIT" | "IF" | "THEN" | "DO" | "LOOP" | ...==)
6. Литералы (числа, строки, символы)
(==<literal> ::= <number> | <char> | <string>
<number> ::= [ "-" ] <digit> { <digit> }
<char> ::= "'" <any-character> "'"
<string> ::= '"' { <any-character> } '"'==)
7. Управляющие конструкции
(==<if-statement> ::= "IF" { <word> } [ "ELSE" { <word> } ] "THEN"
<loop> ::= "DO" { <word> } "LOOP" | "BEGIN" { <word> } "UNTIL"==)
Итого -- 15 правил. (**Это язык Форт**)!
----------------------------------------------------------------
2025-04-22 22:50:55 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

Это в школе сержантов вроде учат, а у меня ВУС такая, что я сержантом не был. Если это в школе учат, то по какому предмету? Я на самом деле вас всем строем ругаю, да и без толку в любом случае, хоть лично, хоть оптом.
----------------------------------------------------------------
2025-04-22 22:52:50 | utilita-transliteratsii-russkogo-Si-SiPlusPlus-v-standartnyj | Денис Будяк

Ну и кстати я Юрия в итоге похвалил, если кто не заметил. И тебя похвалю, если будет за что.
----------------------------------------------------------------
2025-04-23 08:29:57 | arifmetika-sintaksisa-3 | Gudleifr

("" Итого — 15 правил "") Это неправда. В FORTH ровно столько синтаксических правил, сколько надо программисту в данный момент.
----------------------------------------------------------------
2025-04-26 12:56:58 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Автор сайта

Добавлен язык графического программирования <a href="#BearLogica">BearLogica</a> для плат ELBEAR (на основе микроконтроллера MIK32 «Амур» архитектуры RISC-V) от новосибирской компании «Элрон».
----------------------------------------------------------------
2025-04-26 13:08:35 | obrabotka-oshibok | Автор сайта

Эврика! Нашёл, каким ключевым словом обозначить ветвь вычислений, куда делается переход при неплановом ходе вычислений (особые случаи). Слово (++увы++) коротко и ясно выражает суть. По форме конструкция с проверкой особых ситуаций напоминает (++try++) -- (++catch++) из C++, только без (++try++) в начале.

И, по идее, можно было бы просто взять слово (++catch++) (которому Е.А. Зуев нашёл русифицированные вариант (++перехват++)) и не париться. Но дело в том, что конструкция похожа на то, что есть в C++ только внешне, но никак не по содержанию. Поэтому лучше избежать аналогий, чтобы не думали, что это аналогичное (++try++) -- (++catch++).

Так же подыскал точное по смыслу соответствие ключевым словам (++may be++). Напомню, что функции и другие сущности программы, которые не гарантируют выдачи правильного или ожидаемого значения во многих языках помечаются как (++may be++), то есть (,,может быть,,). Решил, что слово (++зыбкий++) лучше отражает суть. Таким образом, (++увы++) и (++зыбкий++) заменяют собой слова (++при ошибке++) и (++ненадёжный++), которые использовались в этой статье ранее.

Словосочетания (++may be++) и (++может быть++) состоят из двух слов, а не одного. Это плохо. Соединять их вместе -- плохой вариант, особенно когда в языке идентификатор может позволить себе состоять из нескольких слов, а ключевое слово -- нет. Так же надо учесть, что такая пара ключевых слов не может существовать отдельно друг от друга и выражают единую суть. Поэтому единственное ключевое слово лучше пары. Теперь осталось придумать, каким словом лучше всего заменить (++for each++) (,,для каждого,,). Здесь тоже два слова и тоже соединять их вместе не стоит.
----------------------------------------------------------------
2025-04-27 14:01:12 | len-dvigatel-progressa | Бурановский дедушка

Немецкие учёные доказали: чересчур здоровый образ жизни -- путь в могилу. А вот лень -- это залог здоровья. Пофигисты и бездельники могут торжествовать: они проживут дольше тех, кто рвёт жилы в спортзале. Лень не зря называют матушкой, она заботится о нас не хуже родной матери! Сибариты и лентяи имеют более устойчивую психику. Они не надрываются из последних сил, чтобы взять штурмом очередную ступеньку карьерной лестницы или на всю катушку использовать абонемент в спортзал.

Ничего не делать -- одна из самых полезных вещей, которую мы можем для себя сделать. Так сейчас считают учёные. Они доказали, что лень укрепляет здоровье, делает нас более продуктивными, защищает мозг от перегрузок, улучшает концентрацию внимания, укрепляет здоровье и продлевает жизнь. Как бороться с ленью и надо ли с ней бороться?

Понимаете, мы развиваемся всё время в непрерывной эволюции, технической, психологической, какой угодно. И в итоге мы всё больше и больше работаем. Со всей нашей техникой, со всеми нашими средствами коммуникаций -- мы всё больше и больше себя запрягаем и работаем. А на самом деле любые ранние формы существования человечества не заключались в непрерывной работе.  Всё началось с XIX века, с развития паровых машин. Получается, что чем больше мы в состоянии изобрести, тем больше мы работаем, запрягаем себя в эту телегу, которую сами же должны тянуть. Человек должен работать меньше, он должен сидеть у костра. Он должен заниматься танцами на лугу, он должен ходить в гости к свои знакомым, родным. Он должен большую часть времени проводить в отдыхе. Но ни в коем случае не в постоянной работе, которая никому не нужна, а только чтобы набегали нули у кого-то на счету.

Лениться не вредно, а даже полезно. Лень -- это всего лишь защитная функция организма, чтобы не делать ту деятельность, в которой организм не видит смысла. То есть наш мозг каждый раз прогнозирует, сколько он потратит усилий и сколько получит удовольствия. И если баланс не в пользу удовольствия, то он будет лениться.

Лень ничего не хочет. Она не хочет делать бесцельных действий. Всё, что она сделает, она сделает качественно, чтобы не переделывать. И всё, что она сделает, она сделает сразу до конца. Чтобы не возвращаться назад, потому что ей лень делать заново. Она не станет делать лишних действий, создавать себе трудности, потому что ей лень преодолевать то, что преодолевать не надо. Её ж не зря называют матушкой!

Так как она все результаты использует по максимуму, то она и нового кучу придумывает. Она ж всегда свою работу облегчит. Она очень трудолюбива. Она ничего не делает зря. Не надо отказываться от лени. Лень -- это незаменимое качество для плодотворного, целенаправленного труда. Она любит труд и бережёт его, она не тратит попусту силы.
----------------------------------------------------------------
2025-04-27 18:40:01 | len-dvigatel-progressa | Бурановский внучок

Бурановский дедушка, 
Не ленись и напиши уже русский компилятор!
----------------------------------------------------------------
2025-04-27 20:21:37 | len-dvigatel-progressa | Вежливый Лис

Указывать кому конкретно что делать - это невежливо. Если сказать просто "в рамках плана по глобальному доминированию русской культуры и языка должен быть написан кириллический компилятор", то это будет вежливо, но дедушку не замотивирует. Что же надо делать на самом деле? На самом деле надо зубодробительно подробно расписывать туториалы. Да, вся информация уже существует в книгах (как 70-х годов из СССР, так и в современных), но надо из этого сделать единый ресурс, проводящий юного падавана от полного незнания до написания компилятора (ну или хотя бы автокода для начала). [s]Приглашаю, кстати, ко мне на форум.[/s]
----------------------------------------------------------------
2025-04-28 13:59:01 | len-dvigatel-progressa | Внучок

Методист без опыта написания компилятора Вежливый Лис, не ленись и напиши уже русский компилятор!
----------------------------------------------------------------
2025-04-28 15:59:11 | len-dvigatel-progressa | Бурановский дедушка

Сколько дензнаков предлагаете?
----------------------------------------------------------------
2025-04-29 00:23:30 | len-dvigatel-progressa | Автор сайта

<table border=0 align=center cellpadding=5 cellspacing=5><tr><td><img src="_I/natash-ty-spish.png" alt="Наташ, проснись. Пиши компилятор"></td></tr></table>
----------------------------------------------------------------
2025-04-29 10:26:54 | len-dvigatel-progressa | Внучок

Бурановский дедушка:
[q]Сколько дензнаков предлагаете?[/q]
Никогда не будет написан русскоязычный компилятор. ...
Да и если предложат, то все равно не напишет.
----------------------------------------------------------------
2025-04-29 11:05:19 | len-dvigatel-progressa | Вежливый Лис

> все равно не напишет

Верно. Потому что тот, кто может написать - знает сколько именно денег нужно. А если спрашивает "сколько дадите" - значит некомпетентный. Я два триллиона просил (это БудДену ответ), не дают. Инфляция ещё, скоро буду просить три.
----------------------------------------------------------------
2025-04-29 11:34:26 | len-dvigatel-progressa | Внучок

[q]Я два триллиона просил (это БудДену ответ), не дают.[/q]
Умеете бюджет пилить :)
А если и возьметесь за написание компилятора, то напишите поделку первокурсника и представите как супердостижение.
----------------------------------------------------------------
2025-04-29 13:19:48 | len-dvigatel-progressa | Gudleifr

(""напишите поделку первокурсника"")В лучшем случае, он опять разбанит меня и опять будет клянчить.
----------------------------------------------------------------
2025-04-29 15:46:12 | len-dvigatel-progressa | Вежливый Лис

"напишите" - в данном случае через "е" (напиш[b]е[/b]те)
----------------------------------------------------------------
2025-04-29 16:34:36 | len-dvigatel-progressa | Бурановский дедушка

(**Ты приходишь и просишь что-то у меня, но ты просишь без уважения**)
----------------------------------------------------------------
2025-04-29 17:34:31 | len-dvigatel-progressa | Внучок

[q]"напи шите" — в данном случае через "е" (напи шете)[/q]
Со shitом или на shitе. :)
----------------------------------------------------------------
2025-04-30 07:22:28 | arifmetika-sintaksisa-3 | Gudleifr

(**Лис**)
(""А чем таким Форт более саморасширяющийся, чем Си?"")
Методом борьбы со сложностью.
Броуди: "На самом деле вам не стоит писать каких-либо серьезных задач на Форте; как язык, он просто недостаточно мощен. Вам "следует" писать на Форте свои собственные языки (лексиконы) для моделирования вашего понимания проблемы, на которых вы можете элегантно описать ее решение".
----------------------------------------------------------------
2025-04-30 08:49:41 | arifmetika-sintaksisa-3 | Вежливый Лис

[quote]Лис[/quote]
Я не вам отвечал, и не у вас спрашивал. Просто идите лесом. Ваш ответ - полностью бесполезен (говно), но это ещё не переход на личности, но перейти на личности очень хочется, ваша суть очень вашему ответу соответствует. Я это пишу, чтобы вы не воображали, что сделали что-то полезное.
----------------------------------------------------------------
2025-04-30 12:21:45 | arifmetika-sintaksisa-3 | Gudleifr

(**Лис**)
(""мне непонятно, как новые понятия связываются с синтаксисом языка"")
Путем создания нового языка с требуемым синтаксисом. См. выше Броуди.
----------------------------------------------------------------
2025-04-30 12:21:45 | arifmetika-sintaksisa-3 | Gudleifr

(**Лис**)
(""мне непонятно, как новые понятия связываются с синтаксисом языка"")
Путем создания нового языка с требуемым синтаксисом. См. выше Броуди.
----------------------------------------------------------------
2025-04-30 12:59:16 | arifmetika-sintaksisa-3 | Gudleifr

(**Лис**)
(""Лисп, или Форт - это примерно как Си и Баш в одном флаконе, если так понятно"")
"Си и Баш в одном флаконе" - это Perl. Лисп и Forth - это про другое.
----------------------------------------------------------------
2025-04-30 18:17:59 | arifmetika-sintaksisa-3 | Внучок

Выкинь Forth, Си Ыбашь!
----------------------------------------------------------------
2025-05-01 00:35:55 | arifmetika-sintaksisa-3 | Автор сайта

Большинство языков -- саморасширяющиеся. Просто одни языки расширяются в одну сторону, а другие -- в другую. Всё зависит от того, какую цель ставили перед собой создатели языков. Поклонники динамической типизации видят свои приоритеты, а статической -- другие.

Есть, кстати, не расширяющиеся языки, например SQL. Когда-то давно педалировалась тема саморазвивающихся программ. Типа их запрограммируют на развитие, а там глядишь, они так саморазовьются, что сам собой возникнет искусственный интеллект.

Наверное, трудно заставить программу на Си, чтоб она сама вносила в себя изменения, компилировала и снова работала уже модифицированная. Так же нелегко представить, чтобы программа на Форте сама внедрила в себя строгую типизацию. Или типизацию Караваева на основе физических величин, которую предложили называть <a href="tipy-v-inzhenernyh-zadachah.php#31">метатипизацией</a>. И чтобы выявляла в себе некоторые ошибки (**до запуска программы**).

Поклонники Лиспа или Форта заявят о преимущества своих языков, но им возразят поклонники других языков. Будет холивар. Тут найти бы правду, проведя соревнования между командами Лиспа, Форта, Питона, Хаскелла, Джавы, Си и прочих. Дать бы всем одинаковое задание написать 1) ОС, 2) браузер, 3) офисный пакет, 4) графический редактор и прочее. Вот тогда соревнование выявило бы победителя. Но кто ж на это пойдёт?
----------------------------------------------------------------
2025-05-01 00:45:47 | arifmetika-sintaksisa-3 | Внучок

[q]Тут найти бы правду, проведя соревнования между командами Лиспа, Форта, Питона, Хаскелла, Джавы, Си и прочих. Дать бы всем одинаковое задание написать 1) ОС, 2) браузер, 3) офисный пакет, 4) графический редактор и прочее. Вот тогда соревнование выявило бы победителя. Но кто ж на это пойдёт?[/q]
Можно не писать, а что гораздо проще. Проанализировать текущее положение дел, на чем написаны эти 4 пункта.
Вопрос тот же. Но кто ж на это пойдет?
----------------------------------------------------------------
2025-05-01 07:50:49 | arifmetika-sintaksisa-3 | Клихальт

[b]Внучок[/b], [q]Можно не писать, а что гораздо проще. Проанализировать текущее положение дел, на чем написаны эти 4 пункта.[/q]
Очень часто пишут не на том что лучше подходит, а на том, что лучше знают и что привычнее, поэтому ваш подход даст, мягко выражаясь, лукавый результат.
----------------------------------------------------------------
2025-05-01 09:24:30 | arifmetika-sintaksisa-3 | Внучок

Клихальт,
[q]Очень часто пишут не на том что лучше подходит, а на том, что лучше знают и что привычнее, поэтому ваш подход даст, мягко выражаясь, лукавый результат.[/q]
Хорошо. Можно усложнить в плане получения результатов. Берем производную, т.е. изменение за какой-то промежуток времени. Отвечаем на вопрос: "Сколько пишут сейчас 4 пункта в год на определенных языках." Здесь будет прослеживаться реальная картина.
Лукавый результат может получится если люди будут писать на непривычных языках.
----------------------------------------------------------------
2025-05-01 09:34:44 | arifmetika-sintaksisa-3 | Gudleifr

(*Внучок*)
(""Но кто ж на это пойдет?"")
Никто. Не надо огульных суждений. Возьмите любой из существующих программных продуктов и посмотрите его историю. И в большинстве случаев упретесь в то, что его смысловая часть написана на каком-нибудь мертвом языке для давно забытой машины. Современные "правильные" языки используются лишь для переписывания старых алгоритмов в "безопасной" и "стандартизированной" форме. Просто для того, чтобы создать видимость "прогресса IT".
----------------------------------------------------------------
2025-05-01 10:43:24 | arifmetika-sintaksisa-3 | Внучок

[q]Никто. Не надо огульных суждений. [/q]
Огульно.

[q]Возьмите любой из существующих программных продуктов и посмотрите его историю. И в большинстве случаев упретесь в то, что его смысловая часть написана на каком-нибудь мертвом языке для давно забытой машины. [/q]
Ну и в чем здесь проблема? Это не мешает провести подсчеты.

[q]Современные "правильные" языки используются лишь для переписывания старых алгоритмов в "безопасной" и "стандартизированной" форме. [/q]
Переписывают потому, что есть проблемы с кодом в плане безопасности и обслуживания этого кода.

[q]Просто для того, чтобы создать видимость "прогресса IT".[/q]
Лукавите, без прогресса не было бы в каждом кармане по компьютеру.
----------------------------------------------------------------
2025-05-01 11:40:54 | arifmetika-sintaksisa-3 | Gudleifr

(**Внучок**)
(""Ну и в чем здесь проблема?"")
В том, что в книге Кнута работа с двусвязным списком выглядела так:

(++P<=AVAIL, LLINK(P)<-X, RLINK(P)<-RLINK(X), LLINK(RLINK(X))<-P, RLINK(X)<-P++)

а на "современном правильном языке" это библиотека строк на 600. Понятно, с обычными 33-ю ошибками на тысячу строк.

Причем, выросло не только время на написание программистом всей этой лабуды, но и время, затрачиваемое пользователем на доступ к "вычислительным услугам". Вот он и вынужден он таскать с собой компьютер.
----------------------------------------------------------------
2025-05-01 13:26:34 | arifmetika-sintaksisa-3 | Клихальт

[b]Gudleifr[/b], [q]Современные "правильные" языки используются лишь для переписывания старых алгоритмов в "безопасной" и "стандартизированной" форме. Просто для того, чтобы создать видимость "прогресса IT".[/q]
Вот с вашим утверждением про "видимость прогресса IT" полностью согласен.
----------------------------------------------------------------
2025-05-01 13:42:22 | arifmetika-sintaksisa-3 | Внучок

[q]В том, что в книге Кнута работа с двусвязным списком выглядела так:
P<=AVAIL, LLINK(P)<-X, RLINK(P)<-RLINK(X), LLINK(RLINK(X))<-P, RLINK(X)<-P
а на "современном правильном языке" это библиотека строк на 600. Понятно, с обычными 33-ю ошибками на тысячу строк.[/q]
Не проблема, переписываем на другой язык и радуемся. Можно найти Кнута-2, и молится на его книжки.

[q]Причем, выросло не только время на написание программистом всей этой лабуды...[/q]
Чувствуется негативное отношение к работе.
Возможно увеличились требования к качеству кода и функционалу.

Да и вообще, какие ваши доказательства? Что пишут дольше?
[q] , но и время, затрачиваемое пользователем на доступ к "вычислительным услугам". Вот он и вынужден он таскать с собой компьютер.[/q]
Если бы вы жили тысячи лет, наверное предпочли б каменную пещеру и написание программ мелом на камне. А эти все "современные" коммуникации в квартиру - нужно оплачивать что-то, сантехников вызывать, то ли было время вышел из пещеры и все удобства рядом, доступно и быстро.
----------------------------------------------------------------
2025-05-01 13:49:12 | arifmetika-sintaksisa-3 | Gudleifr

(**Внучок**)
(""Возможно увеличились требования к качеству кода и функционалу"")
Наоборот, и то, и то упало до полной неработоспособности.
----------------------------------------------------------------
2025-05-01 16:08:10 | o-prevraschenii-kibernetiki-v-shmanstnvo | Бурановский дедушка

Наверное, не ещё не забыли, как два американских астронавта не могли вернуться на Землю. Подробный разбор аварии «Старлайнера», «Деградация «Боинга» потрясает» (https://www.nix.ru/computer_hardware_news/hardware_news_viewer.html?id=215250).

Позарило вот что. Перед стыковкой с МКС вышло из строя сразу несколько двигателей ориентации. Но после перезагрузки ПО системы управления двигатели стали исправны! Не все (один из них так и не заработал), и не сразу (не с первой перезагрузки), но (,,семь бед -- один reset,,) помогает! Принцип (,,как есть,,) и до космоса добрался!

Цифровизация подаётся как признак прогресса. Но вместе с этим прогрессом приходит глючное ПО, на которое никто не смеет распространить гарантийные обязательства.
----------------------------------------------------------------
2025-05-01 16:26:35 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Бурановский дедушка**)
(""Цифровизация подаётся как признак прогресса"")
Проблема в том, что цифровизация подается исключительно как "централизованная бухгалтерия".
----------------------------------------------------------------
2025-05-02 10:47:28 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

Проблема решается просто: космонавты подписывают бумажку, что не имеют притензий к разработчикам ПО, и они отправляются в полет, так везде делают :) Шучу.
----------------------------------------------------------------
2025-05-02 12:48:09 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Внучок**), Вы угадали!

(""МОСКВА, 2 мая - РИА Новости. В России с 1 сентября появится возможность установить самозапрет на заключение договоров об оказании услуг мобильной связи через Госуслуги или МФЦ, сообщил председатель Госдумы Вячеслав Володин в своем Telegram-канале"")
----------------------------------------------------------------
2025-05-02 14:32:35 | o-prevraschenii-kibernetiki-v-shmanstnvo | Бурановский дедушка

(""Место Барри Уилмора в первом пилотируемом полете «Старлайнера» должен был занимать Даглас Хёрдли. Но после знакомства с инженерами Boeing он… отказался лететь на их детище"")
Можно сказать, что Хёрдли отказался ставить галочку в лицензионном соглашении. Тогда право её поставить доверии Уилмору, который за это поплатился: был риск и МКС не пристыковаться, и на Землю не сесть -- без двигателей ориентации и то, и другое невозможны.
----------------------------------------------------------------
2025-05-02 17:20:54 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]Оказывается, специалисты «Боинга» ограничивались стандартными приемо-сдаточными испытаниями летных экземпляров двигателей и не проверяли их на полный полетный цикл (1000 импульсов от старта до стыковки и 500 от расстыковки до приземления). Кроме того, выяснилось, что теплоизоляция «конуры» (двигательного отсека) не дает двигателям правильно охлаждаться. Видимо, двигатели испытывали отдельно, а не в сборке. И без учета факторов влияния космического пространства. Потому что не был учтен нагрев от солнца, которое светило на заднюю часть корабля в течение стыковки.[/q] 
Ну и причем здесь цифровизация? Проблемы с процессами в компании. Проблемы с разными частями, не только с управлением.
----------------------------------------------------------------
2025-05-02 20:44:37 | o-prevraschenii-kibernetiki-v-shmanstnvo | Бурановский дедушка

Проблема с построением процессов в компании, по большому счёту, потребителя не волнуют. На процессы в суд не подашь. А волнует качество конечной продукции, которое складывается из качества "железа" и правильности ПО. На "железо" есть гарантия и можно засудить, если что. Но для ПО везде тихой сапой протаскивают принцип "как есть". Вот что возмущает. А то, что ПО отстойное -- об этом говорит перезагрузка, которая почему-то помогает волшебным образом. Вот если бы NASA наказала бы (,,Боинг,,) на хорошую сумму, тогда я бы сказал, что у сказки хороший конец.
----------------------------------------------------------------
2025-05-03 08:14:32 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]Проблема с построением процессов в компании, по большому счёту, потребителя не волнуют. На процессы в суд не подашь. А волнует качество конечной продукции, которое складывается из качества "железа" и правильности ПО.[/q]
Ну главное не в суд подать, а выяснить причину проблем. В суд можно подать и на компанию если она выдает несоответствующие стандартам продукты.
[q]На "железо" есть гарантия и можно засудить, если что.[/q] 
Привидите пример лицензии для "железа".

[q]Но для ПО везде тихой сапой протаскивают принцип "как есть". Вот что возмущает. А то, что ПО отстойное — об этом говорит перезагрузка, которая почему-то помогает волшебным образом. [/q]
https://www.drweb.ru/pravda/issue/?number=289
[q]Но принцип AS IS — общепринятое положение в мировой компьютерной практике — возник не на пустом месте. Он позволяет установить стоимость продукта на минимальном уровне, ограничив тестирование оптимальным количеством проверок.[/q]
Сложно протестировать все случаи без повышения стоимости. Кроме того железа без софта можно проверить, а софт без железа нет. 
Микросхемы существуют в физической реальности и на них воздействует физическая среда.

[q]Вот если бы NASA наказала бы «Боинг» на хорошую сумму, тогда я бы сказал, что у сказки хороший конец.[/q]
Если Боинг нарушил правила NASA, то он заплатил какую-то сумму.
----------------------------------------------------------------
2025-05-03 12:53:08 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(""Сложно протестировать все случаи без повышения стоимости"")
(""Да, тщательная разработка требует больших вложений"")
Вклад тестирования в безглючность минимален. С одной стороны, оно доказуемо не может дать окончательных гарантий, с другой, большая часть ПО и не должна быть гарантированно надежной.
----------------------------------------------------------------
2025-05-03 15:07:12 | o-prevraschenii-kibernetiki-v-shmanstnvo | Бурановский дедушка

(""Инженеры Oracle спровоцировали многодневный сбой ПО в десятках больниц. Врачи экстренно перешли на бумажные документы. Почти неделя в «каменном веке». Oracle стыдливо отмолчалась"")
(""Найден виновный в кривых обновлениях Windows, и это не программист-индус. Его сдал лично гендиректор Microsoft. Он сознался, что почти треть всего кода корпорации пишет искусственный интеллект. Microsoft продвигает ИИ почти четыре года. За эти же четыре года ей крайне редко удавалось выпустить обновление для Windows, не ломающее тот или иной компонент системы или ее целиком"")
И какая часть ПО не должна быть гарантированно надежной?
----------------------------------------------------------------
2025-05-03 15:32:44 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Бурановский дедушка**)
(""И какая часть ПО не должна быть гарантированно надежной?"")
Что можно было бы сказать о ПО посадочного модуля Луны-25, если бы она все-таки села? Только одно - после посадки оно никого не интересует. Пусть, даже, там все программные блоки стерты и сгорели.
(""Следствие 11: Программирование - есть создание кибернетических машин, максимум энтропии которых соответствует останову при получении правильного результата"")
Это вероятностный процесс. И внедрять тут ленинский "контроль и учет" бесполезно. Миритесь же мы с тем, что не можете полностью протестировать подчиненного-человека. Однако, должны быть уверены, что он может справиться с любой достаточно простой ситуацией. Или мы имеем возможность во-время подправить. Например, я долго пользовался NE.COM и сейчас пользуюсь стареньким Notepad++. Да я знаю их глюки, но меня устраивает большинство того, что они делают. А в сложные моменты могу управлять сам.
Ошибка Oracle была не в плохой надежности, а в избыточной автоматизации - попытке охватить "учетом" то, что проще было заменить общечеловеческим "протоколом".
Повторю известное Хоаровское:
(""существуют два способа составления проекта программного обеспечения: один способ - сделать его таким простым, чтобы было очевидно, что недостатков нет, а другой - сделать его таким сложным, чтобы не было очевидных недостатков"")
----------------------------------------------------------------
2025-05-03 15:33:10 | o-prevraschenii-kibernetiki-v-shmanstnvo | Сисадмин со стажем

(""И какая часть ПО не должна быть гарантированно надежной?"")
Наверно та, которую пишешь сам для себя. Какие-нибудь формулы в Экселе. А вот остальное...

Наше государство заставило всех внедрить продажу маркированных товаров через "Честный знак". Но государство не гарантировало, что сервера "Честного знака" будут работать и при этом работать правильно. Когда на этих серверах что-то случается, то все кассиры орут и психуют ("Маркировка не проходит! Сделайте что-нибудь! У меня очередь на кассе!"), то сделать с этим ничего не можешь и чувствуешь себя идиотом. А продавать мимо "Честного знака" нельзя. Вернуться в каменный век и продавать как раньше не получится.

Это мои 5 копеек в дискуссию.
----------------------------------------------------------------
2025-05-03 15:45:23 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]Это для производителей главное. А для потребителей главное — получить то, что заказал. Или компенсацию за неполучение заказанного.[/q]
Ну если это для вас в данном контексте важно, подавайте в суд на Боинг.

[q]Да, тщательная разработка требует больших вложений. Но из-за невозможности привлечь к ответственности процветает софт «и так сойдёт». [/q] Создайте софт и предлагайте свою лицензию с гарантией, которая привлечет вас к ответственности за все возможные действия пользователя с этим софтом. 

Вы лицензию на железо не предоставили. Железо проходит определенные проверки(тестирование), софт точно также.

[q]Можно, для этого есть эмуляторы. Для процессоров с новой архитектурой команд пишут и отлаживают софт в эмуляторах, когда ещё нет даже пробных партий микросхем.[/q] 
:) Эмуляторы не в воздухе запускаются.

[q]Не пишут про это.[/q]Напишут ли это журналисты, или напишут что-то горяченькое для читателей для того чтобы подействовать на чувства?
Ну и у вас чувства загораются или возникают дополнительные вопросы при чтении этого материала?
Почему НАСА Боингу не вставила? 

Подайте в суд на НАСА, поменяйте правительство в США, порадуйтесь, что у соседа по земному шару все плохо, может вам станет легче. (это кстати не позитивно)
----------------------------------------------------------------
2025-05-03 16:28:43 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]Наше государство заставило всех внедрить продажу маркированных товаров через "Честный знак". Но государство не гарантировало, что сервера "Честного знака" будут работать и при этом работать правильно. Когда на этих серверах что-то случается, то все кассиры орут и психуют ("Маркировка не проходит! Сделайте что-нибудь! У меня очередь на кассе!"), то сделать с этим ничего не можешь и чувствуешь себя идиотом. А продавать мимо "Честного знака" нельзя. Вернуться в каменный век и продавать как раньше не получится.[/q]
Государство заботится о потребителе и поэтому внедряет маркировку. 
Само государство не занимается технической стороной, это делают подрядчики, вот кстати с них можно спросить за несоответствующую работу.
----------------------------------------------------------------
2025-05-03 16:46:41 | o-prevraschenii-kibernetiki-v-shmanstnvo | Сисадмин со стажем

(""журналисты напишут что-то горяченькое для читателей для того чтобы подействовать на чувства? Ну и у вас чувства загораются или возникают дополнительные вопросы при чтении этого материала?"")
Мои чувства ежедневно, а иногда и ежечасно загораются, когда глючит софт, который я сопровождаю. В одних случаях наши программисты 1С исправляют глюки достаточно оперативно, могут даже за день что-то сделать. Но есть проблемы, которые не могут побороть годами: платформа 1С обновилась, от этого что-то сломалось, и программисты разводят руками: "Мы ничего не ломали, это в самой платформе что-то не так стало".

Есть другое ПО, в котором глючности куда больше. И обратиться за исправлением не к кому, потому что его разработчик общается только с дилерами. Дилеры, конечно, выслушают, посочувствуют, но ничего не обещают. Мол, есть закрытый форум, общий для дилеров и разработчиков. Там они доводят информацию о глюках до разработчиков. Но те больше работают над новыми фичами, к старым они возвращаются редко. После обновления ПО старые глюки иногда уходят, но всегда приходят новые.
(""я долго пользовался NE.COM и сейчас пользуюсь стареньким Notepad++. Да я знаю их глюки, но меня устраивает большинство того, что они делают"")
Ну так Вы решили за себя, для Вас компромисс приемлем. А Вы посадите за эти программы малообразованных юзеров, у которых над душой стоит толпа народу. Одно дело в бирюльки играть, а другое -- обслуживать сотни тысяч людей и при этом ни за что не отвечать, как с тем же "Честным знаком".
(""порадуйтесь, что у соседа по земному шару всё плохо"")
В случае со "Старлайнером" на родину "AS IS" вернулась карма. В этом есть какая-то справедливость.
----------------------------------------------------------------
2025-05-03 17:17:25 | o-prevraschenii-kibernetiki-v-shmanstnvo | Сисадмин со стажем

(""Само государство не занимается технической стороной, это делают подрядчики, вот кстати с них можно спросить за несоответствующую работу."")
(**Если вы не отзовётесь -- мы напишем в Спортлото!**) Так больше шансов что-то добиться.
----------------------------------------------------------------
2025-05-03 17:17:36 | o-prevraschenii-kibernetiki-v-shmanstnvo | Сисадмин со стажем

(""Само государство не занимается технической стороной, это делают подрядчики, вот кстати с них можно спросить за несоответствующую работу."")
(**Если вы не отзовётесь -- мы напишем в Спортлото!**) Так больше шансов что-то добиться.
----------------------------------------------------------------
2025-05-03 18:02:14 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]Мои чувства ежедневно, а иногда и ежечасно загораются, когда глючит софт, который я сопровождаю. [/q]
Поменьше включайте чувств, и больше голову.

[q]В одних случаях наши программисты 1С исправляют глюки достаточно оперативно, могут даже за день что-то сделать. Но есть проблемы, которые не могут побороть годами: платформа 1С обновилась, от этого что-то сломалось, и программисты разводят руками: "Мы ничего не ломали, это в самой платформе что-то не так стало".[/q]
Есть набор багов(глюков), которые нужно исправлять. Исправляются наиболее заметные - ввиду ограниченности ресурсов, времени.
Все исправить невозможно.

[q]Есть другое ПО, в котором глючности куда больше.[/q]
Cложно сделать софт без глючности, без возможности запустить калькулятор. Поэтому идет соревнование у кого глючности меньше.

[q]Но те больше работают над новыми фичами, к старым они возвращаются редко. После обновления ПО старые глюки иногда уходят, но всегда приходят новые.[/q]
Какие-то баги могут уйти в дальнейшем если код функционал будет выбрасываться в последующих версиях, но это долгий процесс потому что быстро исправляя можно добавить 2 новых бага.

[q]Если вы не отзовётесь — мы напишем в Спортлото! Так больше шансов что-то добиться.[/q]
Просчитайте сколько конкретный баг приносит вам убытка, найдите друзей по интересам(таких же пользователей), и напишите в спортлото на сколько вы получили убытка. Если при этом погибли люди, вам спортлото ответит, в независимости от того какие там лицензии на софт были.
----------------------------------------------------------------
2025-05-03 18:06:24 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

PS. А еще можно найти журналистов и написать статейку на сайт. Тогда можно найти людей с зажженными чувствами :)
----------------------------------------------------------------
2025-05-03 23:03:04 | o-prevraschenii-kibernetiki-v-shmanstnvo | Автор сайта

(""Приведите пример лицензии для "железа""")
Думаю, гарантийный талон на технику будет хорошим примером такой лицензии. Там чётко прописаны права потребителя и обязательства производителя, в том числе срок обязательств.
(""Что можно было бы сказать о ПО посадочного модуля Луны-25, если бы она все-таки села? Только одно — после посадки оно никого не интересует"")
Думаю, оно могло бы быть применено для полёта (,,Луны-26,,). Возможно, с доработками. То есть повторное использование кода.
(""Сложно протестировать все случаи без повышения стоимости."")
(""Да, тщательная разработка требует больших вложений"")
Не требует больших вложений! <a href="otsenka-nadyozhnosti-funktsii-s-neskolkimi-realizatsiyami.php">Отсюда</a>:
(""Линейный рост количества дублирующих друг друга реализаций функций приводит экспоненциальному росту надёжности"")
То есть линейно увеличивая затраты на разработку, можно получить экспоненциальный рост надёжности.
Увеличив затраты в 3 раза, можно добиться улучшения куда больше, чем в 3 раза.<table border=0 align=center cellpadding=5 cellspacing=5><tr><td><img src="_I/_I/rost-nadyzhnosti.png" alt="рост надёжности"></td></tr></table>
(""Создайте софт и предлагайте свою лицензию с гарантией, которая привлечет вас к ответственности за все возможные действия пользователя с этим софтом."")
Ответ оттуда же:
(""надёжность программ не может быть выше надёжности ПО нижнего слоя, на которое они опираются: операционной системы, СУБД и т. д."")
Как можно дать гарантию, если операционка её не даёт? Надо плясать от печки, то есть от ОС. Если ОС гарантирует, то и работающая поверх программа тоже может гарантировать. Есть же отечественные ОС РВ, где какие-то гарантии даются. И на прикладной софт тоже даются гарантии. Только не на ОС и ПО в отдельности, а на готовое изделие в целом, включая железо и софт.
(""Само государство не занимается технической стороной, это делают подрядчики, вот кстати с них можно спросить за несоответствующую работу"")
Интересно, а есть дублирующие сервера "Честного знака" с конкурирующим софтом? Мы же прописываем в сетевых настройках компьютера DNS1 и DNS2. Если первый не ответил, то обращаемся ко второму. Дублирование никогда не было лишним.
----------------------------------------------------------------
2025-05-04 10:26:09 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]Думаю, гарантийный талон на технику будет хорошим примером такой лицензии.[/q]
Он дается на всю технику, не выделяя железо и софт по отдельности.
[q]То есть линейно увеличивая затраты на разработку, можно получить экспоненциальный рост надёжности.[/q]
Возможно, но дедушка хочет засудить Боинг и программистов, а не разбираться с технической стороной вопроса.
[q]Как можно дать гарантию, если операционка её не даёт?[/q]
Я предложил дедушке встать на противоположную сторону, чтобы понять реальное положение вещей.
[q]Интересно, а есть дублирующие сервера "Честного знака" с конкурирующим софтом? Мы же прописываем в сетевых настройках компьютера DNS1 и DNS2. Если первый не ответил, то обращаемся ко второму. Дублирование никогда не было лишним.[/q]
Вы хотите сказать, что у некоторых админов не прямые руки?
----------------------------------------------------------------
2025-05-04 11:48:02 | nadyoznye-programmy-iz-nenadyoznyh-komponentov | Gudleifr

(""Необычная, потому раньше ничего похожего не встречал"")
Все забываю спросит, чем Вас не устроил очевидный первоисточник? Дж.Нейман. Вероятностная логика и синтез надежных организмов из ненадежных компонент. (Сб. Автоматы. 1956)
----------------------------------------------------------------
2025-05-04 13:33:49 | o-prevraschenii-kibernetiki-v-shmanstnvo | Сисадмин со стажем

(""гарантийный талон на технику будет хорошим примером такой лицензии."")
Ещё есть закон о защите прав потребителей. Было бы хорошо распространить его на софт.
(""есть дублирующие сервера "Честного знака" с конкурирующим софтом? Мы же прописываем в сетевых настройках компьютера DNS1 и DNS2. Если первый не ответил, то обращаемся ко второму."")
Идея хорошая, да только этим занимается единственное ООО «Оператор-ЦРПТ» и больше никто. Конкурентов нет. Нет технической возможности обратиться к DNS2.
(""Вы хотите сказать, что у некоторых админов не прямые руки?"")
Не знаю, у кого кривые руки. Может у программистов честного знака, может у их админов. С нашей стороны всё настроено и настройки не меняются. Как объяснить, что при неизменных наших настройках касс сервера "Честного знака" то отвечают, то нет?
(""Он дается на всю технику, не выделяя железо и софт по отдельности."")
Отлично! Вот так бы и с кассами -- если не работает "Честный знак", то по гарантии меняйте кассы. А что там не работает -- железо или софт -- разбирайтесь сами.
(""хочет засудить Боинг и программистов, а не разбираться с технической стороной вопроса"")
Тут выше описали, как программистам решать вопрос с надёжностью технически. А остальным надо дать возможность решать юридически.
(""встать на противоположную сторону, чтобы понять реальное положение вещей"")
Реальное положение вещей таково, что системные проблемы с есть, но их никто не решает. Это очевидно и тем, кто софт пишет, и тем, кто его использует -- с какой стороны ни посмотри.
----------------------------------------------------------------
2025-05-04 15:29:59 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]Ещё есть закон о защите прав потребителей. Было бы хорошо распространить его на софт.[/q]
Допустим его распространили. Вы купили антивирусник, он пропустил новый вирус которого нет в базах ни у кого. 
Вы подаете в суд на антивирусник(фирму). Он платит вам сумму. Такой алгоритм вы хотите?

[q]Не знаю, у кого кривые руки. Может у программистов честного знака, может у их админов. С нашей стороны всё настроено и настройки не меняются. Как объяснить, что при неизменных наших настройках касс сервера "Честного знака" то отвечают, то нет?[/q]Я задавал этот вопрос автору.
Кроме вас в цепочке есть оператор связи. Есть хакеры.

[q]Отлично! Вот так бы и с кассами — если не работает "Честный знак", то по гарантии меняйте кассы. А что там не работает — железо или софт — разбирайтесь сами.[/q]
Я этого не предлагал. У кого что болит. Дедушка говорил, что если с железом проблемы, то можно спросить с производителя. Так почему бы не перенести схему работы с железом на софт? Или с железом такие же проблемы существуют? 

[q]Реальное положение вещей таково, что системные проблемы с есть, но их никто не решает. Это очевидно и тем, кто софт пишет, и тем, кто его использует — с какой стороны ни посмотри.[/q]
Может потому что нет оптимального решения? При принятии решения, учитывайте условия каждой из сторон.
----------------------------------------------------------------
2025-05-04 16:11:57 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Внучок**)
(""Может потому что нет оптимального решения?"")
Есть, но не в форме "все также, только лучше". Начать, безусловно, следует с увольнения всех IT-шников.
----------------------------------------------------------------
2025-05-05 00:40:41 | nadyoznye-programmy-iz-nenadyoznyh-komponentov | Автор сайта

Источник (очень не уверен, что с приставкой (,,перво,,)) пишет об органах, нейронах, нервах и нервной системе, автоматах. Но не о программах, данных и алгоритмах. Вы процитировали написанное выше, но не полностью:
(""Была у меня одна идея фикс, которая давно не давала покоя. Необычная, потому раньше ничего похожего не встречал. Это если идёт речь о программном обеспечении. А вот в технике вообще и в электронике в частности этим никого не удивишь"")
Не претендуя на лавры первооткрывателя, я лишь хотел распространить эти нужные методы на программирование. Такому применению мешают нерешённость вопросов нечистоты подпрограмм, потому что дублирующие функциональность друг друга подпрораммы не должны одновременно оказывать побочный эффект или проявлять недетерминированность. Я предложил способ преодоления проблемы. Упомянутый же Вами Дж.Нейман не предлагает этого.
----------------------------------------------------------------
2025-05-05 00:56:48 | nadyoznye-programmy-iz-nenadyoznyh-komponentov | Gudleifr

(**Автор сайта**)
(""Источник (очень не уверен, что с приставкой «перво») пишет об органах, нейронах, нервах и нервной системе, автоматах. Но не о программах, данных и алгоритмах"")
Спасибо. Я так и подумал.
----------------------------------------------------------------
2025-05-05 17:27:26 | o-prevraschenii-kibernetiki-v-shmanstnvo | Бурановский дедушка

(""встать на противоположную сторону, чтобы понять реальное положение вещей"")
То есть встать на позицию бракоделов? Я их понимаю, работать хочется меньше, а денег больше. Но это же ущербно просто с точки зрения морали.
(""дедушка хочет засудить Боинг и программистов"")
Есть хорошая статья, как надо писать ПО: (,,Они пишут правильную вещь,,) (можно нагуглить). То есть технология отработана, но её не придерживаются.
(""Ещё есть закон о защите прав потребителей. Было бы хорошо распространить его на софт"")
Будь я законодателем, я бы предложил резать кошке хвост по частям. Сперва ответственность в 25% от суммы покупки ПО при условии быстрого устранения ошибки (при возрастании сроков сумма увеличивается). Потом 50, потом 100, потом 200. Просто надо дать время на перестройку процессов.
(""Допустим его распространили. Вы купили антивирусник, он пропустил новый вирус которого нет в базах ни у кого. Вы подаете в суд на антивирусник (фирму). Он платит вам сумму. Такой алгоритм вы хотите?"")
Да, такой. Но поскольку вирусы работают из-за дыр, которые допущены в операционке, то дальше (,,Доктор Вэб,,) подаёт иск к Биллу Гейтсу. В этой схеме ещё должно быть место страховым компаниям. Не хочешь тщательно возиться с софтом -- застрахуй его от рисков. Страховая компания выставит страховые платежи, тогда будет понятно, что выгоднее: страховать или доводить ПО до ума.
(""Может, потому что нет оптимального решения? При принятии решения, учитывайте условия каждой из сторон"")
Чтобы оно появилось, нужна широкая общественная дискуссия. К сожалению, широкие слои населения не готовы к ней по причине недостаточной образованности в этой области. И получается, что в среде айтишников круговая порука: (,,Ну, это очень сложно, поэтому доверьтесь специалистам,,). И тогда всё можно оставить как есть. Хотя не все заинтересованы в статус-кво. Те айтишники, которые покупают ПО, внедряют и эксплуатируют (сисадмины от мала до велика), могли бы быть выразителями не только своих интересов, но и тех, кто не слишком образован в айти.
(""Начать, безусловно, следует с увольнения всех IT-шников"")
Для начала с переобучения и сдачи экзаменов.
----------------------------------------------------------------
2025-05-05 18:05:42 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Бурановский дедушка**)
(""Есть хорошая статья, как надо писать ПО: "Они пишут правильную вещь""")
К сожалению это полная фигня. По отрывочным данным, приведенным в статье, можно понять, что защищена от ошибок эта программа, как "бронирован" катер на воздушной подушке - имея большие объемы отсеков, повреждение которых никак не сказывается на живучести. Не работает подход "просто взять и найти все ошибки". Как никому не нужна программа запуска "Шаттла" на 420000 строк, обслуживающая "тысячи датчиков" (По 100 строк на датчик? Да сейчас только заголовочный файл "на датчик" 100 строк весит).
----------------------------------------------------------------
2025-05-05 22:40:17 | o-prevraschenii-kibernetiki-v-shmanstnvo | Автор сайта

По данным ИСП РАН у NASA <a href="http://localhost/compiler/otsenka-nadyozhnosti-funktsii-s-neskolkimi-realizatsiyami.php#oshibki">наилучшее качество ПО</a>.

Что касается статьи (,,Они пишут правильную вещь,,): если пропустить мимо ушей журналистские уловки по повышению внимания к материалу, то можно найти практики, которых нет в ведущих отечественных компаниях. Например, в VK.

(""1. Продукт хорош настолько, насколько хорош план для него.

В бортовой группе шаттла, около трети процесса по написанию ПО происходит до того, как кто-либо напишет хоть одну строку кода. НАСА и группа из Локхид Мартин достигают соглашения в самых подробных описаниях, касательно всего, что новый код должен будет делать — и затем они фиксируют достигнутые договоренности на бумаге с такой скрупулезностью и точностью, которую обычно можно наблюдать при ксерокопировании. Ничто в спецификациях не может быть изменено без согласия и полного понимания с обеих сторон. И никто не изменит ни одной сроки кода без спецификации, подробно описывающей это изменение. Возьмем, к примеру, обновление ПО, позволяющее управлять шаттлом при помощи спутников Системы Глобального Позиционирования (GPS). Это изменение затрагивало всего 1.5 процента от всей программы или 6.366 строк кода. Спецификации для него занимали 2.500 страниц, том, толще, чем телефонный справочник. Спецификации для всего программного обеспечения в его текущем состоянии занимают 30 томов или около 40.000 страниц.

«Наши требования — это практически псевдокод», — говорит Уильям Претт, который руководит этим проектом в НАСА. «Они говорят – вы должны делать именно это, именно таким образом, в данных условиях и при данных обстоятельствах».

2. Лучшая работа в команде – это здоровая конкуренция.

Центральная группа разделяется на две ключевые команды: разработчики – люди, которые сидят и пишут код, и проверяющие – люди, которые пытаются найти дефекты в коде. Обе команды отчитываются разным начальникам и имеют прямо противоположные задачи. Группа разработки обязана выпустить абсолютно безошибочный код, настолько безупречный, чтобы тестеры не нашли дефектов вовсе. Группа тестирования обязана истязать этот код при помощи сценариев полета и симуляций, чтобы обнаружить как можно больше дефектов. Результатом является то, что Том Петерсон называет «отношениями дружеского соперничества».

«Они конкурируют между собой на предмет того, кто обнаружит ошибки», говорит Келлер. «Иногда они грызутся, как кошки с собаками. Разработчики хотят отловить все свои ошибки. Тестеры выходят из себя: «Эй, забейте! Вы отнимаете наше время для тестирования программы.»

Разработчики даже начали проводить свои собственные ревизии кода на заседаниях, скрупулезный анализ, который, как они надеются, расстроит тестеров. Проверяющие, в свою очередь, утверждают, что они заслужили такой авторитет, что некоторые ошибки обнаруживаются еще до того, как они начинают тестирование. «С точки зрения группы тестирования», — говорит Пэт Маклилллан, старший менеджер, — «мы осознаем, что если бы не было независимой группы тестирования, разработчики были бы более расслабленными. Одно только существование нашей группы заставляет их быть более внимательными.»

В результате такой дружеской конкуренции группа шаттла сейчас обнаруживает 85% ошибок до начала формального тестирования, и 99.9% до того, как программа отправляется в НАСА.

...в пересчете на количество строк кода это делает группу [разработки ПО НАСА] одной из наиболее дорогостоящих организаций по разработке ПО в США."")

Как-то задал вопрос Лидии Васильевне Городней, почему никто не верифицирует программы. Ведь столько диссертаций на эту тему написано -- но для кого? Ни в одной вакансии нет такого требуемого навыка: "верификация программ" или "доказательство правильности программ". Был такой ответ, что верификация требует высокой квалификации, таких людей очень мало. Поэтому методы разработки такие, чтобы с ними справились те, кто есть в наличии.
----------------------------------------------------------------
2025-05-06 01:48:22 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Автор сайта

Фирма 1С выпустила <a href="element">среду разработки и язык программирования Элемент</a>. За основу взят синтаксис Питона, вот только закрываются блоки кода точкой с запятой:
(==метод РаботаСМассивом()
   пер числа: Массив<Число> = [1, 2, 3, 4, 5]
   для кажд число из числа
      Сообщить("Число: " + число)
   ;
;==)
Родительство 1С какое-то будущее языку гарантирует.
----------------------------------------------------------------
2025-05-06 02:04:59 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]То есть встать на позицию бракоделов? Я их понимаю, работать хочется меньше, а денег больше. Но это же ущербно просто с точки зрения морали.[/q] Встать на позицию индустрии которая является двигателем 4 промышленной революции.

[q]Есть хорошая статья, как надо писать ПО: «Они пишут правильную вещь» (можно нагуглить). То есть технология отработана, но её не придерживаются.[/q]
Ну и какая там лицензия?

[q]Будь я законодателем, я бы предложил резать кошке хвост по частям. Сперва ответственность в 25% от суммы покупки ПО при условии быстрого устранения ошибки (при возрастании сроков сумма увеличивается). Потом 50, потом 100, потом 200. Просто надо дать время на перестройку процессов. [/q] 
Не приведет ли это к тому что развитие прекратится, и ПО будет развиваться медленне и все будут устранять баги?
Не приведет ли это к удорожанию ПО?
Не приведет ли это снижению конкуренции страны в которой вводятся такие правила?
----------------------------------------------------------------
2025-05-06 09:56:14 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Внучок**)
(""Встать на позицию индустрии которая является двигателем 4 промышленной революции"")
Вы хотели сказать "тормозом". ПО явно отстает от железа.
(""Не приведет ли это к тому что развитие прекратится"")
Оно давно прекратилось и катится назад. Современное развитие ПО - просто расширение подмены реальных фабрикатов и средств виртуально-фейковыми.
----------------------------------------------------------------
2025-05-06 10:49:44 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]Вы хотели сказать "тормозом". ПО явно отстает от железа.[/q]
Вы хотели сказать развитие железа зависит от ПО.

[q]Оно давно прекратилось и катится назад. Современное развитие ПО — просто расширение подмены реальных фабрикатов и средств виртуально-фейковыми.[/q]
Если бы оно катилось назад, вы бы сейчас на лошадках скакали, прям как в детстве.
----------------------------------------------------------------
2025-05-06 10:53:19 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Внучок**)
(""Вы хотели сказать развитие железа зависит от ПО"")
Нет.
(""Если бы оно катилось назад, вы бы сейчас на лошадках скакали, прям как в детстве"")
Вы думаете, что между обычными и инфоцыганами ничего не было?
----------------------------------------------------------------
2025-05-06 11:28:02 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Вежливый Лис

[q]Элемент это не язык программирования, а среда для разработки внутри которой лежит язык программирования [b]Исполнитель[/b][/q] - (ц) https://habr.com/ru/articles/906942/
----------------------------------------------------------------
2025-05-06 11:56:29 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

P.S. Можно заметить, что приведенный "способ программирования без ошибок" - это просто вариант возвращения к методам старой доброй бухгалтерии.
Подробнее о "способах" - https://www.compiler.su/pochemu-obrechyon-yazyk-fort.php#169
----------------------------------------------------------------
2025-05-06 12:28:19 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

Программирование без ошибок
https://www.itweek.ru/themes/detail.php?ID=38790
----------------------------------------------------------------
2025-05-06 17:25:31 | o-prevraschenii-kibernetiki-v-shmanstnvo | Сисадмин со стажем

(**Бурановский дедушка **)
(""Те айтишники, которые покупают ПО, внедряют и эксплуатируют (сисадмины от мала до велика), могли бы быть выразителями не только своих интересов, но и тех, кто не слишком образован в айти."")
+100500
----------------------------------------------------------------
2025-05-06 18:41:23 | arifmetika-sintaksisa-3 | Деньги на WWWетер

Я спросил у (--ясеня--) у Дипсика описание грамматики Лиспа.

1. Программа
(==
<program> ::= <form>*
<form>    ::= <atom> | <list> | <special-form>
==)
2. Атомы (Atoms)
(==
<atom> ::= <number> | <string> | <symbol> | <boolean> | <character> | <nil>
<number> ::= <integer> | <float> | <rational> | <complex>
<integer> ::= [+-]?[0-9]+
<float>   ::= [+-]?[0-9]+(\.[0-9]*)?([eE][+-]?[0-9]+)?
<string>  ::= "([^"\]|\.)*"
<symbol>  ::= [^()\s'`,;"][^()\s'`,;]*
<boolean> ::= #t | #f | true | false
<character> ::= #\<any-char> | #\space | #\newline
<nil>     ::= '() | nil
==)
3. Списки и S-выражения
(==
<list>       ::= "(" <form>* ")"
<special-form> ::= "(" <keyword> <form>* ")"  ; if, lambda, define, etc.
<quoted>     ::= "'" <form>
<quasiquoted> ::= "`" <form>
<unquote>    ::= "," <form>
<splice>     ::= ",@" <form>
==)
4. Определения функций и переменных
(==
<definition> ::= "(define " <symbol> <form> ")"  
               | "(define (" <symbol> <symbol>* ")" <form>* ")"  
<lambda>     ::= "(lambda (" <symbol>* ")" <form>* ")"
==)
5. Условные выражения
(==
<conditional> ::= "(if " <form> <form> <form>? ")"
               |  "(cond " (<form> <form>+)* ")"
==)
Здесь 20 правил. Тоже сильно меньше, чем у Оберона. У Оберона в графиках Сверлова рекорд по лаконичности, но это связано с тем, что Форт и Лисп не учитывались.
----------------------------------------------------------------
2025-05-06 22:32:48 | arifmetika-sintaksisa-3 | Борис К.

Чем короче грамматика, тем жирней и паскудней стандартная библиотека.
Можно сравнить работу с кучей через new/delete и через malloc/free.

Брэйнфак уже вспоминали?
----------------------------------------------------------------
2025-05-07 00:03:44 | arifmetika-sintaksisa-3 | Автор сайта

Нет, не вспоминали. Но его пример и примеры Форта и Лиспа подтверждают тезис, изложенный выше, что простота для человека и простота для компилятора -- это две разные простоты.
----------------------------------------------------------------
2025-05-07 11:28:24 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Иван

Языки программирования на русском - зло, как мне кажется. Тк они привязывают программиста к внутреннему рынку РФ. А в том и преимущества профессии программиста - что программист востребован везде, во всём мире, есть удалёнка. Поэтому надо не лениться, учить английский.
----------------------------------------------------------------
2025-05-07 11:32:57 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Gudleifr

(**Иван**)
(""профессии программиста"")
Нет такой профессии.
----------------------------------------------------------------
2025-05-07 14:24:04 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Невежливый лось

[q]они привязывают программиста к внутреннему рынку РФ.[/q]
Враньё. Маркетинг и продажи никак не связаны с языком, а зависят от политики. Ничто не мешает продавать программы, написанные на любом языке зарубеж. Пример - китайские компьютеры с иероглифами, продаваемые в России (у меня есть такой). Если вы лично не способны продать программу на русском языке во Вьетнам или КНДР, это ваши проблемы как маркетолога, а не проблемы языка отцов.
----------------------------------------------------------------
2025-05-07 14:35:48 | arifmetika-sintaksisa-3 | Gudleifr

(**Автор сайта**)
(""простота для компилятора — это две разные простоты"")
Это в вакууме. В реальности разграничить человека и компилятор сложнее. Цикл применения программирования охватывает более широкую область, чем однократное взаимодействие кодера и компилятора.
----------------------------------------------------------------
2025-05-07 14:39:20 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Gudleifr

(**Невежливый лось**)
(""Если вы лично не способны продать программу на русском языке во Вьетнам"")
А зачем писать такие программы, которые, единственно, что продать подальше хочется?
----------------------------------------------------------------
2025-05-07 15:22:52 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Неслучайный читатель

Русский язык в программировании -- дежурная тема для споров. Не нравится -- пройдите мимо. Сотни тысяч российских программистов не собираются уезжать, для них русский язык не зло, а ценность. К тому же английский всё менее важен, потому что компьютерный перевод с каждым днём всё лучше.
----------------------------------------------------------------
2025-05-07 15:54:37 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Клихальт

[b]Иван[/b],[q]преимущества профессии программиста — что программист востребован везде[/q]
Как пелось в свой время в песне группы "Воскресенье": "То ли птицы летят перелетные, то ли крысы бегут с корабля...". Иван, вы точно ничего не путаете и действительно думаете, что все кодеры такого же серого цвета, как и вы? ;)
----------------------------------------------------------------
2025-05-07 16:08:36 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Невежливый лось

[q]такого же серого цвета, как и вы[/q]
Намёк на то, что Иван - крыса, был настоящим зверством. Одобряю.
----------------------------------------------------------------
2025-05-07 21:59:08 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Автор сайта

(**Клихальт**) и (**Невежливый лось**), давайте без переходов на личности.

Почему зарубежные продажи могут зависеть от языка, на котором написано ПО? Большинство покупателей не интересуется этим. После компиляции моих программ я не вижу, в чём бы отличались два варианта исполняемых файлов: первый вариант с английскими идентификаторами, а другой -- с русскими. Файлы одинаковы. При условии, что текстовые литералы для взаимодействия с человеком вынесены отдельно.
----------------------------------------------------------------
2025-05-07 22:03:46 | arifmetika-sintaksisa-3 | Автор сайта

(""простота для человека и простота для компилятора — это две разные простоты"")
И где тут утверждается, что взаимодействие однократное?
----------------------------------------------------------------
2025-05-07 23:29:40 | arifmetika-sintaksisa-3 | Gudleifr

(**Автор сайта**)
(""где тут утверждается, что взаимодействие однократное?"")
А иначе Ваш тезис неверен.
----------------------------------------------------------------
2025-05-07 23:37:44 | arifmetika-sintaksisa-3 | Невежливый лось

Автор сайта, забаньте уже этого выёживающегося и займитесь делом, или хотя бы перебюджетируйте уделяйте внимание полезным посетителям.
----------------------------------------------------------------
2025-05-08 10:51:19 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Клихальт

[b]Автор сайта[/b],[q]Почему зарубежные продажи могут зависеть от языка, на котором написано ПО? Большинство покупателей не интересуется этим.[/q]
Если вы продаёте свой собственный готовый продукт конечному потребителю, то всё так, но речь то шла совсем о другом -- о продаже себя, как продукта зарубежному посреднику, а тут ситуация в корне иная.
----------------------------------------------------------------
2025-05-08 12:19:10 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Внучок

[q]Если вы продаёте свой собственный готовый продукт конечному потребителю, то всё так, но речь то шла совсем о другом — о продаже себя, как продукта зарубежному посреднику, а тут ситуация в корне иная.[/q]
По вашему мнению любой наемный работник продается как продукт?
----------------------------------------------------------------
2025-05-08 13:37:52 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Клихальт

[b]Внучок[/b], [q]По вашему мнению любой наемный работник продается как продукт?[/q]
Наёмный работник в рамках самообмана и для самооправдания может выдумывать себе что угодно, но по сути своей это так и есть. Можете поинтересоваться кому принадлежат все продукты труда наёмного работника, произведённые им в рамках служебных обязанностей и кого это характеризовало в прошлом, надеюсь на уроках истории вы хоть иногда слушали учителя, да и характеризует поныне.
----------------------------------------------------------------
2025-05-08 14:38:03 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Внучок

[q]Наёмный работник в рамках самообмана и для самооправдания может выдумывать себе что угодно, но по сути своей это так и есть. Можете поинтересоваться кому принадлежат все продукты труда наёмного работника, произведённые им в рамках служебных обязанностей и кого это характеризовало в прошлом, надеюсь на уроках истории вы хоть иногда слушали учителя, да и характеризует поныне.[/q] 
Если это так, то почему вы осуждаете другого человека за его продажу зарубеж, а не за продажу в стране, если и то и другое продажа?
Человек - не тумбочка, в нем заложены функции не заданные в рамках служебных обязанностей. Вы наемный работник?
Если вы думаете, что наемный работник товар, значит вы уже давно сами продались, вне зависимости от того зарубежом или в стране. И кому-то выгодно чтобы вы так думали.
----------------------------------------------------------------
2025-05-08 14:58:19 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Gudleifr

(**Клихальт**)
(**Внучок**)
Проблема не в продажности отечественных (--инфоцыган--) IT-шников, а в целях западного рынка ПО. Он ориентирован не удовлетворение потребности людей в программных продуктах, а в ограничение этой потребности небольшим количеством фирменных продуктов. Например, достаточно легко написать самодельную эл.таблицу, под конкретную задачу. Но зачем ее писать, если есть MS Excel? Его долго изучать и он плохо умеет решать конкретную задачу? Ничего, ужметесь! Глядишь, потом еще методичку во славу Excel выпустите.
И это ощущение второсортности колониального программирования почти так же давит на юных (--власовцев--) космополитов, как и ощущение второсортности колониальной жизни вообще.
----------------------------------------------------------------
2025-05-08 15:52:25 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Внучок

[q]Проблема не в продажности отечественных инфоцыган IT-шников, а в целях западного рынка ПО. Он ориентирован не удовлетворение потребности людей в программных продуктах, а в ограничение этой потребности небольшим количеством фирменных продуктов. Например, достаточно легко написать самодельную эл.таблицу, под конкретную задачу. Но зачем её писать, если есть MS Excel? Его долго изучать и он плохо умеет решать конкретную задачу? Ничего, ужметесь! Глядишь, потом ещё методичку во славу Excel выпустите.[/q]
Проблемы нет, рынок ПО ориентирован на удовлетворение потребности в ПО. Ограничений нет.
https://ru.wikipedia.org/wiki/%D0%AD%D0%BB%D0%B5%D0%BA%D1%82%D1%80%D0%BE%D0%BD%D0%BD%D0%B0%D1%8F_%D1%82%D0%B0%D0%B1%D0%BB%D0%B8%D1%86%D0%B0?#%D0%9F%D0%B5%D1%80%D0%B5%D1%87%D0%B5%D0%BD%D1%8C_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BD%D1%8B%D1%85_%D0%BF%D1%80%D0%BE%D0%B4%D1%83%D0%BA%D1%82%D0%BE%D0%B2

Есть проблема отбить рынок не за счет качества продукта, а за счет принадлежности к какой-то группе.
----------------------------------------------------------------
2025-05-08 15:54:12 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Клихальт

[b]Gudleifr[/b], [q]Проблема не в продажности отечественных [s]инфоцыган[/s] IT-шников,[/q]
...
[q]И это ощущение второсортности колониального программирования почти так же давит на юных [s]власовцев[/s] космополитов, как и ощущение второсортности колониальной жизни вообще.[/q]
Одно другое не отрицает, а поддерживает и дополняет, кстати, использование чужого и чуждого языка в качестве рабочего этому весьма способствует.
----------------------------------------------------------------
2025-05-08 16:06:23 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Gudleifr

(**Внучок**)
(""Ограничений нет"")
Спасибо за пруф. Все приведенные эл.таблицы - нищебродкие копии MS Excel.
----------------------------------------------------------------
2025-05-08 16:14:51 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Внучок

[q]Спасибо за пруф. Все приведенные эл.таблицы — нищебродкие копии MS Excel.[/q]
Вы уже поддержали рублем российский Офис?
https://ru.wikipedia.org/wiki/%D0%9C%D0%BE%D0%B9%D0%9E%D1%84%D0%B8%D1%81
----------------------------------------------------------------
2025-05-08 16:20:21 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Gudleifr

(**Внучок**)
(""Вы уже поддержали рублем российский Офис?"")
Тут надобно не поддержать, а пристрелить из жалости. То, о чем я писал. Вместо решения нужных задач, стремятся угнаться за "козлом-провокатором".
----------------------------------------------------------------
2025-05-08 16:34:58 | o-prevraschenii-kibernetiki-v-shmanstnvo | Бурановский дедушка

(**Внучок  **)(""Встать на позицию индустрии которая является двигателем 4 промышленной революции."")
Я предлагаю снизить человеческие издержки этой революции. Одна из предыдущих революций вызвала значительное увеличение добычи и сжигания угля. Это привело к росту онкологии, потому что о защитных мерах не думали.
(""Не приведет ли это к тому что развитие прекратится, и ПО будет развиваться медленнее и все будут устранять баги?"")Развитие прекратиться не может, может замедлиться. Но что в этом плохого? Ведь для устранения багов потребуются трудозатраты. А значит дополнительные люди и дополнительные рабочие места. Что неплохо для падающего рынка, когда число вакансий сокращается, а безработных программистов всё больше.

Что плохого в устранении багов? Вы являетесь их защитником? (,,Баги -- вариант нормы! Нет дискриминации и нетерпимости по признаку глючности! Жизнь багов тоже важна! Обеспечим инклюзивность и толерантность!,,)
(""Не приведет ли это к удорожанию ПО?"")
Просто ПО расслоится по признаку качества. Появятся люксовые бренды наряду с эконом-классом. Это не забота программистов, это проблема маркетологов и отделов продаж.
(""Не приведет ли это снижению конкуренции страны в которой вводятся такие правила?"")
Страна, в которой будут повышенные требования к ПО, будет позиционировать себя как производитель премиального ПО. Это как для нас немецкие автомобили. Или японская электроника. Или как для Китая русское мороженое.

До недавнего времени на отечественном рынке ПО SAP R/3 котировалась как ого-го какая штука, не то что 1С. И заплаты были соответствующие. СУБД Oracle котируется выше, чем MS SQL, и цены на Oracle выше. Примеры расслоения ПО по качеству есть и их немало.
----------------------------------------------------------------
2025-05-08 16:51:51 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Внучок

[q]Тут надобно не поддержать, а пристрелить из жалости. То, о чем я писал. Вместо решения нужных задач, стремятся угнаться за "козлом-провокатором".[/q]
Нищеброд, да еще провокатор. Не поддерживает российское ПО.
----------------------------------------------------------------
2025-05-08 16:54:06 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Gudleifr

(**Внучок**)
(""российское ПО"")
За что любить подделки?
----------------------------------------------------------------
2025-05-08 18:58:25 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Бурановский дедушка**)
(""Что плохого в устранении багов?"")
То, что начиная с превышением некоторого предела эта борьба приводит лишь к увеличению количества багов.
(""Страна, в которой будут повышенные требования к ПО, будет позиционировать себя как производителя премиального ПО."")
Это может себе позволить только страна, за которую работают колонии. Единственная цель "премиального ПО" - выжить с рынка чужих программистов, реальный функционал такого ПО никого не интересует.
----------------------------------------------------------------
2025-05-08 21:53:16 | o-prevraschenii-kibernetiki-v-shmanstnvo | Автор сайта

(""начиная с превышением некоторого предела эта борьба приводит лишь к увеличению количества багов"")
Почему в случае с НАСА этого не происходит? Смотри выше: <a href="#62">По данным ИСП РАН у NASA наилучшее качество ПО</a>.
(""Это может себе позволить только страна, за которую работают колонии"")
Какие колонии у Германии и Японии?
(""Единственная цель "премиального ПО" — выжить с рынка чужих программистов"")
У всех такая цель.
(""реальный функционал такого ПО никого не интересует"")
Доказательства?
----------------------------------------------------------------
2025-05-08 22:02:56 | arifmetika-sintaksisa-3 | Автор сайта

(**Невежливый лось **)
(""забаньте уже этого выёживающегося"")
О том, что (,,баба Яга против,,), мне дают забыть с <a href="pochemu-obrechyon-yazyk-fort.php#14">c 2014 года</a>. Она всегда против! Как-то <a href="filosofiya-yazyka.php#104">написал ему</a>:
(""Этот сайт предлагает развитие программирования через развитие языков. Вы же это не приемлете. Так зачем об этом так навязчиво напоминать? Занялись бы конструктивными вещами, разработкой какого-то ПО, наконец. Вы же бездарно теряете время, постоянно напоминая, что тут всё неправильно."")
Ещё из удалённого собственного комментария от 2023/02/06 18:41:
(""идите в собственную светлую вселенную, отстраивайте её по своему вкусу. Но не трогайте чужие вкусы, не вторгайтесь в чужую вселенную. Вы же однажды собирались уйти. Куда подевалась Ваша решимость?"")
После этого было затишье, 16 месяцев отдыхал от него. Но потом состояние у человека опять обострилось. А ведь столько времени уходит впустую. Это, по-видимому, и является его целью: бессмысленно потратить не только собственную жизнь, но и чужую.
----------------------------------------------------------------
2025-05-08 22:06:41 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Автор сайта**)
(""Почему в случае с НАСА этого не происходит?"")
Происходит. Приведенная цитата об этом и свидетельствует.
----------------------------------------------------------------
2025-05-08 22:07:49 | arifmetika-sintaksisa-3 | Gudleifr

(**Автор сайта**)
(""Вы же это не приемлете"")
Домыслы.
----------------------------------------------------------------
2025-05-09 00:18:42 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

C Днем Победы!
----------------------------------------------------------------
2025-05-09 03:41:03 | o-prevraschenii-kibernetiki-v-shmanstnvo | Невежливый лось

[q]1948, Лебедев С. А., Малая электронная счётная машина (МЭСМ) — одна из первых в СССР и континентальной Европе электронно-вычислительных машин. Разрабатывалась лабораторией на базе киевского Института электротехники АН УССР[укр.], позднее — Института электродинамики АН УССР[/q]
https://ru.wikipedia.org/wiki/МЭСМ 

[q]37-мм автоматическая зенитная пушка образца 1939 года представляет собою одноствольное малокалиберное автоматическое зенитное орудие на четырёхстанинном лафете с неотделяемым четырёхколёсным ходом. Автоматика пушки основана на использовании силы отдачи по схеме с коротким откатом ствола с затвором, имеющим перемещение, не совпадающее с направлением движения ствола. Открывание и отпирание затвора происходит во время отката ствола, а закрывание и запирание — после наката ствола и досылки очередного патрона. Все действия, необходимые для производства выстрела (открывание затвора после выстрела с экстрагированием гильзы, взведение ударника, подача патронов в патронник, закрывание затвора и спуск ударника) производятся [b]автоматически[/b]. Вручную осуществляется прицеливание, наведение орудия и подача обойм с патронами в магазин.[/q]
----------------------------------------------------------------
2025-05-09 03:44:38 | o-prevraschenii-kibernetiki-v-shmanstnvo | Невежливый лось

[q]61-К в течение Великой Отечественной войны являлись основным средством противовоздушной обороны советских войск, находившихся на линии фронта.[/q]
https://ru.wikipedia.org/wiki/37-мм_автоматическая_зенитная_пушка_образца_1939_года_(61-К)
----------------------------------------------------------------
2025-05-09 03:49:04 | o-prevraschenii-kibernetiki-v-shmanstnvo | Невежливый лось

Хотел найти про применения аналоговых баллистических вычислителей или систем прицеливания, но не нашел.
----------------------------------------------------------------
2025-05-09 04:41:55 | o-prevraschenii-kibernetiki-v-shmanstnvo | Невежливый лось

1948, Винер Н., Cybernetics: Or Control and Communication in the Animal and the Machine
https://ru.wikipedia.org/wiki/Кибернетика,_или_управление_и_связь_в_животном_и_машине 
первая книга по кибернетике (впервые публично употребляется термин «кибернетика»)

1945, Electronic Numerical Integrator and Computer (ENIAC)

[q]В военной сфере использовались аналоговые системы для управления артиллерийскими орудиями и зенитными установками. Эти системы могли автоматически рассчитывать траектории снарядов и управлять огнем.[/q]
Вот я никак конкретику не могу найти.

https://ru.wikipedia.org/wiki/Вычислительная_машина 

https://ru.wikipedia.org/wiki/Прибор_управления_зенитным_огнём 
https://ru.wikipedia.org/wiki/Прибор_управления_артиллерийским_огнём 

В СССР работы по созданию прибора управления зенитным огнём для сухопутной ПВО начались в 1930 году в Артиллерийской академии РККА. Группа под руководством инженера К. В. Крузе (р. 1895) к 1932 году создало механический прибор — ПУАЗО-1.

В 1934 году модернизированный прибор ПУАЗО-2 был принят на вооружение РККА.

[q]85-мм зенитная пушка обр. 1939 г. назначается для борьбы с авиацией противника, но также в ней была заложена возможность бороться с бронетехникой врага.[/q]
https://ru.wikipedia.org/wiki/85-мм_зенитная_пушка_образца_1939_года_(52-К)#Элементы_синхронной_передачи_ПУАЗО-3 

ПУАЗО-4: Эта система была разработана в начале 1940-х годов и начала поступать на вооружение в 1943 году. Она использовалась для управления огнем зенитных орудий и обеспечивала автоматизацию процесса наведения на воздушные цели.
персональная ответственность за руководство разработкой и производством приказом Наркома судостроительной промышленности была возложена на А.И. Шокина

ПУАЗО-5: Эта система была разработана позже, в 1944 году, и начала поступать на вооружение в 1945 году. ПУАЗО-5 имела улучшенные характеристики по сравнению с ПУАЗО-4 и обеспечивала более высокую точность и эффективность управления огнем.

Научно-исследовательский институт № 20

Леонид Николаевич Преснухин занимался разработкой спецвычислителей военного назначения — приборов управления артиллерийско-зенитным огнём (ПУАЗО).
Выпускник МВТУ им. Н. Э. Баумана 1942 года, тема дипломного проекта «Приборы управления стрельбой артиллерии». 
https://ru.wikipedia.org/wiki/Преснухин,_Леонид_Николаевич 

Самыми сложными комплексами были МПУАЗО (М-морские), которые должны были обеспечивать стрельбу по самолетам с движущегося и качающегося корабля. В декабре 1937 года был образован самостоятельный наркомат Военно-Морского Флота. Вопросы разработок и поставок современных ПУС и МПУАЗО были среди важнейших.
https://www.computer-museum.ru/books/ministr-neveroyatnoy-promyshlennosti_s.pdf
----------------------------------------------------------------
2025-05-09 04:53:01 | o-prevraschenii-kibernetiki-v-shmanstnvo | Невежливый лось

Итак, празднуя подвиг [b]коммунистических[/b] предков, какие мы должны сделать выводы и принять решения при капиталистическом правительстве, учитывая развитие вычислительных технологий, их переход на цифровую основу, и увеличение доступности для населения? Как минимум надо написать бота для Телеграм. Он будет проводить агитацию и раздавать листовки.
----------------------------------------------------------------
2025-05-09 05:02:28 | o-prevraschenii-kibernetiki-v-shmanstnvo | Невежливый лось

Только нужна ещё какая-то децентрализованная система обмена сообщениями, вместо Телеграма. Retroshare вроде годится (поверх I2P).
----------------------------------------------------------------
2025-05-09 10:19:33 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Невежливый лось**)
(""Вот я никак конкретику не могу найти"")
Гуглить Википедия Давыдов Алексей Павлович
https://i.servimg.com/u/f90/19/65/89/34/187010.jpg
(""Как минимум надо написать бота для Телеграм. Он будет проводить агитацию и раздавать листовки"")
Примерно так.
----------------------------------------------------------------
2025-05-09 13:15:05 | o-prevraschenii-kibernetiki-v-shmanstnvo | Автор сайта

Перенёс оставленные здесь сегодня сообщения в специально заведённый раздел (,,<a href="soobschenija-ne-po-teme.php">Сообщения не по теме</a>,,). В какое другое место их пристроить -- непонятно.
----------------------------------------------------------------
2025-05-09 15:45:04 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

(**Бурановский дедушка**)
[q]Я предлагаю снизить человеческие издержки этой революции. Одна из предыдущих революций вызвала значительное увеличение добычи и сжигания угля. Это привело к росту онкологии, потому что о защитных мерах не думали.[/q]
Любые нововведения несут риски. Вы хотите провести "юридическую" революцию в области ПО. Это тоже может привести к "метостазам".

[q]Развитие прекратиться не может, может замедлиться. Но что в этом плохого? Ведь для устранения багов потребуются трудозатраты. А значит дополнительные люди и дополнительные рабочие места. Что неплохо для падающего рынка, когда число вакансий сокращается, а безработных программистов всё больше.[/q]
Замедлиться - это как раз потерять конкурентноспособность. Большими трудозатратами получить почти тоже самое и при это покормить страховщиков.

[q]Что плохого в устранении багов? Вы являетесь их защитником? «Баги — вариант нормы! Нет дискриминации и нетерпимости по признаку глючности! Жизнь багов тоже важна! Обеспечим инклюзивность и толерантность!»[/q]
Насчет безошибочности ПО задумывались давно, я статью приводил 1996 года. С тех пор прошло много, но за эту идею не зацепились и не выделились с фирмы с безбажным ПО.  Ведь согласитесь, за эту идейку зацепились бы те фирмы, которые производят ПО высочайшего класса чтобы отвадить конкурентов от рынка, но этого не произошло.

[q]Просто ПО расслоится по признаку качества. Появятся люксовые бренды наряду с эконом-классом. [/q] 
Рынок ПО и сейчас расслоен. Это и сейчас есть.

[q]Это не забота программистов, это проблема маркетологов и отделов продаж.[/q]
Это забота потребителей, цены на ПО.

[q]Страна, в которой будут повышенные требования к ПО, будет позиционировать себя как производителя премиального ПО. Это как для нас немецкие автомобили. Или японская электроника. Или как для Китая русское мороженое.[/q]
Конечно хорошо если к ПО повышенные требования, но вводить их нужно если есть достаточное количество игроков и продукт однотипен и не особо развивается. И еще учитывайте, что у платного ПО есть альтернатива - открытое ПО. Железо бесплатное не валяется, а с ПО такое возможно.

[q]До недавнего времени на отечественном рынке ПО SAP R/3 котировалась как ого-го какая штука, не то что 1С. И заплаты были соответствующие. СУБД Oracle котируется выше, чем MS SQL, и цены на Oracle выше. Примеры расслоения ПО по качеству есть и их немало.[/q]
Так это проблемы политики, не рынка. Потребителю лучше если на рынке будет представлено наибольшее количество игроков.
----------------------------------------------------------------
2025-05-09 17:46:06 | o-prevraschenii-kibernetiki-v-shmanstnvo | Бурановский дедушка

(""Вы хотите провести "юридическую" революцию в области ПО"")
Нет, контрреволюцию. Революция была, когда разрешили продавать ПО без гарантий, в отличие от остальных продуктов человеческого труда, которые продаются за деньги. То хочется вернуться к истокам: если я заплатил, то имею гарантии качества.
(""Это тоже может привести к "метастазам""")
Нет, к их устранению. Метастазы -- это то, что гуглится по фразе (,,самые известные катастрофы вызванные ошибками в ПО,,). А безошибочное ПО катастроф не вызывает, без метастаз обходится.
(""Насчет безошибочности ПО задумывались давно, я статью приводил 1996 года"")
Статья (,,Программирование без ошибок,,) сама себя обесценивает тем, что она сконцентрирована на пресловутом заказчике, который сам порою не знает, что ему надо. А значит это обрекает ПО на постоянную переделку с потерей качества.

(--Чушь--) Это сильное преувеличение. Большая часть программ распространяется как коробочный продукт. У коробочного ПО нет заказчика, у него есть покупатель. Разработчик такого ПО конечно прислушивается к потребителям, они собирают отзывы и проводят маркетинговые исследования. Но не бывает такого, что Microsoft добавляет в Excell функцию по просьбе General Motors. Microsoft не пытается плясать под дудку заказчика, она вертела этого заказчика, скажем так, на полуоси (OS/2). Кто, скажите, является заказчиком Windows?

Ставить на одну доску коробочные продукты и заказные совершенно нелогично. Одно дело пошить одежду в ателье на заказ, а другое дело купить на рынке шмотки из Азии. Широко тиражируемый продукт имеет возможность собирать гигантский массив диагностики. Выявить и устранить ошибки в тиражируемом ПО куда легче, чем в заказном. Вопрос: почему Windows до сих пор глючная?

В конце статьи пишут о верификации программ. Для заказных продуктов это недешёвое мероприятие удорожает разработку. Но для коробочных продуктов затраты можно размазать на миллионы покупателей.
(""Рынок ПО и сейчас расслоен. Это и сейчас есть."")
Хорошо бы его расслоить ещё больше.
(""(""Это не забота программистов, это проблема маркетологов и отделов продаж"")
Это забота потребителей, цены на ПО"")
Так ценообразование -- это динамический процесс, в котором участвуют две стороны. Точка пересечения интересов обязательно найдётся.
(""у платного ПО есть альтернатива — открытое ПО"")
К бесплатному ПО трудно предъявить претензии. Если разработчик не получал от тебя денег, то он тебе ничем не обязан. Претензия к тем, кто деньги берёт, а на качество забивает.
(""Потребителю лучше, если на рынке будет представлено наибольшее количество игроков"")
И хорошо бы, чтобы были всякие игроки: одни предлагают дешёвое ПО с невысоким возмещаемым ущербом в гарантийных случаях, а другие -- дорогое ПО с большой компенсацией.
----------------------------------------------------------------
2025-05-09 18:30:30 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Бурановский дедушка**)
(""Потребителю лучше, если на рынке будет представлено наибольшее количество игроков. И хорошо бы, чтобы были всякие игроки: одни предлагают дешёвое ПО с невысоким возмещаемым ущербом в гарантийных случаях, а другие — дорогое ПО с большой компенсацией"")
Ну, например, эта гостевуха. Кому надо заплатить, чтобы тут вернулись в реальность?
----------------------------------------------------------------
2025-05-09 18:39:16 | soobschenija-ne-po-teme | Невежливый лось

Тема должна называться "Праздники как повод для спецмероприятий"
----------------------------------------------------------------
2025-05-09 19:02:30 | soobschenija-ne-po-teme | Внучок

[q]спецмероприятий[/q]
Ваш лексикон вас выдает.
----------------------------------------------------------------
2025-05-09 21:35:20 | soobschenija-ne-po-teme | Невежливый лось

Вы использовали праздник как повод для самопиара, крайне безыдейного и бесцельного. Вы ни к чему не призвали, не продвинули какую-либо повестку. Теперь мы знаем, что лично вам есть куда развиваться как человеку, как пропагандисту, как организатору. А нам придётся определяться, что делать. То ли на добровольцами на СВО записываться во славу олигархов России. То ли начать заниматься организацией партийных ячеек (неясно какой партии, одно известно точно, где есть хотя бы два партийца, один из них информатор ФСБ). Что такого должно быть в компиляторе, чтобы он считался исконно российским? Наверное в нем должна быть какая-то модель. Но у нас ГОСТ по моделям (ГОСТ Р ИСО/МЭК 11179-1-2010) - переводной (калька), а не оригинальная разработка. А если бы основывались на работах советских философов (например Ильенкова), компилятор получился бы уникальный, на основе теории познания.
----------------------------------------------------------------
2025-05-09 23:43:47 | soobschenija-ne-po-teme | MihalNik

[q]Что такого должно быть в компиляторе, чтобы он считался исконно российским?[/q]
Научная база.
----------------------------------------------------------------
2025-05-09 23:54:01 | soobschenija-ne-po-teme | Gudleifr

(""Что такого должно быть в компиляторе, чтобы он считался исконно российским?"")
Он должен быть сермяжным, посконным, домотканым и кондовым.
----------------------------------------------------------------
2025-05-10 04:38:50 | soobschenija-ne-po-teme | Невежливый лось

Чем российская научная база отличается от всемирной? Какими работами каких российских учёных?
----------------------------------------------------------------
2025-05-10 10:02:52 | soobschenija-ne-po-teme | Gudleifr

(**Невежливый лось**)
(""Чем российская научная база отличается от всемирной?"")
Только обилием сайтов, подобных этому. Имени Васисуалия Лоханкина.
----------------------------------------------------------------
2025-05-10 10:25:08 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]И хорошо бы, чтобы были всякие игроки: одни предлагают дешёвое ПО с невысоким возмещаемым ущербом в гарантийных случаях, а другие — дорогое ПО с большой компенсацией.[/q]
Мечтать не вредно :)
----------------------------------------------------------------
2025-05-10 10:30:52 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Внучок**)
(""Мечтать не вредно"")
Это древняя советская байка. В любом программирующем коллективе (от учебного класса до самого "лучше всех спрятанного") приговаривали: мы, мол, конечно фигню на коленке лепим, но есть там наверху по-настоящему секретный "ящик", где программируют по-взрослому...
----------------------------------------------------------------
2025-05-10 11:34:52 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

(**Бурановский дедушка**)
Ну хорошо, вы придерживаетесь своей идеи. Сколько вы готовы заплатить за простой калькулятор с невысоким возмещаемым ущербом в первом варианте, и во втором случае с большой компенсацией. Опишите более подробно в цифрах, и условия при которых наступает выплата. Также опишите что считать багом, а не фичей.
----------------------------------------------------------------
2025-05-10 12:05:44 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Внучок**)
(""Сколько вы готовы заплатить за простой калькулятор с невысоким возмещаемым ущербом в первом варианте, и во втором случае с большой компенсацией"")
Вот Вы и подошли к сути. Деньгами этот вопрос не решается.
----------------------------------------------------------------
2025-05-10 12:22:22 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]Вот Вы и подошли к сути. Деньгами этот вопрос не решается.[/q]
Почему не решается? 
Допустим калькулятор с компенсацией стоит 100 млрд.руб, цена за баг - 10коп. Вполне возможно.
----------------------------------------------------------------
2025-05-10 13:10:49 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Внучок**)
(""Почему не решается?"")
Потому что Вы предлагаете обычную страховку. К искоренению ошибок она не относится. Что с того, что Колумбия или Луна-25 были застрахованы?
----------------------------------------------------------------
2025-05-10 13:31:54 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]Потому что Вы предлагаете обычную страховку. К искоренению ошибок она не относится. Что с того, что Колумбия или Луна-25 были застрахованы?[/q]
Все верно, я это понимаю. В данном случае мы пляшем от желаний клиента. Если он хочет такую услугу, почему бы ее не предоставить за его же счет?
----------------------------------------------------------------
2025-05-10 13:37:10 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Внучок**)
(""В данном случае мы пляшем от желаний клиента"")
Ну, наши-то клиенты, хотят "вообще без ошибок" и даже распускают слухи о безошибочной "стране Лимонии".
----------------------------------------------------------------
2025-05-10 13:41:21 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]Ну, наши-то клиенты, хотят "вообще без ошибок" и даже распускают слухи о безошибочной "стране Лимонии".[/q]
Наш клиент, в первую очередь, хочет получать компенсацию за баги(получить юридический инструмент для воздействия на производителя ПО), он думает что поменяв условия можно добиться других результатов - получить безбажное ПО.
----------------------------------------------------------------
2025-05-10 15:21:50 | o-prevraschenii-kibernetiki-v-shmanstnvo | Сисадмин со стажем

(""клиент, в первую очередь, хочет получать компенсацию за баги(получить юридический инструмент для воздействия на производителя ПО)"")
Хочется не столько компенсацию, сколько инструмент давления на разработчика. Есть такой отечественный программный продукт под названием R-Keeper, это ПО для ресторанного бизнеса. Баги в нём не исправляются годами, плевать они хотели на клиента с высокой башни. У них есть единственный конкурент -- Aiko, который был ещё хуже. В последнее время Aiko вроде бы стал немного получше, чем R-Keeper. Но кто ж даст деньги на переход на новое ПО, если стоит оно очень не кисло?

Разработчики R-Keeper иногда рассылают приглашения на семинары с издевательскими названиями типа: "Как правильно вести ресторанный бизнес". Как же мне хочется провести с ними занятия на тему "Каким должен быть правильный софт", "Как важно тестировать софт перед его внедрением", "Почему важно выбирать для своего софта надёжную СУБД, а не глючный MS SQL". Сами не научились работать по своей специализации, а пытаются кого-то учить тому, в чём они ни ухом, ни рылом.

В кассовой части R-Keeper бывает такой глюк: после проведения оплаты на кассе заказ на экране не исчезает, как положено. Он остаётся, и там написано, что сумма заказа, допустим, 678 рублей 00 копеек, оплачено 678 рублей 00 копеек, сумма к оплате -- 0 рублей 00 копеек. И программа встаёт в ступор и чтобы из него выйти, надо оплатить 0 рублей 00 копеек. Кассир пытается это сделать, но поскольку предыдущий платёж был, как правило, через банковский терминал, то и второй платёж тоже делается через банковский терминал. Но банк не принимает платёж в 0 копеек! Надо в программе выйти из платежей через терминал, перейти в платежи наличными и оплатить 0 рублей 00 копеек наличными. Вот тогда платёж завершается.

Эту ошибку разработчик не устраняет как минимум 7 лет! Из-за чего она? Из-за того, что совершена идеологическая ошибка, деньги хранятся в формате с плавающей точкой. От этого накапливаются ошибки округления, из-за которых возникает якобы "задолженность" в тысячные доли копеек, которые отображаются на экране как 0 рублей 00 копеек.

Это разработчик софта должен учить нас ресторанному бизнесу? Или нам надо учить его писать софт? Извините, наболело.
----------------------------------------------------------------
2025-05-10 15:27:30 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Сисадмин со стажем**)
(""Есть такой отечественный программный продукт под названием R-Keeper, это ПО для ресторанного бизнеса"")
Я думаю, что Вы их кормите не лучше, чем они Вам пишут. Что, нельзя было научить одного из официантов BASIC-у?
----------------------------------------------------------------
2025-05-10 18:11:25 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]Хочется не столько компенсацию, сколько инструмент давления на разработчика. [/q]
Ну какие еще вы хотите инструменты кроме имеющихся, уголовная ответственность для руководителей, ремнем по попе каждого разработчика? Все "наказания" для разработчиков будут сказываться на цене и все "наказания" будут к вам возвращаться, тем более если правила будут вводить одинаково для всех. 
У вас есть сейчас другой инструмент в рамках рынка - "ноги", воздействие на репутацию производителя.

[q]Есть такой отечественный программный продукт под названием R-Keeper, это ПО для ресторанного бизнеса. Баги в нём не исправляются годами, плевать они хотели на клиента с высокой башни. У них есть единственный конкурент — Aiko, который был ещё хуже. В последнее время Aiko вроде бы стал немного получше, чем R-Keeper. Но кто ж даст деньги на переход на новое ПО, если стоит оно очень не кисло?[/q]
Рассчитывайте переход на другое ПО. Пробуйте произвести перевод на малых объемах. Возможно у конкурирующей фирмы есть для вас  уникальное торговое предложение для перехода на их ПО.
Вот нашел ПО:
https://prowizard.store/company/articles/vybiraem_programmnoe_obespechenie_ucheta_dlya_obshchepita/
https://kassaofd.ru/blog/program-dlya-avtomatiz-obshhepita

Не подходит?

[q]В кассовой части R-Keeper бывает такой глюк[/q]
Если все так плохо в ПО для ресторанного бизнеса и там большая прибыль, то это сигнал для разработчиков ПО(конкурентов) делать свою разработку для этой области.
----------------------------------------------------------------
2025-05-10 18:30:30 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Внучок**)
(""Если все так плохо в ПО для ресторанного бизнеса"")
Проблема не в ПО, а в ресторанном бизнесе.
----------------------------------------------------------------
2025-05-10 18:30:30 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Внучок**)
(""Если все так плохо в ПО для ресторанного бизнеса"")
Проблема не в ПО, а в ресторанном бизнесе.
----------------------------------------------------------------
2025-05-13 10:32:59 | c-vs-haskell-sravnenie-skorosti-na-prostom-primere | Денис Будяк

В сухом остатке, спустя время: Юрий так и не разобрался в быстродействии Хаскеля, эту проблему на своей стороне не признал (т.е. признал, что не разобрался, но не считает это проблемой, раз на форумах и в книгах об этом не пишут, то и разбираться, видимо, не надо), некомпетентную статью с сайта не снял. Передо мной за обвинения не извинился, но это уж совсем мелочи. И так хорошо (кстати, сейчас опять полнолуние).
----------------------------------------------------------------
2025-05-13 10:34:08 | c-vs-haskell-sravnenie-skorosti-na-prostom-primere | Денис Будяк

Т.е. я вспомнил, там не обвинения, хотя обвинения были на грани оскорбления, а была фраза, что мы с Дипсиком оба ошиблись. Эта фраза так и не была взята назад. Мы не ошиблись, просто Юрий не осилил вопрос - вот как было на самом деле.
----------------------------------------------------------------
2025-05-13 10:50:35 | c-vs-haskell-sravnenie-skorosti-na-prostom-primere | Денис Будяк

В общем и целом статья теперь полностью выглядит как чёрный пиар. Ощущение, будто автору заказали утопить Хаскель и он это сделал, не особо стесняясь в инструментах и не отличая правду от лжи. Именно поэтому я и написал Юрию, что он заврался. Возможно, это и грубо, зато точно. В данном случае речь идёт о самообмане, потому что ведь Юрий прокладывает свой путь в мире дизайна языков программирования, вряд ли многие возьмут этот сайт за ориентир и будут следовать сделанным здесь выводам. И получается, что, прокладывая путь, Юрий использует неточный компас и неточные часы. Сам себе заказал утопить Хаскель, сам заказ выполнил, сам себя убедил, что написанное - правда. Конечно, неисповедимы пути Господни, но на первый взгляд выглядит так, что путь самообмана никуда не ведёт (хотя, конечно, в личной жизни люди этим занимаются массово и в итоге цель достигнута, т.е. человеческий род как-то продолжается).
----------------------------------------------------------------
2025-05-13 10:57:22 | c-vs-haskell-sravnenie-skorosti-na-prostom-primere | Gudleifr

(**Денис Будяк**)
(""Сам себе заказал утопить Хаскель, сам заказ выполнил"")
Это уже здесь проходили с Forth.
----------------------------------------------------------------
2025-05-14 16:01:48 | o-prevraschenii-kibernetiki-v-shmanstnvo | Бурановский дедушка

(**Внучок**)
(""Мечтать не вредно :) Ну хорошо, вы придерживаетесь своей идеи."")
Вот именно, что это мечты. Которые очень далеки от реалий. Но почему тех, кто знает, что его софт кривой и всё равно продаёт, не мучает совесть? Это как намеренно подсунуть покупателю товар с гнильцой. Но товар я могу вернуть, а софт -- нет. Могу заставить заменить гнилое на хорошее, но не могу заставить исправить софт. Разве это справедливо?
(**Сисадмин со стажем**)
(""Рассчитывайте переход на другое ПО"")
А самому что-то разработать взамен? У меня был такой опыт, когда я заменил чужую систему собственной разработкой. Чужая была большая, неудобная, с плохим интерфейсом пользователя, могла решать кучу ненужных нам задач, но не решала много нужных. И я сделал маленькую, компактную, удобную систему, заточенную именно на наши задачи. Мои коллеги просто тащились! Может, получится, чем чёрт не шутит?
----------------------------------------------------------------
2025-05-14 16:33:32 | otechestvennye-razrabotki | Бурановский дедушка

https://www.cnews.ru/news/top/2025-05-12_osnovatel_mtsst_i_vyhodets:

Борис Бабаян и его сын Евгений собираются создать «Эльбрус-Б», который, по их мнению, будет превосходить иностранные архитектуры «в 30-200 раз» при одинаковых технологических нормах. Для новой архитектуры разрабатывается язык программирования «Эль-22», включающего полный параллелизм вычислений. Евгений Бабаян ищет инвесторов, готовых вложить 30 млрд руб. в новый процессор. Проект предполагалось реализовать за три года. По словам Евгения, уже высказали письменную заинтересованность принять участие в проекте "Эльбрус-Б" ряд стран в том числе Индия, с которой уже подписано соглашений на 2 миллиарда долларов.

Отечественные эксперты скептически смотрят на этот проект. Сергей Шумилин, заместитель гендиректора по науке «ПКК Миландр»:
(""В рамках текущих массовых кремниевых процессов выжато максимум производительности, и каких-то прорывных архитектур уже не возможно создать (производительность х200). Они будут либо не технологичными, либо много потребляющими, либо очень узко направленными только на один класс задач, а значит не массовыми и экономически не выгодными.

Новый язык программирования «Эль-22» должен быть не просто удобным для разработчика, но и максимально точно отражать особенности микропроцессора, чтобы компилятор мог эффективно использовать все возможности параллелизма. Это сложнее, чем может показаться: большинство современных языков абстрагируются от деталей исполнения, а здесь требуется обратное — максимальное приближение к железу. Параллельные системы часто страдают от конфликтов доступа к памяти, задержек в коммуникации между ядрами и плохого баланса нагрузки"")
----------------------------------------------------------------
2025-05-14 16:43:01 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Бурановский дедушка**)
(""И я сделал маленькую, компактную, удобную систему, заточенную именно на наши задачи"")
Да, это единственное работающее решение.
----------------------------------------------------------------
2025-05-14 18:02:22 | otechestvennye-razrabotki | Вежливый Лис

Была уже такая новость несколько лет назад. Они же искали примерно такую же сумму.
----------------------------------------------------------------
2025-05-14 18:09:36 | otechestvennye-razrabotki | Вежливый Лис

2023-09-14, Коммерсантъ, узнал о плане по разработке в России процессора «Эльбрус-Б»
https://www.rbc.ru/business/14/09/2023/650271e89a7947635ef76753
----------------------------------------------------------------
2025-05-14 18:12:14 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]Вот именно, что это мечты. Которые очень далеки от реалий. Но почему тех, кто знает, что его софт кривой и всё равно продаёт, не мучает совесть? Это как намеренно подсунуть покупателю товар с гнильцой.[/q]
И с гнильцой обычный товар продают, цену снижают.
[q]Но товар я могу вернуть, а софт — нет.[/q]
Не любой товар можно вернуть.
[q]Могу заставить заменить гнилое на хорошее, но не могу заставить исправить софт.[/q]
В каком виде гнилое если это относится к ПО? Пахнет? Приведите пример.
ПО обновляют, с товаром из магазина делают такое? ПО можно легко скопировать, обычный товар не подвергается такой процедуре.
[q]Разве это справедливо?[/q]
Проверяйте товар перед покупкой.
----------------------------------------------------------------
2025-05-14 18:23:06 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Внучок**)
(""В каком виде гнилое если это относится к ПО? Пахнет?"")
Если нет хорошо документированных исходников и инструментальных средств.
----------------------------------------------------------------
2025-05-14 18:50:32 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]Если нет хорошо документированных исходников и инструментальных средств.[/q]
Выбросьте Windows и не пользуйтесь, там нет исходников.
Выбросьте MS Office.
----------------------------------------------------------------
2025-05-14 19:12:41 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Внучок**)
(""Выбросьте Windows и не пользуйтесь, там нет исходников"")
Вы будете его всерьез защищать?
----------------------------------------------------------------
2025-05-14 23:10:50 | otechestvennye-razrabotki | Клихальт

Ключ к заявленной «рекордной» производительности «в 30-200 раз» содержится в фразе «при одинаковых технологических нормах», а его расшифровка в статье двухлетней давности в «Коммерсантъ»: «для разработки и выпуска в России 60-нанометрового (60 нм) процессора «Эльбрус-Б»», т.е. они собираются превосходить самые ранние Core 2 Duo.
----------------------------------------------------------------
2025-05-14 23:21:11 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]Вы будете его всерьез защищать?[/q]
Зачем защищать? Это ПО с которым вы определились, что оно гнилое и им пользуетесь.
----------------------------------------------------------------
2025-05-14 23:41:02 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Внучок**)
(""Это ПО с которым вы определились, что оно гнилое и им пользуетесь"")
То, что мы им вынуждены пользоваться - не есть показатель его качества.
----------------------------------------------------------------
2025-05-15 00:17:01 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]То, что мы им вынуждены пользоваться — не есть показатель его качества.[/q]
Есть альтернативы, пользуйтесь открытым кодом.
Колхозьте свои "безбажные" и не гнилые программы.
----------------------------------------------------------------
2025-05-15 00:20:04 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Внучок**)
(""Есть альтернативы"")
Не для всего.
----------------------------------------------------------------
2025-05-15 00:27:56 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]Не для всего.[/q]
Вы еще не написали Excel на Forth?
Выкладывайте исходники.
----------------------------------------------------------------
2025-05-15 00:34:34 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Внучок**)
(""Вы ещё не написали Excel на Forth? Выкладывайте исходники"")
Примерно над этим сейчас работаю во втором томе заметок. Но какое это имеет отношение к гнилости Windows?
Кстати, задачка "про свой Excel" есть в книжке Лисков Б., Гатэг Дж. "Использование абстракций и спецификаций при разработке программ" 1989
----------------------------------------------------------------
2025-05-15 00:42:02 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]Примерно над этим сейчас работаю во втором томе заметок. [/q]
Хороший язык о котором можно говорить, а не тем которым можно пользоваться.
[q]Но какое это имеет отношение к гнилости Windows?[/q]
Вы выбираете гнилость Windows, а не совершенство Forth.
[q]Кстати, задачка "про свой Excel" есть в книжке Лисков Б., Гатэг Дж. "Использование абстракций и спецификаций при разработке программ" 1989[/q]
Задача есть, кода нет.
----------------------------------------------------------------
2025-05-15 00:49:16 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Внучок**)
(""Хороший язык о котором можно говорить, а не тем которым можно пользоваться...
Вы выбираете гнилость Windows, а не совершенство Forth...
Задача есть, кода нет"")
Т.е. Вы просто ищете себе оправдание? Берите любую задачку и делайте лучше. Хуже, чем у Мастдая, все равно, не получится.
----------------------------------------------------------------
2025-05-15 15:21:04 | o-prevraschenii-kibernetiki-v-shmanstnvo | Сисадмин со стажем

(""Рассчитывайте переход на другое ПО. Пробуйте произвести перевод на малых объемах. Возможно у конкурирующей фирмы есть для вас уникальное торговое предложение для перехода на их ПО.
Вот нашел ПО"")
Айтишники -- не единственные, кто выбирает ПО. И не главные. Сперва делают выбор руководители и маркетологи. Им нужно, чтобы ПО имело очень много функций: скидочные и бонусные программы, сторонние платёжные системы и всякие квази-деньги, чтобы можно было расплатиться, допустим, QR-кодом от какого-то партнёра или вообще от госорганов. После всех вышестоящих фильтров остаются только 2 системы, я их называл. И тогда приходится делать выбор между одним плохим и другим плохим. В ответ на жалобы на ненадёжность ПО слышим такой ответ: "Вы ж специалисты, работайте, разбирайтесь".
(""А самому что-то разработать взамен?"")
Там очень высокий порог вхождения. Много сторонних зависимостей: от ОФД, ЕГАИС, "Честного знака", от банков. Поднять одному это невозможно: пока будешь делать одно -- поменяется законодательство и надо делать другое.
(""У вас есть сейчас другой инструмент в рамках рынка — "ноги", воздействие на репутацию производителя."")
Хотел было написать статью на Хабре про R-Keeper: со скриншотами, примерами, чтобы не быть голословным. Однако правила Хабра запрещают писать негатив про компании.
----------------------------------------------------------------
2025-05-15 15:58:27 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]Айтишники — не единственные, кто выбирает ПО. И не главные. Сперва делают выбор руководители и маркетологи. Им нужно, чтобы ПО имело очень много функций: скидочные и бонусные программы, сторонние платёжные системы и всякие квази-деньги, чтобы можно было расплатиться, допустим, QR-кодом от какого-то партнёра или вообще от госорганов. После всех вышестоящих фильтров остаются только 2 системы, я их называл. И тогда приходится делать выбор между одним плохим и другим плохим. В ответ на жалобы на ненадёжность ПО слышим такой ответ: "Вы ж специалисты, работайте, разбирайтесь".[/q]
Вот поэтому нужно считать цену бага и объяснять сколько они теряют на использовании ПО и сколько они приобрели бы если б выбрали другое ПО. У вас же есть другой более лучший вариант?

[q]Там очень высокий порог вхождения. Много сторонних зависимостей: от ОФД, ЕГАИС, "Честного знака", от банков. Поднять одному это невозможно: пока будешь делать одно — поменяется законодательство и надо делать другое.[/q]
Вот она боль программистов - все постоянно меняется. Даже ГосДума написать закон намертво и безошибочно не может. Может поменять лицензию на законы и они станут безбажными?

[q]Хотел было написать статью на Хабре про R-Keeper: со скриншотами, примерами, чтобы не быть голословным. Однако правила Хабра запрещают писать негатив про компании.[/q]
Было бы что писать, а написать где всегда найдется. Тут, конечно, нужно писать правду и ничего кроме правды.
https://crmindex.ru/products/r_keeper/reviews
Судя по дате отзыва, 2021 год, это говорит о том, что все клиенты либо разбежались либо пользуются и их все устраивает.
----------------------------------------------------------------
2025-05-15 22:02:41 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Сисадмин со стажем**)
(""пока будешь делать одно — поменяется законодательство и надо делать другое"")
(""Эту ошибку разработчик не устраняет как минимум 7 лет!"")
Сдается, дело не в сложности.
----------------------------------------------------------------
2025-05-16 06:07:06 | nekotorye-vkusnosti-algol68 | void

Ещё некоторые "вкусности" Algol-68:

1. Сообщение о языке содержит определение не только синтаксиса, но и семантики языка используя формализм "многоэтажных" WG-грамматик, грамматики Wijngaarden-а. Например, приводятся примеры "многоязычного" программирования на английском и немецком, или также и на русском языке. То есть: "многоэтажные" правила и гиперправила и метаправила определяют правила порождения других правил. Вообще, формализм довольно мощный -- о чем сам Aad van Wijngaarden написал книгу с примерами о реализации клеточных автоматов, игры жизнь и прочих подобных примеров. Есть, например, работа о представлении семантики Ада в подобном виде, WG-грамматики и примеры двух представлений, формы А и B и того как это упрощается по сравнению с ЕБНФ. Там же приводится такая вот аналогия: для распознающей программы, парсера -- это можно уподобить наличию у литералов еще и типа, то есть, контекстно-зависимая грамматика где например могут встретиться например, 'letter s symbol' или 'letter s option' или даже 'STRING: row of character'. В общем, читайте algol68-draft-report.pdf и далее algol68-revised-report.pdf, там есть много интересных моментов. В целом: можно определить не только поверхностный синтаксис (которых может быть несколько, например многоязычие или "standard hardware representation", representation languages, publication languages)  -- но [b] и семантику[/b]. 

В этом смысле, [i]сообщение об алголе определяет не только и не столько синтаксис, сколько и семантику языка[/i] -- полно, подробно, формально и точно.

2. Про эти разные представления: https://git.sr.ht/~jemarch/gnu68. Из реализаций Алгол68 -- есть интерпретатор/компилятор Algol-68G: Genie, есть компилятор (транспилятор в С): Algol-68C, есть новая реализация (GNU68) в GCC 15, в отдельном форке.
можно почитать например drafts GNU68-2025-004-supper.pdf и GNU68-2025-002-bold-taggles.pdf где про это написано подробнее.

Там же написано про stropping, stropes: 

а) есть несколько различных "языковых представлений" -- для pretty printing исходников, например, в книжках : publication language. Остальные машиночитаемы: standard hardware representation = "hardware langues" -- конкретный синтаксис как комактное бинарное промежуточное представление и далее, programming lanugages, strict lanugage -- уже более похожи на абстрактный синтаксис (в идеале, если бы задавали WG- грамматиками, то не только синтаксис, но и семантику; в реальности например парсер Algol-68G Genie представляет собой написанный вручную RDP пасер, модифицированный некоторыми случаями в которых он становится LL/LALR подобным, см. замечания автора Genie по его реализации у него в блоге и на сайте).

GNU68-2025-004-supper.pdf: Stropping и stropes. Техника для того чтобы задать правила, stropping regime  -- правила представления некоторых токенов и ключевых слов чтобы различать bold letters and digits from non-bold (см. сам документ подробнее).

например, POINT stropping, RES stropping, UPPER stropping. 


[q] In POINT stropping a bold word is representated by its constituent letters and digits preceded by a point character. 
<...> a tag is represented by writing its constituent non-bold letters and digits in order. But they are organized in several taggles. <...> Each taggle is a sequence of one or more letters or digits, optionally followed by an underscore character.
<...> To improve readability it is possible to insert zero or more white spaces between the taggles in a tag. Therefore, the tag PRINT_TABLE could have been written PRINT TABLE, or even PRINT_ TABLE.

[i] This is the reason why Algol 68 identifiers, labels and field selectors [b] can and do usually feature white spaces in them [/b] [/i]
[/q]


3. По-видимому, Алгол 68 -- один из первых языков программирования в котором официально появились "идентификаторы с пробелами" в самом стандарте языка.

4. Эту схему в общем, для русского языка (или русского Алгол 68) можно бы и дополнить, модифицировав для поддержки "именных групп", хотя бы в каком-то ограниченном виде. Допустим, введем новый символ ^ и правило в stropping mode : 
"игнорировать окончания, встретившиеся после ^ символа" -- то есть, отбрасывать окончания падежей, склонений, спряжений. То есть, определив новый идентификатор задавать после ^  те части словоформы которые можно игнорировать, отбрасывая, сравнивая только части от . в POINT stropping до первого ^ (а вторые _ и последующие обрабатывать отбрасывая как и пробелы).
Крышечку ^ вводить в определении "кириллических идентификаторов с пробелами", в использовании таких идентификаторов -- сравнивать только части от начала идентификатора или . в POINT stropping режиме до первой ^, отбрасывая окончания (а _ и пробелы обрабатывать как обычно в POINT stropping режиме).

В результате: можно в использовании идентификатора использовать все его словоформы, то есть, там поиск выполнять только по части до крышечки из определения. То есть, задавать идентификаторы со склонениями, спряжениями, пажедами и так далее.

В качестве такого первого приближения вместо стемматизации. Конечно, могут быть случаи когда просто отбрасывания таких окончаний для сравненя стем до крышечки окажется недостаточно, если словоформы сильно изменяются. Но это так сказать, первое приближение (такие исключения еще надо придумать, что-то сходу очевидных не придумывается).



5. Алгол 68, еще до Оккам языка по видимому также является  первым языком программирования с семантикой CSP, Hoar sequentional processes. Например, в Oккам это PAR, SEQ, CHAN примитивы. В Алгол 68 -- parbegin...parend, begin..end, channel.

6. Примеры использования channel, и модулей 'standard prelude', pragmats для использования обычных библиотек (например, того же tk без tcl) -- есть в Algol-68 Genie. 

7. Algol-68C представлет собой транспилятор в Си наподобие GNU COBOL. В этом смысле не очень сильно отличаются по накладным расходам реализации Ада GNAT = GCC : C++ + Ada c общим бекендом из GCC и рантаймом на Ада; реализации GNU COBOL и libcobol, его рантайма для транспилированного си; реализации Algol-68C (более похожим на GNU COBOL как транспилятор в Си; или GNU68 из GCC 15, более похожим на GNAT, Ада компилятор в GCC с полноценным оптимизатором и общим бекендом из GCC).

Накладные расходы рантайма довольно большие (например, нужен сборщик мусора?). Но его наверное и далее можно подсократить до какого-то подмножества как в Ада или в Паскале (например, для Ада есть более минималистичный чем стандартный рантайм не более 40 Кб).

7. "The Making of Algol 68" by C.H.A. Koster описывает некоторые [i]design rationale[/i] проектирования этого языка, "the philosophy and orthognal framework of the language" -- про то, что язык должен проектироваться как небольшой набор слабо связанных, "ортогональных" определенных довольно точно концепций.

8. В общем, предок этих ваших BCPL/B/C и Паскаля/Модулы/Оберонов/Ады -- Алгол 68 тоже довольно интересный язык сам по себе, по достаточности, мощности и выразительной силе заложенных концепций (в некоторых его потомках так полноценно и не реализованных :)))
----------------------------------------------------------------
2025-05-16 06:17:49 | nekotorye-vkusnosti-algol68 | void

[q]
if — fi
do — od
case — esac
[/q]

В командной оболочке Bash всё те же конструкции, и это не случайно: по воспоминаниям Кена Томсона, то ли Bourne то ли Korn авторы Bash и ksh соотвественно -- притащили с собой Algol-68 реализацию с полной поддержкой API POSIX и сисколлов юникса в духе стандартной библиотеки C. 

Кажется, реализацией алгола был Algol-68C.

В общем, в Bash это напрямую из Algol-68 заимствовано.
----------------------------------------------------------------
2025-05-16 06:25:44 | index | Вежливый Лис

[q]Книга посвящена построению феноменологически-ориентированных формальных языков.[/q]
Это цитата из аннотации одной книги 1999-го года. Нашел я её в главной философской библиотеке России. Значит в топикстартовом тексте содержится фактическая ошибка о том, что книг про конструирования языков не существует.
----------------------------------------------------------------
2025-05-16 06:29:51 | o-prevraschenii-kibernetiki-v-shmanstnvo | void

Внучок, свой ёксель-моксель нужно писать не столько  на форт, сколько на RED -- точнее, на реактивном программировании и акторах.

Реализация Эксель на RED в 17 строчках : https://www.red-lang.org/2016/07/native-reactive-spreadsheet-in-17-loc.html

Livecoding на RED и его акторном фреймворке : https://www.red-lang.org/2016/07/eve-style-clock-demo-in-red-livecoded.html

Реализовать акторы и реактивное программирование на форт тоже можно. Ну или на RED/System -- реализовать форт.
----------------------------------------------------------------
2025-05-16 06:35:17 | o-prevraschenii-kibernetiki-v-shmanstnvo | void

[q]
Выбросьте Windows и не пользуйтесь, там нет исходников. Выбросьте MS Office.
[/q]

Правильно, в помойку его. Возьмите открытые TeX  -- XeLaTeX или troff, например neatroff реализацию.                    

Там нормальные TrueType шрифты легко встраиваются, и документы пишутся в UTF-8.

И там, и там -- на входе нормальные макросы, даже логические или семантические. Нормальная читаемость и автоматизация.

И нормально читаемый PDF на выходе, со всеми встроенными в него TrueType шрифтами.

Но -- это не WYSIWIG, да. это -- WYSIWIM и Do-What-I-Mean. И надо читать документацию.
----------------------------------------------------------------
2025-05-16 06:50:01 | o-prevraschenii-kibernetiki-v-shmanstnvo | Вежливый Лис

[q]Возьмите открытые TeX — XeLaTeX или troff, например neatroff реализацию.[/q]
Не надо ничего брать (разве что если только в качестве примера подвига), надо писать хтоничные кириллические разработки на эту тему.
----------------------------------------------------------------
2025-05-16 10:02:17 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]Внучок, свой ёксель-моксель нужно писать не столько на форт, сколько на RED — точнее, на реактивном программировании и акторах.
Реализация Эксель на RED в 17 строчках[/q]
Интересно, посмотрю.
----------------------------------------------------------------
2025-05-16 11:05:06 | o-prevraschenii-kibernetiki-v-shmanstnvo | void

[q] надо писать хтоничные кириллические разработки на эту тему.[/q]

Никакой особой хтоничности и не потребуется если брать именно neatroff. Если хочется хтони, то можно заморочиться с оригинальным troff и Type1 PostScript шрифтами.

Plan 9 troff: utf-8 реализация, свой формат шрифтов в Plan9.

heirloom troff: версия под Solaris где есть алгоритм переносов и заполнения пустых мест наподобие box and glue из TeX, True Type шрифты.

neatfroff by https://github.com/aligrudi, иранский разработчик: портировал Plan9 troff под Linux (см. ссылку на репозиторий, где в новых коммитах удалил код оригинального troff оставив только шрифты, так что более каноничная версия до этих коммитов).

от автора neatvi, neatcc -- "модный & молодежный " neat troff из Plan9 со следующими изменениями:

* репозиторий для быстрого старта https://github.com/aligrudi/neatroff_make и neatstart.pdf к нему.

один makefile который делает font metrics для TrueType, OpenType, PostScript T1 шрифтов если находит их в нужной папке

и далее собирает сам neatfroff и демо примеры.

* демо примеры: например, справа налево на фарси; двуязычные тексты; PIC картинки (квадратики со стрелочками, диаграммы); eqn, tbl окружения; true type шрифты; индексы и оглавления, библиография.

* далее нужно читать neatstart.pdf, neatfbeg.pdf, neatroff.pdf. 

* все это часть более полных literate programming notebooks из LITCAVE проекта про разные рабочие журналы на разных языках программирования -- чтиво интересное само по себе.

* далее нужно читать репозиторий с примерами документов и набора макросов. по идее, над этим можно написать логический семантический набор макросов типа LaTeX над plain TeX (наподобие groff: mom и/или, tmac.diss)

* по идее, можно взять что-то типа AsciiDoc и/или pandoc генерировать такой troff из markdown-подобной облегченной разметки.
----------------------------------------------------------------
2025-05-16 11:07:27 | o-prevraschenii-kibernetiki-v-shmanstnvo | void

neatroff содержит алгоритм верстки из TeX взятый из heirloom troff + utf8 реализацию из Plan9 troff + TrueType шрифты и метрики из коробки + некоторые другие расширения для удобства.

то есть, это более свежий потомок классических troff. менее громоздкий чем тот же groff.
----------------------------------------------------------------
2025-05-16 12:21:28 | index | vkacl

В сети ВК (в контакте) я организовал сообщество с названием (Мой Личный Язык Программирования (МЛЯП))
Сообщество создано для тех, кто хочет программировать на компьютере не ради денег, а ради удовольствия от творчества и в помощь своей основной работе, какой бы она не была. А также делать это оригинально, идти своим путем, не поддаваясь шаблонам и навязчивым предложениям со стороны.
Там я буду писать о своем ЯП, о готовых программах, которые на нем написаны, и о других языках программирования, а также о том, как их можно использовать. Если это интересно, то регистрируйтесь в сети ВК и подписывайтесь на сообщество. Вот ссылка
https://vk.com/club230425292
----------------------------------------------------------------
2025-05-16 12:30:17 | index | Невежливый лось

[q]ВК (в контакте)[/q]
Требует телефон? Давай, досвиданья.
----------------------------------------------------------------
2025-05-16 16:44:04 | nekotorye-vkusnosti-algol68 | void

[b]алгоритм трансляции именных групп, нулевое приближение(упрощенное отсечением)[/b]

Рассмотрим на примере трансляцию выражения на псевдоестественном контролируемом языке (конланге) ЕЯ-выражений, ЕЯ-выр в алгол-выражения, алгол-выр -- и их последовательность эквивалентных [i]языковых представлений[/i].

Исходное ЕЯ-выр <<[code]S="Глокая куздра штеко кудрячит бокрёнка."[/code]>> транслируем в нулевое алгол-выр <<[code]A0="глокая куздра штеко кудрячит бокрёнка;"[/code]>>, и будем дальше расписывать нисходящие эквивалентные языковые представления по цепочке, сокращенных промежуточных представлений.

<<[code]А0="глокая куздра штеко кудрячит бокрёнка;"[/code]>> разберем на синтаксические части речи:

<<[code]A01="глокая куздра"[/code]>> -- многословный кириллический идентификатор с пробелами. В именительном падеже [i](кто? что? class type?)[/i], или даже звательном [i](кто? что? instance object)[/i].

[b]Достаточно[/b] самоочевидно ;-) [i](если мы не знаем смысла этих слов, то можем догадаться по аналогии)[/i], что: <<[code]глокая куздра := глокая(куздра вообще);[/code]>> то есть, [i]прилагательное[/i] глокая транслируется как функция от объекта типа куздра вообще в [i]сужение[/i] этого типа ограничениeм [i](прилагательным -- какая?)[/i] глокая. 

<<[code]A02 ="X штеко Y"[/code]>>, где A02.0:штеко -- наречие, причастное, деепричастный оборот [i](как именно? швыдко,быстро, шибко, в общем -- штеко)[/i] -- оператор = <<[code]op штеко (X,Y)[/code]>> , где A02.1:X = <<глокая куздра>>, A02.2:Y = <<какой-то другой объект>>.

<<[code]A03 = "Z кудрячит W;"[/code]>> -- [i]выражение или statement[/i] где <<[code]A03.0:кудрячит (A03.1:Z,A03.2:W);[/code]>> -- [i]глагол[/i] в настоящем времени [i](что делает прямо сейчас Z с W)[/i] -- тоже может быть реализовано таким алгол-выр представлением, как оператор или как функция (или метод какого-то объекта).

очевидно, <<[code]A03.2:W = "бокрёнка"[/code]>> -- тоже идентификатор переменной, объект соотвествующего типа [i](в родительном падеже, кого? чего?)[/i].

можно установить типы A02.2:Y и A03.1:Z в смысле [i]first class objects, first class types[/i] -- но сейчас это в общем-то, не так уж и важно.

Речь сейчас о другом, о дальнейшей трансляции во все эти [i]языковые представления -- representation languages,hardware languages,strict language[/i], как строгие так и менее строгие hardware languages и stropping modes, stropping rules.

POINT-представление стандартное предписывает транслировать [b]bold world[/b] многословного кириллического идентификатора с пробелами  [/code]>>"глокая куздра"[/code]>> как [i]taggles[/i] <<[code].глокая_ куздра[/code]>> и/или эквивалентные с "точностью до пробелов" в эквивалентном представлении.

Эти taggles в некотором упрощенном смысле напоминают <<именные группы>> естественного (или скорее: [i]псевдоестественного контролируемого[/i] конструируемого) языка ([i]конганга[/i]).

Введем производное [i]"сокращённое отсечением"[/i] POINT^STEM представление stropping rules следующего вида:

<<[code].глок^ая_ куздр^а[/code]>>

которому эквиваленты (с точностью до пробелов в многословных идентификаторах)

следующие:

<<[code].глок^_ куздр^[/code]>>

далее

<<[code].штеко^[/code]>>

<<[code].бокр^ёнка[/code]>>

и им эквивалентные соответственно.

Это конечно, пока ещё не совсем ,,именная группа,, -- правильно согласованная по склонениям, спряжениям, падежам и родам. Скорее, нулевое приближение этого представления.

Например, <<[code]"глокая куздра"[/code]>> эквивалентна в этом сокращенном смысле не только <<[code]"глок куздр"[/code]>> или <<[code]"глокий куздрёнок"[/code]>> но и <<[code]"глокая куздрёнок"[/code]>> или даже <<[code]"глокое куздрёнка"[/code]>> -- налицо морфологическая ошибка: отсутствие согласования частей речи. По идее, далее нужно прорабатывать правильный алгоритм согласования падежей, стем, прочих частей речи -- находя и определяя ошибки согласования, морфологические ошибки.

Семантика падежей, согласований -- как и разбиения на существительные, глаголы, прилагательные, наречия и деепричастные обороты -- тоже может что-то существенное значить.

Но опять же, остановимся пока на этом <<[code]"нулевом приближении"[/code]>>.

И алгоритме трансляции общего выражения: ЕЯ-выр S, алгол-выр А0.

Как должен работать алгоритм парсера такого отсеченного <<нулевого приближения>>?

Очень просто: если не нашли в таблице символов <<"глокая куздра">> в именительном падеже -- ищем по сокращённому представлению <<"глок куздр">>, и удовлетворяемся первым найденным.

Есть места определения идентификаторов, и места использования.

В местах определения -- определяем не только в именительном падеже (или, скорее -- звательном). Но и в сокращенном, до общих частей, стем. И заполняем таблицу символов.

В местах использования -- ищем совпадение в таблице символов.

Если нашли точное совпадение в именительном падеже -- удовлетворяемся найденным.

Если не нашли -- ищем по сокращенному звательному представлению.

Если нашли по сокращённому -- удовлетворяемся первым найденным. 

Если и тогда не нашли по сокращённому -- значит, идентификатор не обнаружен во всех словоформах, и "символ не найден".

Очевидно, что алгоритм далее нужно дорабатывать --  чтобы искать не по первому сокращённому приближению, а по всем морфируемым стемам, правильно и корректно согласованным. Например, возможно чередование гласных, огласовок, падение редуцированных гласных и т.д. и т.п.

Пока что вопрос такой -- найти контрпример когда такого сокращённого представления до общих частей речи, корней, стем -- может быть недостаточно.

Чтобы попытаться далее уточнять правила согласования <<именных групп>>.

Очевидно, такой <<"правильный алгоритм правил согласования">> должен как-то параметризоваться типами алгол-подвыражений -- A02.2:Y и A03.1:Z, A02.1:X, A02.2:Y

Как именно выглядят правильные правила согласования, и где их следует реализовать -- в stropping rules, или может быть сразу в WG-грамматике на уровне семантики -- тоже пока не понятно.

Пока что это "нулевое приближение" такого упрощённого, "сокращённого отсечением" в стемы (задаваемые для каждого идентификатора вручную в месте определения) алгоритма трансляции.

Нужны примеры и контрпримеры чтобы далее последовательно уточнять ограничения.

Вместо <<^>> можно например использовать <<"...">> одним уникодным символом в UTF-8 кодировке "многоточие" (то есть,<<…>> = U+2026, например ) но эти сейчас синтаксические украшательства не так и важны. Речь идет о семантике алгоритма правильного согласования -- и о том, в каком месте парсера алгол-выражений эти правила уместно реализовать.
----------------------------------------------------------------
2025-05-16 17:25:16 | nekotorye-vkusnosti-algol68 | Неслучайный читатель

(**void **)
А какие, по Вашему мнению, причины того, что Алгол-68 так и не получил широкого распространения? Язык мощный, продуманный, на крепкой теоретической базе -- но не пошёл. Пошли те, которые куда проще -- Си, Паскаль и его потомки.
(""если мы не знаем смысла этих слов, то можем догадаться по аналогии"")
Аналогии в нашем языке противоречивы и в них много исключений. Была такая история: через какую-то систему пропустили Конституцию РФ и она обнаружила там глаголы "адыгеть" и "алтать". Обнаружила не напрямую, в деепричастии "Адыгея" и в глаголе в повелительной форме "Алтай". Как тебе такое, Илон Маск?

Если кто-то делает проверку орфографии и переводчик на иностранные языки, то разбор слов по составу нужен, конечно. Но зачем разбирать слова по составу при трансляции?
----------------------------------------------------------------
2025-05-16 18:00:05 | nekotorye-vkusnosti-algol68 | void

[q]Нужно пресс-ядро, то есть предельно сжатый базовый синтаксис языка исключительно для разработчиков языка, который позволяет реализовать любые другие структуры. А для пользователей уже на базе этого пресс-ядра, создать полноценный расширенный вариант синтаксиса. Тогда все будет быстро и реально реализуемо в приемлемые сроки.
[/q]

Это да. Но языки, богатый и бедный, подмножество не обязательно должны так уж сильно сильно отличаться в плане высокоуровневости и выразительности. Вопрос в том, как именно это подмножество может быть организовано -- в плане минималистичности для самораскрутки (но и достаточной эффективности реализации).

Например, по реализации интерпретатора портабельного паскаля Pascal-P и его компилятора стандартного паскаля Pascal-S есть такие исторические артефакты: www.standardpascal.org ,  Pascal-P2, Pascal-P3, Pascal-P4 и далее Pascal-P5, IP_Pascal, Pascaline, Petit-AMI, Pascal-S и т.п. вплоть до Pascal-H Дональда Кнута из plain TeX и/или ISO Pascal, например GPC и т.п. вплоть до современного но менее совместимого с ISO Pascal Free Pascal.

Отсюда: https://github.com/samiam95124/Pascal-P4 там же рядом есть P2, P4, P5, Pascal-S, Petit-AMI и бинарники IP Pascal.

История описана здесь в документации: https://github.com/samiam95124/Pascal-P4/blob/master/doc/the_p4_compiler.pdf :

[q] Pascal-P назван в честь "P-Portable", переносимой реализации подмножества языка. Он никогда и не предназначался чтобы быть  полноценной реализацией полноценного всего паскаля, скорее -- минималистично определенное самораскруткой "на самом себе" подмножество языка, достаточное для того чтобы написать после этой "переносимой" интерпретируемой pint реализации интерпретатора P-кода, компилятора P-кода pcom -- более полноценную реализацию полноценного "стандартного" Pascal-S языка.

Далее про то, что таких реализаций стало несколько и после реализаций "переносимого" Pascal-P1 1973.. Pascal-P4 1976 последнюю версию P4 ломающую совместимость с предыдущей P3 по сути "законсервировали" в виде ISO 7185 "standard pascal" (нулевой версии -- что вместо более полноценных Pascal-S, Concurrent Pascal и т.п. только поощрило клепать несовместимые форки уже начиная с UCSD Pascal, далее Turbo Pascal только все усугубил -- с нестандартными расширениями.

Раздела 1.2 -- Описаны отличия портабельного P4 и полноценного ISO Pascal

[/q]

Отличия для большей совместимости не вошли в P4, поэтому далее свою версию более совместимого портабельного подмножества этот автор выделил в интерпретатор P5 : https://github.com/samiam95124/Pascal-P5 

P6 https://github.com/samiam95124/Pascal-P6 в этом смысле -- авторское расщирение на тему Standard Pascal. Где-то в реализации P5 появился Pascaline и библиотека Petit-AMI.

Потом это развилось в Pascal-S https://github.com/samiam95124/Pascal-S  -- это тоже подмножество и тоже компилятор/интерпретатор, но более компактная реализация.

Далее приводится ссылка на книжку по реализации этой реализации P4: "Pascal implementation: The P4 compiler" by Steve Pemberton and Marting Daniels
в духе тщательно откомментированного ядра юникс из lions book и ссылка http://homepages.cwi.nl/~steven/pascal/book/

Про P-код и P-machine: https://www.standardpascaline.org/pascalfaq.html#Q.%20What%20was%20the%20%22p-machine%22?


Еще в книге "конструирование компиляторов" Никлауса Вирта приводится пример компилятора модулы-2 (и М-кода а не P-кода) -- в духе этой pint/pcom реализации.

Кодогенерировать можно и не в низкоуровневый ассемблер, а в достаточно выскокоуровневый. Типа HLA от Randall Hyde либо Euler, Euclid того же Никлауса Вирта.

Но вообще-то, вовсе необязательно писать всю реализацию на "себе самом" или даже ограниченном подмножестве (хотя это и хороший тест "метрики Вирта").

Например, реализация Алгол-68 была частично написана на изначальном РЕФАЛе. То есть, для реализации всего этого "сложного языка Алгол-68" использовался во фронтенде парсер, написаный на РЕФАЛ (собственно, для того он был изначально и разработан, с семантикой нормальных марковских алгорифмов и сопоставления с образцом).

Далее можно было бы например и трансляцию упростить -- транслировать например в лисп в качестве промежуточного представления. Например, в тот лисп что в GCC зовется MELT и используется как промежуточное представление для SSA и RTL кодогенерации.

То есть, любопытна была бы например такая реализация Алгол-68 где парсер напрямую порожден из изначального определения языка, его семантики а не только синтаксиса -- из изначального сообщения о языке алгол-68 в WG-грамматиках Вейнгаардена, прямо из algol68-draft-report.pdf изначального на 84 страницы или уточненного algol68-revised-report.pdf на 237 страниц с примерами.

Это, конечно, все еще много по сравнению с сообщением об обероне-2 на 15 страниц или даже об P2..P4 реализации Pascal-P.

Но реализовав, например, фронтэнд на РЕФАЛ-е и трансляцию его в лисп MELT -- для бекенда и оптимизатора можно значительно упростить саму реализацию, во-первых. И упростить соответствие  изначальному определению, семантики, а не только синтаксиса -- из этой первой каноничной реализации, из [i]сообщения об языке алгол[/i]

Вместо этого в Algol-68G и Algol-68C похоже парсер нисходящий рекурсивный реализован вручную. Со всеми оговорками, ограничениями и частными случаями в которых он становится LL/LALR-подобным и быстро компилируется.

В общем, была бы любопытна реализация Алгол-68 на самих грамматиках Вейнгаардена, WG-грамматиках -- из того самого изначального определения.

Например, реализация языка Смоллток на языке Factor -- это буквально десяток строк транслятора на PEG-парсере из изначальной довольно компактной спецификации.

Реализация паскаля, модулы-2, оберона-2 на PEG-парсере библиотеке pegged для языка D -- это тоже несколько строк, и в основном -- буквальное соответствие синтаксической спецификации. Которое благодаря enum immutable через CTFE, compile-time function execution раскручивается в полноценную реализацию парсера -- во время компиляции.

В этом смысле:  когда парсер пишут руками, ради "эффективности" LL/LALR реализации -- теряют саму концептуальную суть этой идеи. Была бы более любопытна реализация через парсер WG-грамматик на РЕФАЛе и транслятор R-выражений рефала в S-выражения лиспа GCC MELT, и далее -- использовать готовый бекенд и кодогенератор от готового GCC и его оптимизатора.

То есть, выражения алгебра метаязыка -- носителя выражений другого объектного языка. Алгол-выражений -- на метаязыке WG-грамматик. WG-парсер -- на метаязыке РЕФАЛа, транспилятор R-выражений РЕФАЛА в S-выражения лиспа GCC MELT, и далее -- использовать все готовые компоненты с минимальными доработками, не относящимися собственно к синтаксической ([i]но также -- и семантической!!!)[/i] спецификации самого языка [i](и метаязыка, и метамета языка и так далее...) ;-))) [/i]
----------------------------------------------------------------
2025-05-16 23:39:54 | index | Автор сайта

(""Книга посвящена построению феноменологически-ориентированных формальных языков.
...
в топикстартовом тексте содержится фактическая ошибка о том, что книг про конструирования языков не существует"")
Нашёл автореферат диссертации по философии (,,Формальная феноменология,,), в нём есть даже такие разделы: (,,Неэлементарное истолкование учения К. Твардовского о представлении,,), (,,Поздний Твардовский о представлении,,), (,,Твардовскианская Формальная Онтология,,). Это точно, что Твардовский был программистом?

(**vkacl**)
Если хотите, могу организовать для Вас ветку на одном из форумов (<a href="268">первый</a> и <a href="269">второй</a>). Там не нужен телефон для регистрации.
----------------------------------------------------------------
2025-05-17 01:36:38 | o-prevraschenii-kibernetiki-v-shmanstnvo | void

[q]Некоторые утверждают, что ассемблер можно написать за два дня. Ошибаются, и они, и Вы.[/q]




* Amazing AWK assembler : http://doc.cat-v.org/henry_spencer/amazing_awk_assembler/ 

ассемблер на AWK

ассемблер на форте тоже можно написать не более чем за два дня. 

впрочем, тогда придется реализовать все инструкции вроде x86doc https://github.com/fay59/x86doc

* awf - The Amazingly Workable Formatter : http://doc.cat-v.org/henry_spencer/awf/  

nroff -man или nroff -ms подмножество на AWK

* ifdef Considered Harmful : http://doc.cat-v.org/henry_spencer/ifdef_considered_harmful
----------------------------------------------------------------
2025-05-17 02:11:30 | o-prevraschenii-kibernetiki-v-shmanstnvo | void

Ассемблер в Inferno OS тоже довольно компактный: 

старое 3rd edition: https://github.com/inferno-os/inferno-3e/tree/master/asm

новое актуальное: 

* x86_64 6a https://github.com/inferno-os/inferno-os/tree/master/utils/6a 

* x86_32 8a https://github.com/inferno-os/inferno-os/tree/master/utils/8a

* про установку Inferno и простой сервер а также графический helloworld  

https://www.ueber.net/who/mjl/inferno/getting-started.html    

клонировать надо с нового репозитория, а не с hg

* форк для Android https://github.com/bhgv/Inferno-OS_Android 

* впрочем 5a это ARM ассемблер https://github.com/inferno-os/inferno-os/tree/master/utils/5a

так что вот -- хоть и не на AWK а на lex, yacc и С препроцессоре, но тоже довольно компактная реализация

да, это возможно написать компактный и довольно простой но работающий ассемблер за день

даже несколько ассемблеров: x86_32, x86_64, ARMv4, RISC-V
----------------------------------------------------------------
2025-05-17 03:37:41 | index | Вежливый Лис

Аристотель тоже программистом не был, но логику вы наверное в программах используете.
----------------------------------------------------------------
2025-05-17 12:55:09 | index | Gudleifr

Вопрос теории разработки языков программирования в этой гостевухе подменен вопросом о теории "именно таких языков".
----------------------------------------------------------------
2025-05-17 22:14:45 | index | vkacl

Номер телефона нужен для получения пароля по смс при входе. Сеть ВК перешла на технику Сбербанк онлайн. Но если не хотите регистрироваться. то есть другой способ. Я постепенно собираюсь написать целую книгу, но по кускам. Много сразу писать сложно. В сообществе сети ВК я по возможности выставляю по одному куску и можно комментировать. А все, что я уже написал, можно читать на моем сайте. Вот ссылка. 
https://xray-optics.ucoz.ru/info/mppl.htm
А если будут вопросы, то можно писать мне в почту. Адрес почты есть на моем сайте, и я его скоро добавлю в текст самой пока статьи. Я просто хотел бы найти единомышленников, которые бы помогали тестировать новый код и предлагали идеи. Программа бесплатная, легко скачивается, ну а возможности ее использования зависят от умения учиться. Я сам ее использую постоянно. Это моя операционная система. Программа работает в Виндовс и в Линукс. А в iOS я ее просто не тестировал.
----------------------------------------------------------------
2025-05-19 01:02:49 | otechestvennye-razrabotki | Автор сайта

Думаю, что права на торговую марку (,,Эльбрус,,) принадлежат (,,МЦСТ,,), к которому оба Бабаяна, скорее всего, отношения не имеют. Тогда почему назвали (,,Эльбрус-Б,,)? Если учитывать фамилию источника новости, то логичнее процессор назвать (,,Арарат,,).

Заявленные «в 30-200 раз» вызывают скепсис. С сегодняшним (,,Эльбрусом,,), который без буквы (,,Б,,), есть вопросы. Писали, что исполняемый код, подготовленный фирменным компилятором C++ (,,МЦСТ,,), работает медленнее, чем подготовленный GCC (или MS -- точно не помню) и работающий в режиме двоичной трансляции. (,,Эльбрусы,,) заточены на параллелелизм, но есть классы задач, которые выполняются последовательно.
----------------------------------------------------------------
2025-05-19 06:31:36 | otechestvennye-razrabotki | Вежливый Лис

Там картинка со стрелочкой "ускорение в 100 раз":

https://habr.com/ru/news/909078/
"абсолютный параллелизм на долгие годы без упоминания архитектуры", "переписывание программ"

https://habr.com/ru/articles/596193/#strands
"идея разбить код на зависимые по данным линейные участки (стренды) и исполнять их параллельно не нова. Она использовалась (насколько можно понять из отрывочных данных) в системе Эльбрус-3-1 (МКП) (1990 г.), не исключено, что и раньше были попытки."
"Стренды выражают параллелизм намного более явно по сравнению с обычным суперскалярным процессором и намного более естественно по сравнению с VLIW."
----------------------------------------------------------------
2025-05-19 11:55:50 | otechestvennye-razrabotki | Вежливый Лис

У микрософта тоже есть такое направление, но я давно читал, лет 10-15 назад, уже не найду.
----------------------------------------------------------------
2025-05-19 18:50:10 | otechestvennye-razrabotki | Бурановский дедушка

Веселят комментарии на Хабре:
(""Новая архитектура будет использовать язык программирования «Эль-22»"")
(""Так может это не год, а отсылка к "уловке 22"? Тогда всё становится понятно"")
(""Это год, отсылка к "Эль-76""")
("""Эль-76", "Эль-22" - в названии явно проблема 2000 года"")
(""(""мощность в 30-200 раз большую, чем зарубежные аналоги"")
Разве что потребляемую мощность..."")
(""Учитывая, что Борису Бабаяну больше 90 лет, в Intel он, наверное, в этот раз не сбежит... хотя, его сын Евгений - молодой (и 70 нет)..."")
(""В чем состоит проблема? В сложности задачи, которую берет на себя процессор. Суперскаляр на ходу распараллеливает последовательный код. Но этот процесс распараллеливания слишком трудоемок даже для нынешних процессорных мощностей, и именно он ограничивает производительность машины. Делать это преобразование быстрее определенного количества команд за такт невозможно. Можно сделать больше, но при этом упадет тактовая частота – такой подход, очевидно, бессмысленен. Разумный предел количества команд в настоящее время изучен со всех сторон и пересмотру не подлежит"")
(**Вежливый Лис**)
(""Там картинка со стрелочкой "ускорение в 100 раз""")
Стрелочка указывает на надпись (,,Переписывание программ,,). То есть для волшебства одного лишь (,,Эльбруса-Б,,) недостаточно, нужно переписать программы. Люди, которые рассчитывают, что кто-то захочет переписывать Линукс под (,,Эльбрус-Б,,) -- они реалисты?
----------------------------------------------------------------
2025-05-19 19:18:40 | otechestvennye-razrabotki | Вежливый Лис

[q]Веселят комментарии[/q]
А меня наоборот, расстраивают... Что им такого нужно написать, чтобы они хвалили?
----------------------------------------------------------------
2025-05-20 13:27:39 | otechestvennye-razrabotki | Умлис

[q]Что им такого нужно написать, чтобы они хвалили?[/q]
Напишите им новый русский язык программирования, который можно запустить.
----------------------------------------------------------------
2025-05-20 13:42:25 | otechestvennye-razrabotki | Вежливый Лис

[q]Напишите[/q]
Нет, вы. Это сайт компилер.су занимается языками (да и то, их философией). А я - планами. Написать всё мне в одну морду слабо.
Начните что-ли с создания git-репозитория под автокод.
----------------------------------------------------------------
2025-05-20 14:18:56 | otechestvennye-razrabotki | Умлис

[q]Нет, вы.[/q]
Вы давно в этой теме. Я новичок, хотя и умный.
[q]Начните что-ли с создания git-репозитория под автокод.[/q]
Я задумываюсь, почему вы не начали с создания репозитория.
Начните, кто-то продолжит.
----------------------------------------------------------------
2025-05-20 14:25:57 | otechestvennye-razrabotki | Вежливый Лис

[q]Я задумываюсь, почему вы не начали с создания репозитория.[/q]
И каков ход ваших мыслей?
----------------------------------------------------------------
2025-05-20 14:29:18 | otechestvennye-razrabotki | Умлис

[q]И каков ход ваших мыслей?[/q]
Вежливому Лису - лень что-то делать.
----------------------------------------------------------------
2025-05-20 14:44:03 | otechestvennye-razrabotki | Вежливый Лис

Но личные недостатки Лиса никак не мешают делать что-либо вам! Значит дело не в них, а в чём-то ещё.
----------------------------------------------------------------
2025-05-20 14:48:03 | otechestvennye-razrabotki | Умлис

[q]Но личные недостатки Лиса никак не мешают делать что-либо вам! Значит дело не в них[/q]
Умлис видит нелогичность в высказываниях Вежливого Лиса.
----------------------------------------------------------------
2025-05-20 14:58:19 | otechestvennye-razrabotki | Вежливый Лис

Раскройте нелогичности, пожалуйста, с вашей точки зрения.
----------------------------------------------------------------
2025-05-20 15:06:02 | otechestvennye-razrabotki | Умлис

[q]Раскройте нелогичности, пожалуйста, с вашей точки зрения.[/q]
Все просто, посылка и следствие у вас не логичны.
Трава зеленая, поэтому Лис надел синие штаны.
----------------------------------------------------------------
2025-05-22 00:30:11 | otechestvennye-kompanii-razrabotchiki-kompilyatorov | Автор сайта

Студент Пермского Политеха Даниэль Дингес разрабатывает язык программирования Ritter. Иновационный, будет сочетать в себе гибкость, расширение возможностей разработчика и простоту в освоении (куда ж без этого?).(""Ritter использует только стек, полностью отказываясь от «кучи». Это значит, что вся память определяется заранее, еще на этапе написания кода... Нет привычных жестких типов данных... Гибкость языка... Сам код прост, лаконичен и будет понятен даже новичкам... Команда оценивает затраты на создание первой упрощенной версии Ritter в 2 млн рублей, а формирование стандартной библиотеки и инструментов языка — в 7-15 млн рублей. Бета-релиз планируется в октябре 2026 года"")
Ориентация на стек и отсутствие типизации сделает этот язык похожим на Форт. Полный отказ от «кучи»: интересно -- как? Как говорят в Одессе: (,,Будем посмотреть,,). Ссылок на сайт проекта нет, есть только упоминание в новостных ресурсах.
----------------------------------------------------------------
2025-05-22 08:37:00 | otechestvennye-kompanii-razrabotchiki-kompilyatorov | Вежливый Лис

По-моему по латинскому алфавиту названия языка уже всё ясно об умонастроениях в команде, можно закапывать сразу.
----------------------------------------------------------------
2025-05-22 11:34:00 | otechestvennye-kompanii-razrabotchiki-kompilyatorov | Умный Лис

[q]можно закапывать сразу.[/q]
Откопайте что-нибудь.
----------------------------------------------------------------
2025-05-22 11:49:16 | otechestvennye-kompanii-razrabotchiki-kompilyatorov | Gudleifr

(""Откопайте что-нибудь"")
Самым известным русскоязычным языком программирования безусловно является TRAC, инструкции которого перевели на русский вместе со всей книгой этюдов Уэзерелла в 1982-м.
----------------------------------------------------------------
2025-05-22 12:59:29 | otechestvennye-kompanii-razrabotchiki-kompilyatorov | Бурановский дедушка

(""Самым известным русскоязычным языком программирования безусловно является"")Таки 1С.
----------------------------------------------------------------
2025-05-22 14:36:26 | otechestvennye-kompanii-razrabotchiki-kompilyatorov | Gudleifr

(**Бурановский дедушка**)
Ну, не в приличном же обществе..!
----------------------------------------------------------------
2025-05-22 19:13:09 | otechestvennye-kompanii-razrabotchiki-kompilyatorov | Вежливый Лис

[q]Откопайте что-нибудь[/q]
Мы не можем, ни я, ни Gudleifr, ни прочие. Мы старые, выжили из ума. Физически неспособны.
Тот же Бурановский дедушка на требование знать C++ говорит "мы языков не знаем".
В молодости казалось бы ерунда, взял книжку "за 21 день" и выучил. А сейчас просто не можем и всё.

Откопать можно только какой-нибудь молодой талант. Например вас лично.
----------------------------------------------------------------
2025-05-25 17:17:13 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Автор сайта

Ещё один язык программирования -- <a href="#ULCA">ULCA</a>.
----------------------------------------------------------------
2025-05-26 15:18:34 | entuziasty-razrabotchiki-kompilyatorov-i-ikh-proekty | Умный Лис

[q]Мы не можем, ни я, ни Gudleifr, ни прочие. Мы старые, выжили из ума. Физически неспособны.[/q]
Рано сдались, старички Советского Союза.
----------------------------------------------------------------
2025-05-27 10:33:24 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

Битва отечественных ОС продолжается, появилась мобильная РЭД ОС и телефон с ней.
https://hs-store.ru/catalog/smartfony/smartfon-aqphone-m11-chyernyy-red-os-m-sku1298/
----------------------------------------------------------------
2025-05-27 17:01:21 | len-dvigatel-progressa | Бурановский дедушка

https://www.cnews.ru/news/top/2025-05-14_vsya_mirovaya_pk-industriya
(""Вся мировая индустрия ПК держится на ленивых программистах. Нужно постоянно покупать новое «железо», чтобы бездарный код не тормозил.

Вся современная индустрия компьютеров существует едва ли не благодаря не очень добросовестным программистам. Миллиарды людей запросто могли бы работать на старых компьютерах и не тратить деньги на новые, если бы разработчики ставили в приоритет оптимизацию своего программного кода.

Способ заставить программистов, наконец, прекратить выпускать тяжелый код и начать уделять время его оптимизации, существует. Ддля этого нужно лишь, чтобы процесс разработки и производства новых процессоров прекратился.

Возможно, пользователи и сами заставят программистов писать нормальный код. Когда в рознице стали появляться компьютеры с процессорами, поддерживающими ИИ, однако они совсем не заинтересовали потребителей. Покупатели покупали технику без поддержки ИИ. Они тем самым не только показали свое отношение к ИИ, но и сэкономили, купив не самое современное «железо»"")
Так что лень в одном месте прогресс двигает, а в другом тормозит.
----------------------------------------------------------------
2025-05-27 17:11:20 | o-prevraschenii-kibernetiki-v-shmanstnvo | Бурановский дедушка

(""Выбросьте Windows и не пользуйтесь, там нет исходников. Выбросьте MS Office"")
В MS всё время продвигали свою монополию и её таки добились. Поэтому предложение не пользоваться продуктами MS -- вполне себе риторический приём.

А вот в Британии MS штрафуют как раз за монополизм: https://www.cnews.ru/news/top/2025-05-14_microsoft_zhestoko_zasudyat_na
(""Microsoft жестоко засудят на миллиарды за монополию и накрутку цен на Windows и MS Office. Корпорация вовсю пользовалась своим доминирующим положением на рынке операционных систем и и офисного ПО и задирала цены. Microsoft злоупотребила своим доминирующим положением, фактически подавила конкуренцию и привела к завышению цен."")
----------------------------------------------------------------
2025-05-27 17:15:00 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Бурановский дедушка

Жаль, что нет более-менее рабочей Windows-совместимой ОС.
----------------------------------------------------------------
2025-05-28 00:49:32 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]В MS всё время продвигали свою монополию и её таки добились. Поэтому предложение не пользоваться продуктами MS — вполне себе риторический приём.[/q] 
Учитывайте контекст в котором были сказаны эти слова и кому. Человек пользуется офисом, windows и при этом утверждает что софт без исходником является гнилым ПО. Есть линукс с исходниками, есть другие офисы с исходниками почему не пользуется? Где здесь логика? Или все таки приятно по его мнению пользоваться "гнилым" софтом. Сидеть на гнилом, и погонять это гнилое ПО когда есть альтернативы. Утверждает одно и придерживается противополжного - просто троль.

[q]А вот в Британии MS штрафуют как раз за монополизм[/q]
Британии просто денег нужно срубить. 
Монополия заключается лишь в том, что другим лень переходить на что-то другое. Альтернативы есть.
----------------------------------------------------------------
2025-05-28 00:59:44 | len-dvigatel-progressa | Внучок

[q]Они тем самым не только показали свое отношение к ИИ, но и сэкономили, купив не самое современное «железо»[/q]
Покупатели собрались в профсоюз и показали этим бессовестным программистам. Бредятина :)
----------------------------------------------------------------
2025-05-28 11:06:08 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Внучок**)
(""Человек пользуется офисом, windows и при этом утверждает что софт без исходником является гнилым ПО. Есть линукс с исходниками, есть другие офисы с исходниками почему не пользуется? Где здесь логика?"")
Логика здесь в том, что люди делают что-то по разным причинам. И упираться в одну-единственную не имеет смысла.
----------------------------------------------------------------
2025-05-28 14:49:10 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

Поддерживаю. Причем, я бы даже согласился на любую альтернативу *nix, но чтобы она поддерживала бинарную совместимость созданных программ, библиотек и драйверов, пусть даже не совместимую с win.
----------------------------------------------------------------
2025-05-29 08:57:28 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Вежливый Лис

[q]чтобы она поддерживала бинарную совместимость созданных программ[/q]
Джава - один раз пишешь, везде запускаешь. Очень похожее желание.

Только это не работает. Например в Tomcat меньше 10 неймспейсы называлась javax.*, а начиная с 10 называются jakarta.*. И всё, стандартный пример бинарного .war-файла из стандартной поставки перестал работать, его надо перекомпилировать из исходников.
----------------------------------------------------------------
2025-05-29 13:12:01 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

Вы больше пишете про обратную совместимость в процессе развития техники и технологий. Она тоже важна, но это немного другое.

Одна из ценностей бинарной совместимости - независимость от языка программирования.
----------------------------------------------------------------
2025-05-29 13:45:40 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Клихальт

[b]veector[/b], раз "совместимость в процессе развития техники и технологий" это "немного другое" и [q]Одна из ценностей бинарной совместимости — независимость от языка программирования.[/q]
то, пожалуйста, разъясните развёрнуто что именно Вы вкладываете в понятие "бинарная совместимость" и как оно должно работать на практике.
----------------------------------------------------------------
2025-05-30 09:58:30 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

Развернуто, наверное, не получится.

Кратко, я себе представляю примерно так.
(..Скомпилировал программу у себя на компьютере на любом доступном мне языке программирования, который есть у меня, получил бинарный файл. ..)
(..Этот бинарный файл может выполниться на другом компьютере, где нет никаких средств разработки, а сам компьютер другого производителя, не такой как у меня, или, например, на телефоне. ..)

Это не обратная совместимость. Допустим, для примера, в процессе развития технологий появилась новая аппаратная вещь - операции SIMD. Естественно, бинарная программа их использующая может отказаться работать на компьютере, которые не умеет исполнять SMID. 

Это нормально - ну нельзя просто так, условно, ехать на газу на современном бензиновом авто (нельзя залить газ в бензобак), т.е. новый авто отличается от предыдущего.

И вот тут можно поговорить об обратной совместимости. Если все-таки нужно запускать такую программу на "стром" компьютере (без аппаратной SMID), то это можно решать разными путями. Например, заложить в бинарный файл два режима работы, с SMID и без (ведь в момент создания программы с SIMD разработчик знает, что есть компьютеры с SIMD и без). Еще можно эмулировать SIMD системными средствами компьютера (т.е. программно), естественно, если такое поддерживается компьютером. Ну, а если путей решения этого нет, тогда - либо апгрейд, либо без данной программы.

На текущий момент наиболее близким к этому всему техническим решением является x86-64 с Windows. У нас хотя бы есть две альтернативные ветки x86 (Intel и AMD) с самыми разнообразными процессорами (от энергоэффективных, до топовых и серверных, мультипроцессорные конфигурации), а вот реальной альтернативы Windows нет.


Отсутствие тренда на бинарную совместимость - это не плохо и не хорошо. Я никого не призываю бросать всё и разрабатывать бинарно-совместимые решения, а лишь сожалею, что они не развиваются.

Сейчас основной курс на совместимость на уровне исходников, мульти платформенные решения, которые можно скомпилировать (не без проблем, но можно) на широком спектре компьютеров. Этим люди решают проблему зависимости от Intel и AMD, которые узурпировали архитектуру x86, и от фирмы ARM, которая узурпировала все ARM-архитектуры.

Надеюсь, RISC-V взлетит, хотя лично мне пока в это верится с трудом.
----------------------------------------------------------------
2025-05-30 12:33:45 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

Пардон, а при чем тут совместимость? Что-то написано на чем-то, где-то работает, где-то нет... Совместимость - это две конкретные вещи, устроенные совершенно по разному, имеющие схожий интерфейс. Например, два компилятора с разных языков, имеющие один формат объектного кода. Два браузера, понимающие один скриптовый язык... Т.е. для совместимости нужно только документировать некоторый интерфейс, будь он машинным кодом или соглашением о выкладывании алгоритмов.
----------------------------------------------------------------
2025-05-31 17:40:28 | len-dvigatel-progressa | Неслучайный читатель

(""(__Меню «Пуск» в Windows 11 оказалось лишь React Native приложением, грузящим процессор до 80%.__)

Оказалось, что каждый вызов «Пуска» запускает тяжелый интерфейс, который обновляется как веб-страница: с анимациями, DOM-объектами и переработкой слоев.

В результате — скачки нагрузки даже на мощных системах, не говоря уже о бюджетных ноутбуках. На скриншотах пользователи показывают рост до 70–80% загрузки одного ядра при каждом открытии меню.

Почему «Пуск» вообще написан на React Native? Потому что компания желает унифицировать разработку — один код можно использовать и на десктопе, и в вебе.

На фоне этого всплыло старое высказывание Джона Кармака. По его словам, главная проблема — не железо, а неэффективное ПО. И если рынок заставит, мы увидим настоящую революцию в оптимизации."")
(**Бурановский дедушка**)
(""в одном месте прогресс двигает, а в другом тормозит"")
Как видите, лень вышла на новый уровень: тормозит везде.
----------------------------------------------------------------
2025-06-01 14:44:17 | len-dvigatel-progressa | Внучок

[q]По его словам, главная проблема — не железо, а неэффективное ПО. И если рынок заставит, мы увидим настоящую революцию в оптимизации.[/q]
Из этого можно вывести закон в стиле законов Паркинсона:
ПО заполняет пространство, данное ей железом с минимальными трудозатратами.
Улучшение железа ведет к понижению качества ПО.

Товарисчи! Покупаем б.у. железо чтобы поднять качество ПО по большим ценам, чтобы поддержать рынок б.у. 
...
Продаю старый хлам, интел, за дорого, звонить 8-912-345-67-89
:)
----------------------------------------------------------------
2025-06-01 16:40:09 | len-dvigatel-progressa | Неслучайный читатель

(""(__Меню «Пуск» в Windows 11 оказалось лишь React Native приложением, грузящим процессор до 80%.__)

Оказалось, что каждый вызов «Пуска» запускает тяжелый интерфейс, который обновляется как веб-страница: с анимациями, DOM-объектами и переработкой слоев.

В результате — скачки нагрузки даже на мощных системах, не говоря уже о бюджетных ноутбуках. На скриншотах пользователи показывают рост до 70–80% загрузки одного ядра при каждом открытии меню.

Почему «Пуск» вообще написан на React Native? Потому что компания желает унифицировать разработку — один код можно использовать и на десктопе, и в вебе.

На фоне этого всплыло старое высказывание Джона Кармака. По его словам, главная проблема — не железо, а неэффективное ПО. И если рынок заставит, мы увидим настоящую революцию в оптимизации."")
(**Бурановский дедушка**)
(""в одном месте прогресс двигает, а в другом тормозит"")
Как видите, лень вышла на новый уровень: тормозит везде.
----------------------------------------------------------------
2025-06-01 18:24:48 | len-dvigatel-progressa | Неслучайный читатель

(**Внучок**)
(""ПО заполняет пространство, данное ей железом... Улучшение железа ведет к понижению качества ПО"")
Аналогичные мысли: (,,О прожорливых программистах,,), https://dzen.ru/a/Z2vl6tt0zwsqvTPQ:
(""Ленивые разработчики слабо заботятся об оптимизации. Программисты ведут себя как идеальный газ — стремятся заполнить всю доступную им вычислительную мощность. Если бы программисты больше думали о быстродействии своих приложений, современные игры работали бы на самых дешёвых ноутбуках с той же скоростью, с какой они работают на настольных компьютерах за 400 тысяч рублей.

Избыток доступных ресурсов приводит к тому, что эти ресурсы будут кем-то оприходованы, как правило с общим понижением КПД всей системы. Продолжая по аналогии законы Паркинсона, можно сказать, что все дополнительные ресурсы железа будут неизбежно утилизированы ленивыми лапками программистов... (**нет обратной (__воспитывающей__) связи**)"")
Золотые слова:
(""(**нет обратной (__воспитывающей__) связи**)"")
----------------------------------------------------------------
2025-06-01 18:50:14 | len-dvigatel-progressa | Внучок

[q]Если бы программисты больше думали о быстродействии своих приложений, современные игры работали бы на самых дешёвых ноутбуках с той же скоростью, с какой они работают на настольных компьютерах за 400 тысяч рублей.[/q]
Согласитесь, этот процесс работает и в другую сторону: старое ПО будет работать быстро на новом железе. Пока напишешь новое ПО оно уже ускорится на новом железе :)

[q]нет обратной воспитывающей связи[/q]
Рынок диктует условия и осуществляет обратную связь. Если вам не нравится такая обратная связь, то это ваши проблемы.
----------------------------------------------------------------
2025-06-01 19:55:20 | len-dvigatel-progressa | Внучок

[q]настольных компьютерах за 400 тысяч рублей.[/q]
Революцию в железе должен кто-то оплачивать. И пусть это делают самые богатые:)
----------------------------------------------------------------
2025-06-01 21:10:52 | len-dvigatel-progressa | Клихальт

[b]Внучок[/b], [q]Революцию в железе должен кто-то оплачивать.[/q]
С чего вы взяли, что прыжки вширину это революция?
----------------------------------------------------------------
2025-06-01 21:59:23 | len-dvigatel-progressa | Внучок

[q]прыжки вширину[/q]
Прыжки вширину приводят к ограничениям, вот тут и понадобятся средства на прыжки в длину.
----------------------------------------------------------------
2025-06-03 08:50:52 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

ОС "Аврора" автомобильная.
https://www.omp.ru/news1/tpost/j7bu41e7a1-rostelekom-predstavil-otechestvennuyu-si
----------------------------------------------------------------
2025-06-03 21:51:52 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Автор сайта

С одной стороны хорошо, что есть развитие, что есть конкуренция между (,,Авророй,,), ОС Касперского, многочисленными российскими версиями Линукса. С другой стороны, а есть ли ресурсы, чтобы разбрасываться ими на создание ПО, которое во многом дублирует друг друга? Вот тут не раз поднимали вопрос, почему мы не можем объединить усилия, допустим, в разработке языка программирования. А с ОС мы видим, что усилия не объединены, при том что государство в этой нише очень сильно занимается регулированием и к объединению не побуждает.
----------------------------------------------------------------
2025-06-04 13:48:23 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

("" а есть ли ресурсы, чтобы разбрасываться ими на создание ПО, которое во многом дублирует друг друга? "")
 
(**(__Про "ресурсы".__)**)

(__Ответ__): да, ресурсы есть и они не такие заоблачные, как кажется одному человеку.

Судя по тому, что есть несколько разных дистрибутивов (разных ОС), то, для создания и сопровождения своей ОС достаточно компании с примерно понятным уровнем заработка.

(**(__Про "во многом дублирует".__)**)

(__Ответ__): дублирование является кажущимся, т.к. для обычного человека, это всего лишь запуск множества одних и тех же программ (в разумных пределах) на разных ОС, что не требует больших затрат, на фоне затрат на специфичные вещи ОС. А выбранная специфика почти не пересекается и не конкурирует между собой, поэтому, там нужны и работают разные люди.

Специфичные вещи: кто-то нацелился на большой охват разных процессоров и аппаратных систем, кто-то сосредоточился на бортовых системах, кто-то на data-центрах с виртуализацией но ограничил себя определенным кругом железа, кто-то на обычных пользователей и корпорации, кто-то на модильные, и т.д. и т.п.

Обычный человек, выбрав разную ОС не останется без прикладной программы или ее аналога. Различия начнутся только в достаточно специфической области, например, драйверы для сетевого оборудования, видеокарты, специального ПО типа антивируса, которое интегрируется в компоненты ОС и т.п. И вот тут каждая ОС будет иметь свои особенности.
----------------------------------------------------------------
2025-06-04 14:35:44 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

(-- модильные --)
мобильные
----------------------------------------------------------------
2025-06-04 15:17:58 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**veector**)
ОС - это не когда на самодельном процессоре удалось запустить самописный офис.
ОС - это когда ты покупаешь пиратский диск с игрой и та запускается. Когда не надо лазать по интернету в поисках "чем открыть документ".
Хорошая ОС - это когда не нужно согласовывать межпрограммный обмен в гигантском проекте, собранном с миру по нитке.

И разумный путь возможен один - полная разборка Windows "китайским способом", с созданием обслуживающей его (включая полную пересборку) экспертной системы. Сделать Винду управляемой. Чтобы на вопрос "Где взять новую Винду?" - можно было дать ответ: "Замени блоки ## на ##".
----------------------------------------------------------------
2025-06-04 17:25:43 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

Когда на самодельном процессоре удалось запустить самописный офис - это как ехать на поле боя на отечественном танке или лететь на отечественном самолете. Это важно и нужно. Но у нас речь с автором сайта сейчас не об этом.
----------------------------------------------------------------
2025-06-04 17:32:46 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**veector**)
(""Когда на самодельном процессоре удалось запустить самописный офис — это как ехать на поле боя на отечественном танке или лететь на отечественном самолете"")
Нет, это как играть в соседской песочнице китайским танчиками.
(""у нас речь с автором сайта сейчас не об этом"")
Так вернитесь в тему.
----------------------------------------------------------------
2025-06-04 17:45:24 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Клихальт

[b]veector[/b],[q]Судя по тому, что есть несколько разных дистрибутивов (разных ОС), то, для создания и сопровождения своей ОС достаточно компании с примерно понятным уровнем заработка.[/q]
Под "созданием" Вы имеете ввиду проектирование и разработку ОС с нуля, или как это всё сейчас у нас делается?
----------------------------------------------------------------
2025-06-04 17:57:18 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Клихальт**)
(""Под "созданием" Вы имеете ввиду проектирование и разработку"")
Вам же ясно написали - "заработок".
----------------------------------------------------------------
2025-06-04 18:30:34 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Капиталист

[q]Вам же ясно написали — "заработок".[/q]
Коммунист Gudleifr добился значительных результатов без привлечения средств и готов нам предоставить свою ОС из г.. и палок, завтра презентация!
----------------------------------------------------------------
2025-06-05 09:19:55 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

(**Клихальт**),
(""Под "созданием" Вы имеете ввиду проектирование и разработку ОС с нуля, или как это всё сейчас у нас делается?"")
 
(__Ответ__): у нас это делается нормально, правильно и по современному. Времена BolgenOS уже давно прошли. Проектирование на слуху ОС (РэдОС, Астра, Касперский, Аврора, и т.д.) выполняется с заранее выбранной целью. Для этого можно, нужно и используются открытые наработки, сделанные человечеством. ОС рассматривается как экосистема для прикладных программ и для пользователей, а не как отдельностоящий компонент, который никому не нжен.

1. Написать свою ОС это не такая и сложная задача. Но (__"голая"__) ОС, ОС без длительного срока сопровождения -- никому не нужна. А 99.(9)% трудозатрат находится вне ОС, в виде драйверов, файловых систем, аппаратно-программных коммуникаций, постоянно появляющейся новой аппаратуры и архитектурных решений, миллионов различных прикладных программ и еще большее количество вариантов применения всего этого.

Мы привыкли считать, что ОС -- главная. Но это не совсем так.
Как ОС влияет на программы для нее, так и программы влияют на ОС, обязывая разработчиков ОС вести постоянное долгосрочное сопровождение и изменение ОС под нужны конечных пользователей.

2. Переиспользование кода ( (//https://ru.wikipedia.org/wiki/Повторное_использование_кода//) ) -- это основа для развития функционала у программного обеспечения, без этого нет движения вперед в функциональном плане, и этим занимаются все, даже те кто заявляет, что пишет "с нуля" (т.к. он по любому использует чей-то компилятор, редактор, другую ОС для всего этого и пр.).

Т.е. взять общедоступное ядро Linux, загрузчик для него, базовый набор общедоступных системных утилит и приложений -- не зазорно, т.к. в это вложен труд многих самых разных людей, а результаты труда открыты для переиспользования.

Ядро Linux можно кастомизировать, убирая не нужное, по мнению разработчиков ОС, и добавляя нужное. Это ядро открыто и спроектировано для такого применения.

3. Можно написать свое ядро и скомбинировать его с общедоступными системными утилитами, драйверами и написанными прикладными программами. Например, так поступил Касперский, их (**(__Касперски ОС не использует ядро Linux, а разработали свое собственное ядро самостоятельно__)**).
----------------------------------------------------------------
2025-06-05 09:42:27 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

Схожесть всех ОС лишь внешне т.к. они придерживаются открытому стандарту POSIX ((// https://ru.wikipedia.org/wiki/POSIX //)). Там же по ссылке в вики будет и набор ОС, которые придерживаются стандарту POSIX.

Сам стандарт POSIX и набор системных утилит к нему были разработаны фондом свободного ПО, в те идеальные времена, когда он еще
не был поражен политикой и даже не назывался фондом (но я условно его назову фондом, как он есть сейчас и как его сейчас описывают в вики, (// https://ru.wikipedia.org/wiki/Фонд_свободного_программного_обеспечения //)).

Сначала фонд требовал, чтобы код всех программ был открыт, но это не взлетело. Тогда, фонд дал разработчикам выбор, хотите открывайте, хотите нет. И вот после этого стали появляться программы, решения и люди их делающие, со всего мира.
----------------------------------------------------------------
2025-06-05 13:34:18 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**veector**)
Если все так хорошо (примерно на уровне аспирантуры конца 80-х), то где хоть какой-то выход?
----------------------------------------------------------------
2025-06-05 16:12:31 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

(**Gudleifr**)
Для десктопов? Наверное так:

1. У домашних пользователей №1 это -- Windows. А Linux дистрибутивов много разных, но общая доля их мала. К тому же они все делят эту малую долю разрывая пользователей на разные дистрибутивы. Еще SteamOS нет-нет да поднимет голову, но это все-таки редкость.

2. У НЕ домашних пользователей то, что считается безопасным в использовании с точки зрения информационной безопасности. То, что не отключат по зарубежному щелчку. Прикладные программы мы и так пишем под эти дистрибутивы. Windows в организация постепенно убирают -- это уже факт, к этому нужно быть готовым.

Т.е. вроде как никакой безвыходной ситуации с ОС-ами и нет.

3. Про ReactOS.

Даже если принудительно Windows запретить в стране, то все на ОС на базе ядра Linux перейдут. А у ReactOS останется только специфичная область применения, где нельзя дистрибутив другой ОС установить.

Я, вообще, очень хорошо отношусь к ReactOS, но, увы, Windows оно никогда не подвинет -- масштаб не тот и (**(__нет полезной цели__)**) в глазах пользователей. Хотя, малую долю я все-таки оставлю, на случай, если Windows вообще загнется вслед за компанией майкрософт, и вот тогда, может быть... но врятли...
----------------------------------------------------------------
2025-06-05 16:20:55 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**veector**)
(""У НЕ домашних пользователей"")
Так им ОС и не нужна. Им нужны АРМ-ы, заточенные под одну задачу.
(""Даже если принудительно Windows запретить в стране"")
Все все равно будут им пользоваться. Не выкидывать же все свои игры и офисы.
(""Windows оно никогда не подвинет"")
Лучше мечтать о реинжиниринге Винды.
Есть и четвертый путь - перенос центра тяжести на самодельные контроллеры для домашних нужд.
----------------------------------------------------------------
2025-06-05 20:43:46 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Автор сайта

(""дублирование является кажущимся"")
Да нет же, совсем не кажется. Диспетчер задач и диспетчер памяти нужны во всех ОС и их можно выполнить одинаково. Может, какая-то специфика есть, но это малая доля работы. Сетевые протоколы тоже стандартизированы. FAT32 или NTFS – они одинаковы что для Linux, что для HaikuOS. Рисовать картинки на экране или шрифты тоже можно одинаково.
(""И разумный путь возможен один — полная разборка Windows "китайским способом", с созданием обслуживающей его (включая полную пересборку) экспертной системы. Сделать Винду управляемой. Чтобы на вопрос "Где взять новую Винду?" — можно было дать ответ: "Замени блоки ## на ##"

Лучше мечтать о реинжиниринге Винды"")
У нас у власти юристы и на интеллектуальную собственность они смотрят, как на священную корову. В Белоруссии же Бацька совсем не юрист, и там нет не пиетета к тем, кто накладывает санкции. А так по частям Винду можно было бы превратить в своё. Караваев переписал компилятор Киллдала до такой степени, что ни одного исходного байта не осталось. И всё — какие могут быть претензии? Не сразу компилятор стал таким, но и было оправдание: если ПО принадлежит мне, но имею право на реверс-инжениринг. Конечно, есть ещё патенты, но тут как раз юристам карты в руки.
(""ReactOS... нет полезной цели в глазах пользователей"")
Как это нет?! Есть! Сохранить инвестиции в ПО, которое работает под Виндой! Очень много предприятий, которые вложили в системы автоматизации куда больше, чем в лицензии Винды.
(""Windows в организация постепенно убирают"")
Если Вы имеете в виду государственные и окологосударственные, то может быть. Немало вакансий с «Linux, C++, Qt» связано с этим. Но в налоговой и в Социальном фонде стоит Винда. А уж про коммерческие организации тут речи вообще нет — все очень плотно сидят на Винде. Если вдруг прикроют извне Винду — то всё, северный пушной зверёк посетит всю нашу экономику. Вот поэтому этим надо заниматься, а если не хватает ресурсов, то скооперироваться с КНДР, Ираном, Кубой, Венесуэлой, Мьянмой и Китаем. Заниматься процессорами уже клюнул петух, а вот насчёт ОС юристам, видимо, не докладывали.
----------------------------------------------------------------
2025-06-06 10:42:22 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

(""(""дублирование является кажущимся"")
Да нет же, совсем не кажется."")
 
Там речь шла по большей части о переиспользовании прикладного софта.
Плюс, если делаешь ОС на базе ядра Linux, то можно переиспользовать ее системные компоненты.
Напомню, "операционной системы Linux" -- не существует. Linux -- это только ядро. Операционной системой оно становится только объемного "обвеса".
 
PS.
(""Диспетчер задач и диспетчер памяти нужны во всех ОС и их можно выполнить одинаково. Может, какая-то специфика есть, но это малая доля работы. Сетевые протоколы тоже стандартизированы. FAT32 или NTFS — они одинаковы что для Linux, что для HaikuOS. Рисовать картинки на экране или шрифты тоже можно одинаково."")
Раз вы так написали, значит вы не представляете, как глубока кроличья нора (__в реальности__), т.к. не сталкивались с этим. Но пытаться объяснить, бесполезно, когда и если столкнетесь, тогда и придет понимание. А пока пусть будет так, как вы считаете.
----------------------------------------------------------------
2025-06-06 11:13:26 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**veector**)
(""Раз вы так написали, значит вы не представляете, как глубока кроличья нора"")
Проблема в том, что Вы подвесили свою "нору" в воздухе. И в технологическом, и в образовательном смысле. Нет ни обеспеченного нашим производством "механозародыша", из которого можно было бы вырастить свою программно-аппаратную суперсистему, ни людей, которые понимают нужную для этого "эмбрио-математику". Есть только "чипы из стиралок"...
----------------------------------------------------------------
2025-06-06 11:48:34 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

(**Gudleifr**)
И какое Ваше предложение? (вместо того, чтобы взять готовое, общедоступное и адаптировать под себя, как это и делают наши разработчики отечественных ОС)
----------------------------------------------------------------
2025-06-06 11:50:16 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

Кроме ОС, есть еще более низкоуровневый компонент -- гипервизоры.
----------------------------------------------------------------
2025-06-06 11:52:43 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

Как мы собираемся все эти программно-аппаратные архитектуры догонять?
----------------------------------------------------------------
2025-06-06 11:55:34 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

https://www.cnx-software.com/2025/06/04/vortex86ex3-twin-core-x86-processor-targets-legacy-industrial-applications-running-windows-linux-dos-wince-qnx/

Rich crossbar, Virtualisation Interfaces... вот это вот всё. Как собираемся догонять и перегонять?
----------------------------------------------------------------
2025-06-06 12:09:56 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**veector**)
(""Как собираемся догонять и перегонять?"")
Единственным возможным способом - удовлетворяя насущные потребности. Автоматика нефтедобычи и газоперекачки отечественная? База данных сортов картошки и овсов на своих СУБД? Электрики/сантехники АСУчены?
----------------------------------------------------------------
2025-06-06 17:00:13 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Капиталист

[q]Единственным возможным способом — удовлетворяя насущные потребности.[/q]
План - огонь! Приступим к реализации. Вы займетесь картошкой, нефтью или к сантехникам?
----------------------------------------------------------------
2025-06-06 17:22:00 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Капиталист**)
(""Вы займетесь картошкой, нефтью или к сантехникам?"")
Разумеется, последнее. Мой форум - для технарей-самоучек.
----------------------------------------------------------------
2025-06-06 19:04:54 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Капиталист

https://www.ozon.ru/seller/gudleifr-380410/products/
Шнурочками занимаетесь?
----------------------------------------------------------------
2025-06-06 19:41:07 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Капиталист**)
(""Шнурочками занимаетесь?"")
Нет, это не мой.
----------------------------------------------------------------
2025-06-07 17:39:26 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Автор сайта

(""(**veector**): вы не представляете, как глубока кроличья нора в реальности"")
Если Вы точно знаете её глубину, то, должно быть, знаете, как с ней поступить?

В предложении (,,заменять компоненты Windows по частям и добиться со временем 100% замены,,) вижу больше реализма, чем в предложении (,,переписать весь нужный прикладной софт (и драйвера тоже)  с Windows на Linux,,). Первый вариант адекватнее как по срокам/трудозатратам, так и по деньгам. Если, конечно, рассуждать в масштабах государства, а не частных лиц. А Вы бы что предложили?
----------------------------------------------------------------
2025-06-07 21:41:57 | len-dvigatel-progressa | MihalNik

[q]Если бы программисты больше думали о быстродействии своих приложений, современные игры работали бы на самых дешёвых ноутбуках с той же скоростью, с какой они работают на настольных компьютерах за 400 тысяч рублей.[/q]
Абсолютное непонимание основ компьютерной графики.
----------------------------------------------------------------
2025-06-09 07:01:43 | len-dvigatel-progressa | Автор сайта

Кажется, слетело форматирование.
----------------------------------------------------------------
2025-06-09 22:33:11 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Бурановский дедушка

https://www.cnews.ru/news/top/2025-06-09_u_microsoft_poluchilos_sozdat(""У Microsoft получилось создать идеальную Windows. В ней нет мусорного ПО, она почти не расходует ресурсы. Просто Microsoft вырезала из этой версии Windows собственное мусорное ПО"")
Вот что надо брать для реверс-инжениринга!
----------------------------------------------------------------
2025-06-09 22:53:37 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Капиталист

[q]В предложении «заменять компоненты Windows по частям и добиться со временем 100% замены» вижу больше реализма, чем в предложении «переписать весь нужный прикладной софт (и драйвера тоже) с Windows на Linux». Первый вариант адекватнее как по срокам/трудозатратам, так и по деньгам. Если, конечно, рассуждать в масштабах государства, а не частных лиц. А Вы бы что предложили?[/q]
Использовать Linux, доработать Wine или какую-нибудь подсистему Windows написать. Новый Windows не закупать или все меньше и меньше. Постепенно переходя на открытый код.
----------------------------------------------------------------
2025-06-10 00:26:29 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

https://russian.rt.com/world/news/1490618-durov-ssha-razrabotchiki-sotrudnichestvo

[q]Власти США могут заставить любого разработчика в технологической компании тайно встроить в программу лазейку для скрытого доступа к информации, сообщил основатель мессенджера Telegram Павел Дуров.[/q]
Вот и думайте что с Windows делать.
----------------------------------------------------------------
2025-06-10 00:48:09 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""тайно встроить в программу лазейку"")
Программ без лазеек не существует. Независимо от желания разработчика и/или его заказчиков.
----------------------------------------------------------------
2025-06-10 08:10:33 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Клихальт

[b]Дуров[/b], [q]Вот и думайте что с Windows делать.[/q]
Почему Вы думаете, что это касается только Windows, а Linux нет?
----------------------------------------------------------------
2025-06-10 10:32:05 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Клихальт**)
(""Почему Вы думаете, что это касается только Windows, а Linux нет?"")
Потому что практически все, кто делают "свою операционку", просто копипастят Linux. Как они могут признать, что что-то неправильно?
----------------------------------------------------------------
2025-06-10 11:53:39 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

(**Клихальт**)
[q]Почему Вы думаете, что это касается только Windows, а Linux нет?[/q]
У Linux открытый код, можно менять на свое усмотрение, делать свой дистрибутив. Windows не дает таких возможностей.
----------------------------------------------------------------
2025-06-10 11:59:10 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""У Linux открытый код"")
Во-первых, очень немногие его читали. Во-вторых, код "серьезных" Linux (того же МСВС) закрыт.
(""Windows не дает таких возможностей"")
Вот и надо эти возможности взять.
----------------------------------------------------------------
2025-06-10 12:05:05 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

[q]Вот и надо эти возможности взять.[/q]
Каким образом?
И что предлагаешь?
----------------------------------------------------------------
2025-06-10 12:09:34 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""Каким образом?"")
Китайским. Дать каждому инфоцыгану по файлу на разборку. Призвать с пенсии пару десятков специалистов по экспертным системам, для формализации собранного.
----------------------------------------------------------------
2025-06-10 12:26:09 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

[q]Китайским. Дать каждому инфоцыгану по файлу на разборку. Призвать с пенсии пару десятков специалистов по экспертным системам, для формализации собранного.[/q]
Китайцы так делали?
Колупаться в Windows ради того, чтобы запускать игрушки не имеет смысла, если уже есть ОС с открытым кодом.
----------------------------------------------------------------
2025-06-10 12:30:02 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""Китайцы так делали?"")
Это криптографический мем. Установив на 

Колупаться в Windows ради того, чтобы запускать игрушки не имеет смысла, если уже есть ОС с открытым кодом.
----------------------------------------------------------------
2025-06-10 12:30:02 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""Китайцы так делали?"")
Это криптографический мем. Установив на 

Колупаться в Windows ради того, чтобы запускать игрушки не имеет смысла, если уже есть ОС с открытым кодом.
----------------------------------------------------------------
2025-06-10 12:32:53 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

Автор сайта опять форматирование сломал.
----------------------------------------------------------------
2025-06-10 12:33:40 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

<Сбой>

(**Дуров**)
(""Китайцы так делали?"")
Это криптографический мем. Установив на свою бытовую технику простенькие дешифраторы, китайцы могут проводить взлом шифров грубой силой.
(""Колупаться в Windows ради того, чтобы запускать игрушки"")
Именно. Ведь только это (игры и офисы) сейчас интересует практически всех пользователей.
----------------------------------------------------------------
2025-06-10 12:43:20 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

[q]Установив на свою бытовую технику простенькие дешифраторы, китайцы могут проводить взлом шифров грубой силой.[/q]
Одно дело дешифраторы в технике, другое дело люди в роли дешифраторов - себестоимость работ возрастает.
В этом случае проще свою Телеграм ОС написать.
----------------------------------------------------------------
2025-06-10 12:48:11 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""себестоимость работ возрастает"")
Это проблема военкоматов.
(""проще свою Телеграм ОС"")
На ней идут AAA игры, офисы и CAD-ы?
----------------------------------------------------------------
2025-06-10 13:00:13 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

[q]На ней идут AAA игры, офисы и CAD-ы?[/q]
Телеграм ОС с вином и закусками )
----------------------------------------------------------------
2025-06-10 13:18:07 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

Тут надо задаться вопросом, а так ли нужны эти программы под Windows? 
Может предоставить возможность разработчикам публиковать свои приложения под свою систему с закрытым кодом вместо разработки подсистемы Windows.
----------------------------------------------------------------
2025-06-10 13:29:59 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""так ли нужны эти программы под Windows"")
Ну, раз все ими пользуются, то, наверное нужны? Более того, конкурировать с ними невозможно, т.к. здесь конкуренция ведется не по полезности, а по тяжеловесности. Мол, кому нужен ваш нищебродский CAD, когда последняя AAA версия уже позволяет во время работы приветы деревенским родственникам онлайн передавать?
----------------------------------------------------------------
2025-06-10 13:40:55 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

[q]Ну, раз все ими пользуются, то, наверное нужны?[/q] так надо было подсветить (**под Windows**).

[q]Более того, конкурировать с ними невозможно, т.к. здесь конкуренция ведется не по полезности, а по тяжеловесности. Мол, кому нужен ваш нищебродский CAD, когда последняя AAA версия уже позволяет во время работы приветы деревенским родственникам онлайн передавать?[/q]
Зачем конкурировать самому с собой? 
Предоставь разработчику инструменты чтобы он выложил свой продукт для твоей ОС и он это сделает. 
Почему Windows не в каждом кармане и Wine там нет?
----------------------------------------------------------------
2025-06-10 14:08:37 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""Предоставь разработчику инструменты чтобы он выложил свой продукт"")
И этот продукт будет никому не нужен. Ведь есть "правильный" - под Windows и писаный "там".
----------------------------------------------------------------
2025-06-10 14:36:04 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

[q]И этот продукт будет никому не нужен. Ведь есть "правильный" — под Windows и писаный "там".[/q]
Для начала, в качестве создателя ОС может выступать уже тот у кого есть свой продукт или создатель ОС заручится поддержкой тех у кого есть ПО, которые согласятся написать свой софт для твоей ОС.
Еще такой момент, есть облачные решения, а они не особо зависят от ОС, т.е. чтобы написать ПО для твоей ОС будет не сложным.
----------------------------------------------------------------
2025-06-10 14:41:48 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""Для начала, в качестве создателя ОС может выступать уже тот у кого есть свой продукт"")
Создавать ОС можно только всем миром. Ведь главное качество ОС - учет общих пожеланий.
(""согласятся написать свой софт для твоей ОС"")
Что лишит их надежд хоть на какую-то популярность.
(""облачные решения, а они не особо зависят от ОС"")
Т.е. своя ОС вообще не нужна?
----------------------------------------------------------------
2025-06-10 15:05:30 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

[q]Создавать ОС можно только всем миром. Ведь главное качество ОС — учет общих пожеланий.[/q]
Windows создавали не всем миром. Есть Linux.
[q]Что лишит их надежд хоть на какую-то популярность.[/q]
Нет.
[q]Т.е. своя ОС вообще не нужна?[/q]
Это все равно что спросить нужен ли айос, андроид.
----------------------------------------------------------------
2025-06-10 15:22:02 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""Windows создавали не всем миром"")
С учетом заимствований, именно всем миром. Причем, остальной мир согласился, ибо монополия.
(""Нет"")
Аргументы?
(""Это все равно что"")
Сами написали.
----------------------------------------------------------------
2025-06-10 15:51:30 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

[q]Причем, остальной мир согласился, ибо монополия.[/q]Статус монополии пошатнулся с провалом Windows Phone.
----------------------------------------------------------------
2025-06-10 16:09:20 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""Статус монополии пошатнулся с провалом Windows Phone"")
Это относится к временам создания Windows, которые мы обсуждаем?
----------------------------------------------------------------
2025-06-10 23:50:19 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

Винда может накрыться если андроид(и т.д.) займет ее территорию.
https://androidinsider.ru/polezno-znat/kak-prevratit-android-smartfon-v-kompyuter-dlya-raboty.html
----------------------------------------------------------------
2025-06-11 00:09:29 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""Винда может накрыться если андроид(и т.д.) займет её территорию"")
Не, "если", а "эквивалентно". Но есть ли к этому предпосылки? "Переход на андроид" означает просто конец компьютеров. Каждый пользователь не просто самоизолируется в своей камере человейника, но и откажется от информационного обмена с внешним миром. Обмен будет заменен "ИИ", выдающим ровно ту пропорцию "очевидного" и "парадоксального", что потребна организму.
----------------------------------------------------------------
2025-06-11 11:29:30 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

[q]"Переход на андроид" означает просто конец компьютеров.[/q] 
Программа на "тонком" компьютере будет почти всегда уступать программе на "толстом" компьютере(сервере).

[q]Каждый пользователь не просто самоизолируется в своей камере человейника, но и откажется от информационного обмена с внешним миром. Обмен будет заменен "ИИ", выдающим ровно ту пропорцию "очевидного" и "парадоксального", что потребна организму.[/q]
ИИ реализует стратегию - разделяй и властвуй. :)
https://ru.wikipedia.org/wiki/ON_%D0%B8_%D0%9E%D0%BD%D0%B0
----------------------------------------------------------------
2025-06-12 16:21:12 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""будет почти всегда уступать...
...
ИИ реализует стратегию..."")
В этом и проблема: мы обсуждаем решения проблемы, которую никто не поставил.
----------------------------------------------------------------
2025-06-12 17:04:40 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Клихальт

[b]Дуров]/b],[q]Программа на "тонком" компьютере будет почти всегда уступать программе на "толстом" компьютере(сервере).[/q]
Уступать в чём именно? В скорости, в функциональности, или в чём-либо другом?
----------------------------------------------------------------
2025-06-12 17:30:26 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Невежливый лось

В размере дисплея. Острота зрения у человека ограничена (лимитирована).
Только нейроинтерфейс спасёт (а это не в ближайшие 100 лет)
----------------------------------------------------------------
2025-06-13 16:21:49 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Клихальт**)
(""Уступать в чём именно?"")
В IT-привлекательности. Ведь, мы живем в мире полной бесполезности IT. Вот и приходится придумывать искусственные критерии сравнения продуктов.
----------------------------------------------------------------
2025-06-13 20:35:03 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

(**Клихальт**)
Я продолжил мысль Gudleifr:
[q]"Переход на Андроид" означает просто конец компьютеров.[/q]
[q]Обмен будет заменен "ИИ"[/q]
Он как я думаю предполагает, что андроид это своего рода терминал которому не нужны вычисления, все данные обрабатываются на сервере.
(**Gudleifr**)
[q]В этом и проблема: мы обсуждаем решения проблемы, которую никто не поставил.[/q]
Ну поставь, в чем проблема?
[q]Ведь, мы живем в мире полной бесполезности IT.[/q]
Аргументы?
----------------------------------------------------------------
2025-06-13 21:56:17 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""Ну поставь, в чем проблема?"")
Я не думаю, что Вам нужны мои проблемы.
(""Аргументы?"")
Представьте себе хорошо устроившегося человека XIX века, помещика какого-нибудь, запивающего хорошим вином дичь, сидя у камина. Развлекающегося на охотах, волочащегося за соседкой-графиней, переписывающегося с Толстым, гоняющего дворовых девок, гордящегося военными успехами...
Что добавили успехи IT к этим простым деревенским радостям? "Заявки на еду принимаются по телефону, а выполняются по телевизору"?
Или эти успехи сдвинули вперед технику и науку? Что, АМС с современным ПО долетают до Луны надежнее, чем те, древние-чугуниевые? Процент болезней, поддающихся лечению вырос?
Тут недавно один из присутствующих отписался: "Яндекс-карты с пробками, Авито, СДЭК, tutu.ru, Яндекс, банковские приложения, госуслуги, система бесконтактной оплаты платных дорог"... Простые виртуальные радости бесполезного человека.
Короче... Если от этой фигни есть польза человеку, человек может делать больше и полезнее, жизнь всех должна становиться лучше. Вы это где видите?
----------------------------------------------------------------
2025-06-13 22:32:50 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

[q]Представьте себе хорошо устроившегося человека XIX века, помещика какого-нибудь, [/q]
Можно представить крепостного. Там другая картинка.
[q]Что добавили успехи IT к этим простым деревенским радостям?[/q]
Достаточно большой промежуток с 19 века. 
[q]Яндекс, банковские приложения, госуслуги, система бесконтактной оплаты платных дорог"... Простые виртуальные радости бесполезного человека.
Короче... Если от этой фигни есть польза человеку, человек может делать больше и полезнее, жизнь всех должна становиться лучше. Вы это где видите?[/q]
Захочешь увидеть - увидишь. Кроме IT есть много других факторов влияющих на жизнь. 
Ты переносишь свое внутреннее состояние на внешнее.
Если "эта фигня" такая бесполезная зачем тогда ты обсуждаешь айтишечку? 
Поговори о виноделии, выращивании помидоров, о простых деревенских радостях, на других сайтах, ты же здесь пишешь об объекте который тебя раздражает.
----------------------------------------------------------------
2025-06-13 22:38:38 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""Можно представить крепостного"")
Но не нужно.
(""Захочешь увидеть — увидишь"")
Т.е. Вы не можете.
(""зачем тогда ты обсуждаешь айтишечку?"")
Я ее не обсуждаю. Совсем.
----------------------------------------------------------------
2025-06-13 22:42:38 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

[q]Я её не обсуждаю. Совсем.[/q]
Так а что было ранее?
----------------------------------------------------------------
2025-06-13 22:52:04 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""Так а что было ранее?"")
Это был разговор об ОС.
----------------------------------------------------------------
2025-06-13 23:04:02 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

[q]Это был разговор об ОС.[/q]
Поговорим о пчелах.
----------------------------------------------------------------
2025-06-14 10:47:58 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Клихальт

[b]Дуров[/b], [q]Если "эта фигня" такая бесполезная зачем тогда ты обсуждаешь айтишечку?[/q]Извините за резкость, но "айтишечка" в детском саду, в песочнице, а тут вроде бы взрослые люди общаются.
----------------------------------------------------------------
2025-06-14 11:26:02 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

[q]Извините за резкость, но "айтишечка" в детском саду, в песочнице, а тут вроде бы взрослые люди общаются.[/q]
Возможно, здесь первый раз услышал.
https://ru.wikipedia.org/wiki/%D0%90%D0%B9%D0%A2%D0%B8%D0%91%D0%BE%D1%80%D0%BE%D0%B4%D0%B0
----------------------------------------------------------------
2025-06-14 11:31:51 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""Возможно, здесь первый раз услышал"")
Вы бы, батенька, книжку, что ли почитали... Оно полезнее.
----------------------------------------------------------------
2025-06-14 11:36:21 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

[q]Вы бы, батенька, книжку, что ли почитали... Оно полезнее.[/q]
Я читал и читаю, но ты так разочаровался в IT, что я задумываюсь нужно ли читать много книжек и не лучше бы больше  программировать.
----------------------------------------------------------------
2025-06-14 11:38:55 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""не лучше бы больше программировать"")
Следствие 23: Сначала научись что-то делать и только потом учись это программировать.
----------------------------------------------------------------
2025-06-14 11:43:28 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

[q]Следствие 23: Сначала научись что-то делать и только потом учись это программировать.[/q]
Теперь мы знаем почему Gudleifr не может добраться до программирования.
----------------------------------------------------------------
2025-06-14 14:01:56 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Клихальт

[b]Дуров[/b], [q]https://ru.wikipedia.org/wiki/%D0%90%D0%B9%D0%A2%D0%B8%D0%91%D0%BE%D1%80%D0%BE%D0%B4%D0%B0[/q]Ну раз Вы так любите читать и ссылаться на википедию, то поищите и прочитайте там статью про "инфантилизм", думаю, Вам будет полезно.
----------------------------------------------------------------
2025-06-14 14:26:06 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Клихальт

(**Клихальт**)
[q]Ну раз Вы так любите читать и ссылаться на википедию, то поищите и прочитайте там статью про "инфантилизм", думаю, Вам будет полезно.[/q]
Мне незачем эту статью читать. А ты сам лезешь в детскую песочницу. Что вас не устроило? Слово айтишечка? Грамманаци?
----------------------------------------------------------------
2025-06-14 14:32:33 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""Мне незачем эту статью читать."")
Вот тут Вы точно ошибаетесь.
----------------------------------------------------------------
2025-06-14 14:35:28 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

[q]Вот тут Вы точно ошибаетесь.[/q]
Поясните.
----------------------------------------------------------------
2025-06-14 14:42:06 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""Поясните."")
Если статью не поймете, попробуйте советские книжки про подростковые проблемы.
----------------------------------------------------------------
2025-06-14 14:50:35 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

[q]Если статью не поймете, попробуйте советские книжки про подростковые проблемы.[/q]
Пояснить не можете. Уходите от ответа. Стесняюсь спросить, а какие книжки Gudleifr читал чтобы справится со своими подросковыми проблемами? Прищи?
----------------------------------------------------------------
2025-06-14 14:54:02 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""Пояснить не можете."")
Ну, если я напишу, что Вы "мальчишка с грязной попкой", это будет Вам обидно. А в книжке Вы дойдете до этого сами, и обижаться будет не на кого.
----------------------------------------------------------------
2025-06-14 14:56:42 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

[q]Ну, если я напишу, что Вы "мальчишка с грязной попкой", это будет Вам обидно. А в книжке Вы дойдете до этого сами, и обижаться будет не на кого.[/q]
Нисколько, смешно :) У кого что болит :)
----------------------------------------------------------------
2025-06-14 15:01:51 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""Нисколько, смешно"")
Что смешно? Я еще не написал, а Вы уже начали оправдываться...
----------------------------------------------------------------
2025-06-14 15:03:17 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Мальчишка с грязной попкой

Ну простите :)
----------------------------------------------------------------
2025-06-14 15:06:08 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""Ну простите"")
А теперь также уберите за собой то, что "напрограммировали".
----------------------------------------------------------------
2025-06-14 15:10:55 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Клихальт

[b]Дуров[/b], [q]Мне незачем эту статью читать.[/q]По возрасту оно, конечно, Вам такое читать ещё рановато, но для общего развития не помешает.[q] А ты сам лезешь в детскую песочницу.[/q]Детский сад, трусы на лямках. Извините тогда, что помешал вам пускать слюни, возиться в песочке и лепить куличики в вашей "детской песочнице". :-D
----------------------------------------------------------------
2025-06-14 15:11:00 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

[q]А теперь также уберите за собой то, что "напрограммировали".[/q]
Что например?
----------------------------------------------------------------
2025-06-14 15:13:33 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""Что например?"")
Начните, с того что еще не дописали. Потом - по возможности.
----------------------------------------------------------------
2025-06-14 15:14:51 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

(**Клихальт**)
[q]Детский сад, трусы на лямках.[/q]
Если о ты думаешь о том является слово детским или взрослым, значит ты еще не взрослый.
----------------------------------------------------------------
2025-06-14 15:22:53 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

(**Gudleifr**)
[q]Начните, с того что ещё не дописали. Потом — по возможности.[/q]
Не логично, если я не дописал, то имеет смысл дописать.
Но этот совет от вас какой-то неопределенный, непрактичный, бессмысленный.
----------------------------------------------------------------
2025-06-14 15:36:16 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
(""имеет смысл дописать... неопределенный, непрактичный, бессмысленный"")
Аргументы?
----------------------------------------------------------------
2025-06-14 15:48:28 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

[q]Аргументы?[/q]
Что дать тебе понять, что твой совет такой какой я описал, попробуй последовать своему совету:
[q]Начните, с того что ещё не дописали. Потом — по возможности.[/q]
Что бы ты сделал, конкретно следуя своему совету?
Твой совет из области - сделай хорошо, а потом еще лучше.
Но это бессмысленный совет, в нем нет конкретики.
Такие советы я и тебе могу выдавать.
----------------------------------------------------------------
2025-06-14 15:55:10 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Дуров**)
Я у Вас спрашивал аргументы, а не детские переводы стрелок.
----------------------------------------------------------------
2025-06-14 16:08:09 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Дуров

(**Gudleifr**)
[q]а не детские переводы стрелок.[/q]
Вчитайся что написал.
----------------------------------------------------------------
2025-06-14 18:21:09 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Невежливый лось

[q]Комментарий скрыт[/q]
Ура!
----------------------------------------------------------------
2025-06-14 18:34:03 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(""Ура!"")
Если он бы еще и попал...
----------------------------------------------------------------
2025-06-16 10:31:46 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

(""(""(**veector:**) вы не представляете, как глубока кроличья нора в реальности"")
Если Вы точно знаете её глубину, то, должно быть, знаете, как с ней поступить?

В предложении «заменять компоненты Windows по частям и добиться со временем 100% замены» вижу больше реализма, чем в предложении «переписать весь нужный прикладной софт (и драйвера тоже) с Windows на Linux». Первый вариант адекватнее как по срокам/трудозатратам, так и по деньгам. Если, конечно, рассуждать в масштабах государства, а не частных лиц."")

Раньше, когда Windows доминировала во всех сферах, включая встроенный софт (Win CE, Win Embedded), да, было проще написать ReactOS, чем переписывать всё, о чем вы написали.

Но, с тех пор, времена сильно изменились. По моему мнению, в основном, (__(**закрытость Win и подавление других**)__), привели к тому, что много людей выбрали другие ОС, дистрибутивы на базе Linux, и создали для них очень большое количество программного обеспечения.

Т.е. появились люди, программисты, которые могут и делают софт НЕ для Win.

Переписыванием уже никого не напугать - проще переписать офис, беря (__готовые средства разработки (GNU Compiler Collection - GCC), множество всего готового и свободно лежащего __), чем делать свои ОС и пытаться убедить всех, что это заменитель Win и Lin.

В итоге, получилось, что на момент санкций, с точки зрения государства и его процессов, зависимость от Win оказалась не такой уж и большой. Это позволило появиться Российским операционным системам и дистрибутивам, на базе (__существующего свободного ПО__): и ядра Linux, и библиотек, и драйверов, и большого количества полезного софта и прикладных программ. Каждый Российский дистрибутив добавил своей специфики в зависимости от сферы применения, которые пока не пересекаются и не вызывают конфликта интересов.

Т.е. как встроенное и коробочное решение, Linux - взлетел и это факт.

А что же домашние пользователи. Обратная сторона свободного ПО - кто во что горазд, отсюда несовместимость программ на глобальном уровне. Причем прогресса в совместимости, как не было 20 лет назад, так и нет сейчас.
Поэтому, на сколько Linux удобен во встраиваемых устройствах (телевизоры, телефоны, колонки, камеры и т.п.) и в коробочных решениях для компаний и крупного бизнеса (например, у РЭДОС не только ОС, но и офис, и документооборот, и СУБД и т.д.) - на столько же он, Linux, (__НЕ удобен для домашних компьютеров__), т.к. там чуть шаг в строну от "коробки", так сам возись с компиляцией и программированием.

Дистрибутивы на базе Linux стараются это преодолеть (FlatPack, Docker...), но глобальной несовместимости это не решает. На этом пока Win и держится.

Суммируем:

1. ReactOS не поспевает за Win и никогда не поспеет, нет совместимости прложений, как в Win - так чем это лучше дистрибутивов на базе Linux? Ответ - ни чем.
2. Во втсроенном софте Win уже не осталось, а, например, DOS все-еще встречается.
3. Windows для домашних пользователей - прост и удобен, там всё работает и всё совместимо. Если не работает, "скачай файл, замени и все заработает". Не работает "серверная сетевая карта" - незачем дома серверная, возьми бытовую. Т.е. Windows для домохозяек - до сих пор актуальный и выигрышный подход. Даже Linux не может с этим подходом совладать, т.к. у него другой подход (а если Linux смети подход, то отвалятся встроенные и коробочные решения).
 
Где тут место ReactOS? При всем уважении к труду тех, кто пишет ReactOS и делает из нее конфетку, но ответ пока - практически ни где.
 
 
(""А Вы бы что предложили?"")
1. В ближайшей перспективе и на долго - делать портируемый прикладной софт: для Linux и Windows.
2. Как только Linux станет закрываться и ставить барьеры (в виде исключения разработчиков) - вот тут настанет такой же момент, как был с Win - можно предложить и другую свободную ОС, и другие средства разработки, и, возможно, бинарную совместимость в виде RISC-V. Но, пока это так, больше фантазия.

Собственно, теперь к вам вопрос: где в этом глобальном процессе изменений место вашего компилятора?

PS. Это мое личное мнение, никому его не навязываю. И прошу прощение за стену текста, ужимал как мог...
----------------------------------------------------------------
2025-06-16 13:30:59 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**veector**)
(""Суммируем:"")
Все правильно, но это уничтожает само понятие ОС. "Корни" приложений настолько глубоко уходят и так сильно переплетаются, что ОС превращается просто в акциз, как старые майкрософтовские наклейки на дисках "совместим с Win95" и "совместим с VS Office". И, вместо совместимости на уровне системных процессов и хранилищ, мы имеем самодельные ОС и ОС-подобные заглушки для "переносимых программ".
----------------------------------------------------------------
2025-06-17 02:38:52 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Автор сайта

(""Раньше, когда Windows доминировала во всех сферах"")
Она и сейчас доминирует.
(""По данным сервиса Statcounter, на май 2025 года доля операционных систем в России следующая:
Windows — 86,68%;
Unknown — 4,76%;
OS X — 3,47%;
Linux — 3,1%;
macOS — 1,97%;
Chrome OS — 0,01%."")
При этом доля Windows в 86,68% в России сильно превышает среднемировую долю — 70,31%.
(""Но, с тех пор, времена сильно изменились. По моему мнению,... много людей выбрали другие ОС, дистрибутивы на базе Linux, и создали для них очень большое количество программного обеспечения"")
Цифра в 86,68% говорит о том, что изменилось не сильно. Конечно, статистика Statcounter имеет погрешности. Например, она не учитывает компьютеры силовых ведомств и критической инфраструктуры, которые работают явно не под Windows. Однако отечественная экономика в массе своей использует Windows, потому что платная Windows обходится дешевле в эксплуатации, чем вроде как бесплатный Linux.

Возьмём (,,наше всё,,) -- 1С. Если бы она нормально работала под Linux, об этом нам бы говорили из каждого утюга. Но утюги молчат, значит на этом поприще успехи скромны.
(""Переписыванием уже никого не напугать — проще переписать офис"")
Как будто офисом всё и ограничивается. Когда вам на кассе в магазине сканируют товар и печатают чек -- разве это делают в Word или Excel? Ну и перед переписыванием офиса неплохо бы переписать 1С.
(""с точки зрения государства и его процессов, зависимость от Win оказалась не такой уж и большой"")
Эта зависимость не обнаруживается по причине доброй воли Microsoft. Если бы Microsoft отрубила бы Windows, то тогда бы была ясна степень зависимости.
(""ReactOS не поспевает за Win"")
Если бы в неё наше государство вкладывало хотя бы половину от того, что вкладывает в Linux, тогда бы их можно было как-то сравнивать.
(""Во встроенном софте Win уже не осталось"")
Ваши сведения недостоверны. Мои сведения говорят, что Windows Embedded ещё не искоренили.
(""Т.е. Windows для домохозяек"")
Почему генеральных директоров, главных экономистов и бухгалтеров и прочих сотрудников, у которых (**на рабочих местах у работодателя**), Вы считаете домохозяйками? На большей части предприятий все пользователи до единого работают на Windows. Linux стоит только на некоторых (не всех) серверах. Но сервера -- они не пользовательские компьютеры.
(""Собственно, теперь к вам вопрос: где в этом глобальном процессе изменений место вашего компилятора?"")
Поскольку язык заявлен как системный с акцентом на безопасность и скорость, то на нём, по идее, будет уместно переписывать Windows или Linux. Ну и писать другое ПО, как системное, так и прикладное.
----------------------------------------------------------------
2025-06-17 10:53:47 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Автор сайта**)
(""системный с акцентом на безопасность и скорость"")
Я против такого языка по трем причинам:
1) Мы живем в эпоху супержелеза и тупого ПО. Значит, "главный язык" должен больше описывать аппаратную часть и порождаемые ею ограничения/возможности.
2) В условиях необходимого пиратства, язык должен содержать средстства поддержки реинжиниринга (описания внепрограммных преобразований семантических сетей). Очевидно, воозможности пп.1 и 2 должны иметь возможность саморазвития.
3) Очевидно, системный язык не может быть безопасным, т.к. не может быть безопасным ядро ОС. Не могут быть безопасными средства безопасности. Сам себя за волосы не поднимешь. Их надо вынести в средства п.2.
P.S. Если будете спрашивать, а почему я сам этого не делаю, то делаю. У себя на форуме. (Сейчас закрыт роскомнадзором, входить через прокси или Тор).
----------------------------------------------------------------
2025-06-17 12:29:23 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Невежливый лось

[q]Сейчас закрыт роскомнадзором[/q]
Первый раз благодарен Роскомнадзору
----------------------------------------------------------------
2025-06-17 13:41:58 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Ильдар

(""У себя на форуме. Сейчас закрыт Роскомнадзором"") Господин Gudleifr иноагент?
----------------------------------------------------------------
2025-06-17 13:49:33 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(""Господин Gudleifr иноагент?"")
Нет, накрыло всю площадку.
----------------------------------------------------------------
2025-06-17 13:56:45 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(""Господин Gudleifr иноагент?"")
Нет, накрыло всю площадку.
----------------------------------------------------------------
2025-06-17 14:11:25 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Вова

[q]Нет, накрыло всю площадку.[/q]
Не сходится, forum2x2.ru работает. Хулиган!
----------------------------------------------------------------
2025-06-17 14:19:44 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Вова**)
(""forum2x2.ru работает"")
Значит, и мой форум Вам виден.
----------------------------------------------------------------
2025-06-17 14:30:33 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Автор сайта

(""Господин Gudleifr иноагент?"")
Павел Андреевич, вы шпион? © (,,Адъютант его превосходительства,,)
(""Очевидно, системный язык не может быть безопасным, т.к. не может быть безопасным ядро ОС. Не могут быть безопасными средства безопасности"")
Совершенно очевидно, что средства, делающие язык небезопасным, не должны быть предметами повседневного обихода программиста. Чтобы уберечь от соблазна использовать опасные возможности, эти возможности должны быть вынесены в специальные библиотеки, доступ к которым -- только по специальным директивам, чтобы все коллеги и начальники видели это и ты бы объяснял им, зачем тебе это потребовалось. Чтобы не использовали (++void*++) или нулевые указатели просто потому, что так захотелось. Понятно, что прописать по конкретному адресу в памяти адрес обработчика прерываний иногда нужно, но даже в ядре ОС не часто поступают (,,против правил,,).
(""Я против такого языка"")
То есть Windows, Linux и ОС Касперского продолжаем писать на Си? Но ведь можно наложить на язык вполне разумные ограничения. А то ведь продолжают делать указатели нулевыми, чтобы просигнализировать об ошибке или особой ситуации. Но ведь можно же сигнализировать безопасным способом, без присвоения адресу незаконного значения.
(""язык должен содержать средства поддержки реинжиниринга ... иметь возможность саморазвития"")
Почти все языки имеют как средства саморазвития, так и ограничения по этому развитию.
("""главный язык" должен больше описывать аппаратную часть и порождаемые ею ограничения/возможности"")
Когда-то мне бухгалтерия казалась страшно сложным делом. Но однажды меня просветили: всё что есть в бухгалтерии, сводится к двойной записи: с одной статьи что-то списывается, на другую записывается. И оказалось, что всё элементарно. И когда бухгалтеры говорят (,,ой как сложно тут всё у нас,,), я им напоминаю про двойную запись и они замолкают. Вот и в программировании железа (да и многого другого) важно выделить недетерминированность и побочный эффект. Или сочетание и того, и другого, либо отсутствие и того, и другого. Это, так сказать, смысловая декомпозиция, которая даёт возможность свести сложные проблемы к нескольким простым вещам.
----------------------------------------------------------------
2025-06-17 14:43:54 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Невежливый лось

[q]И когда бухгалтеры говорят «ой как сложно тут всё у нас», я им напоминаю про двойную запись и они замолкают.[/q]
Там у них 20 книжек ПБУ (Положения по бухгалтерскому учёту) + гайды по их применению. И всё постоянно обновляется.
А замолкают потому что понимают уровень и характер собеседника.
----------------------------------------------------------------
2025-06-17 14:48:19 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Автор сайта**)
(""Совершенно очевидно, что средства, делающие язык небезопасным, не должны быть предметами повседневного обихода программиста."")
"В повседневной жизни" программист редко лезет в опасные места. Зачем его защищать там, где безопасно?
(""Почти все языки имеют как средства саморазвития, так и ограничения по этому развитию"")
А сейчас нужны средства саморазвития средств саморазвития.
Как известно, самой важной частью дизассемблера IDA являются базы хранения кода/данных. Допустим, появляется новый процессор, который требует изменения не просто данных, но самой сттруктуры этих баз. Разумеется мы сможем внести в язык IDA необходимые правки. Но сможем ли мы описать эти правки на этом же языке?
----------------------------------------------------------------
2025-06-17 16:17:25 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Boвa

[q]Разумеется мы сможем внести в язык IDA необходимые правки. Но сможем ли мы описать эти правки на этом же языке?[/q]
Используйте Forth.
----------------------------------------------------------------
2025-06-17 19:44:37 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Борис К.

1. WinAPI - вещь ни хрена не стабильная. Недавно переводил свой же проект двадцатилетней давности с XP на wine. Пришлось именно частично переписывать.

2. Для прикладного программирования разница между Виндой и Никсами уже несущественна: лучшая интерфейсная библиотека - Qt - кроссплатформенная.

3. Над API операционки появилась жирная прокладка: C++ и Qt. И проблемы здесь ровно те же, что и с чужими операционками. Своё нужно.
----------------------------------------------------------------
2025-06-17 19:54:00 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Борис К.**)          #189 
(""появилась жирная прокладка: C++ и Qt"")
К сожалению, с появлением этой прокладки, программирование перестало быть полезным. Вместо утомительного ручного труда получили столь же утомительное программирование.
----------------------------------------------------------------
2025-06-18 16:47:11 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

(**Автор сайта**)
(""Раньше, когда Windows доминировала во всех сферах (""Она и сейчас доминирует."")"")
Давайте взглянем вот так, (__во всех сферах__):
(.. https://gs.statcounter.com/os-market-share/all/russian-federation ..)
Причем, помним, что "Android" это Linux.
К тому же, данная статистика не учитывает роутеры, телевизоры (без браузеров), шлагбаумы, вендинговые автоматы, рекламные щиты и т.д. и т.п.
 
 
(""Возьмём «наше всё» — 1С. Если бы она нормально работала под Linux, об этом нам бы говорили из каждого утюга. Но утюги молчат, значит на этом поприще успехи скромны."")
1С частная компания, как и все, частники никогда не станут делать и поддерживать Linux без обозримой в дальнейшем финансовой выгоды.
1С занимается интеграцией с Linux уже несколько лет и на текущий момент у них вполне рабочее решение, т.е. все во время, тогда когда надо:
(.. https://v8.1c.ru/platforma/mnogoplatformennost/ ..)
Почему не кричат об этом из каждого утюга, предположу, что это пока имеет большие издержки, т.к. не всё идет гладко (но это не точно, а лишь мое личное мнение):
(.. https://habr.com/ru/articles/709308/ ..)
 
 
(""Почему генеральных директоров, главных экономистов и бухгалтеров и прочих сотрудников, у которых на рабочих местах у работодателя стоит Windows, Вы считаете домохозяйками?"")
Каюсь, это профессиональная деформация. Под "домохозяйками", конечно, всегда понимаются обычные люди, профессионалы самых разных профессий - директоры, врачи, водители, электрики, сантехники, менеджеры, наши замечательные военные, все, кто не связан с ай ти и для кого слово "файл" означает прозрачную папочку для бумаг, а "файловый дескриптор" это что-то неприличное.
 
 
(""Но ведь можно же сигнализировать безопасным способом, без присвоения адресу незаконного значения."")
Я вам как программист программисту скажу. Адрес - это номер байта в адресном пространстве процессора, все значения адреса - законны. Программистам часто надо обозначить "отсутствие" значения, и самый ходовой прием - выбрать одно (**магическое значение**), обычно в начале или в конце диапазона возможных значений, и использовать его в программе как отсутствие значения.
0 - он же NULL, он же nil, применяется очень часто, но используют не только лишь ноль:
(.. https://en.wikipedia.org/wiki/Magic_number_(programming) ..)
----------------------------------------------------------------
2025-06-19 12:09:29 | es-evm-eto-izmena-trusost-i-obman | Антон Самохин

Аргументация автора не совсем корректная.   Некоторые  цифры непонятно откуда взял. В СССР насчитал всего 1500 программистов, а в одной IBM 127 000. При этом в штате IBM  к 1970 году числилось 300 000. То есть явно автор посчитал программистов неправильно. Но на эту цифру диспаритета он непрерывно ссылается в качестве аргумента перехода на IBM360.

 Но скорее всего он посчитал системных программистов в СССР, а в число программистов в IBM включил всех прикладных, включая со стороны,  занятых в разработке библиотек на Фортране. 

В качестве железобетонного  аргумента он приводит историю с индустриализацией в СССР, когда жизненно необходимо для страны было ускоренное внедрение передовых западных технологий, но не уточняет важный аспект:  американские фирмы строили заводы и перевозили их в СССР официально, официально же готовили кадры для работы на них и сопровождали процесс запуска и эксплуатации заводов в СССР. 

В случае же с IBM360, системного и прикладного программного обеспечение все внедрение носило неофициальный характер со всеми правовыми последствиями и проблемами сопровождения. 

Да были проблемы разножопицы в парке отечественных ЭВМ, но опять же не уточняется, что именно из конкуренции идей и подходов рождается новое. Тот же Apple вышел  из гаража. Microsoft  аналогично. И именно конкуренция на рынке тех же несовместимых между собой процессоров Intel, Motorola и ПО для них позволило создать то, что сейчас имеем. 

Сам подход копирования и централизации оказался в условиях острой конкуренции новых технологий и подходов совершенно неправильным. Потому что всегда выступаешь в роли аутсайдера и догоняющего.
----------------------------------------------------------------
2025-06-19 14:50:42 | es-evm-eto-izmena-trusost-i-obman | Невежливый Лось

Каждый видит свою причину.
Как, например, насчёт того, что надо было просто количество программистов кратно увеличить (но централизацию оставить).
А может быть всё программистки были женщинами (смотри фото), и причина именно в этом (бабы дело любое провалят)?
----------------------------------------------------------------
2025-06-19 22:34:10 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Сисадмин со стажем

Одноэсники сильно не рекомендуют переходит на Линукс. Говорят, что будет больно. Если есть возможность, то лучше остаться на Винде. А те одноэсники, которые дорабатывают 1С под нас, делают это при условии, что всё будет под Виндой. Иначе ищите других разработчиков.
----------------------------------------------------------------
2025-06-20 01:00:37 | kompilyator | Бурановский дедушка

https://www.securitylab.ru/news/560030.php:
(""TPDE: Немецкие студенты просто взяли и ускорили компиляцию в 20 раз"")
Заголовок громкий, но рассмотрение деталей сдувает сенсацию. Ускорили не всю компиляцию, а только генерацию кода. И не все варианты генерации, а из  LLVM IR, и сравнение делается только с  LLVM Clang.
(""TPDE, инструмент для быстрой компиляции кода, который способен ускорить сборку для архитектур x86_64 и AArch64 в 10–20 раз по сравнению с LLVM Clang на базовом уровне оптимизации -O0. Новый backend-компилятор ориентирован на задачи с минимальной задержкой — например, для JIT-сборки или быстрой отладки без оптимизаций. TPDE привлекателен для JIT-систем, где важны скорость и предсказуемость сборки.

TPDE не конкурирует с LLVM на уровнях -O2 или -O3, где активны продвинутые оптимизации. Его задача — быстрое получение рабочего кода с минимальной задержкой, например, при частой перекомпиляции в ходе отладки или в средах с ограниченными ресурсами."")
https://arxiv.org/abs/2505.22610:
("" TPDE выполняет один проход анализа, а затем выполняет компиляцию всего за один проход, объединяя выбор инструкций, распределение регистров и кодирование инструкций. Новый бэкенд для LLVM ориентирован на x86-64 и AArch64. Результаты производительности на SPECint 2017 показывают, что компиляция LLVM-IR в 8--24 раза быстрее, чем LLVM -O0, при этом производительность во время выполнения -- на одном уровне."")
----------------------------------------------------------------
2025-06-20 01:52:55 | es-evm-eto-izmena-trusost-i-obman | Автор сайта

(""Некоторые цифры непонятно откуда взял"")
Поскольку у меня не было собственных цифр, то я их взял из открытых источников, которые есть в сети. В каких-то архивах или библиотеках я не был. Поскольку не было целей написать энциклопедическую статью, то ссылок на источники я ставил мало. Цифр, как видите мало: одни о программистах в СССР, другие о работниках в IBM. (**Но других цифр не было!**) Мне их никто не готов предоставить. Поэтому привёл их для того, чтобы сопоставить уровни и увидеть разницу, которая сильно заметна.
(""В случае же с IBM/360, системного и прикладного программного обеспечение все внедрение носило неофициальный характер со всеми правовыми последствиями и проблемами сопровождения"")
Правовых последствий не было и не могло быть. Даже в Соединённых Штатах авторское право было тогда в зачаточном состоянии. IBM даже не пыталось подавать на нас в суд. Они так же не подавали в суд как на ICL, так и на Siemens, которые тоже у них скопировали. И IBM, и ICL предлагали СССР сотрудничество. Но для экономии средств решили обойтись без них.
(""именно из конкуренции идей и подходов рождается новое"")
Оно рождалось, не смотря на централизованную экономику. Ярким примером была та же (,,Сетунь,,). Просто оно не побеждало. Виноват в этом кадровый голод в том числе.
(""Тот же Apple вышел из гаража."")
(,,Сетунь,,) тоже почти подпольно была создана.
(""Сам подход копирования и централизации оказался в условиях острой конкуренции новых технологий и подходов совершенно неправильным"")
Если бы Вы произнесли фразу о неправильности централизации именно в то время, то пополнили бы число диссидентов. Вы же замахиваетесь на святое святых — плановую экономику!
(""всегда выступаешь в роли аутсайдера и догоняющего"")
Всё зависит от того, как дело поставлено. Скопировали наши когда-то атомную бомбу, но сейчас-то мы не аутсайдеры и не догоняющие!
----------------------------------------------------------------
2025-06-20 02:23:40 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Автор сайта

Про Qt . Читаю книгу Макса Шлее, «Qt 4.5», стр.44:
(""сообщения, посылаемые посредством сигналов, могут иметь множество аргументов любого типа"")
Стр. 45:
(""в процессе компиляции не производится никаких проверок: имеется ли сигнал или слот в соответствующих классах или нет; совместимы ли сигнал и слот друг с другом и могут ли они быть соединены вместе. Об ошибке можно будет узнать лишь тогда, когда приложение будет запущено."")
Это говорит о том, что строгая статическая типизация,  проверка типов и обнаружение ошибок во время компиляции — это совсем не про Qt.

Стр. 52:
(""При соединении сигналов со слотами, передающими значения, важно следить за совпадением их типов. Например, сигнал, передающий в параметре значение int, не должен соединяться со слотом, принимающим Qstring."")
Вывод: (**Qt – нетипизированная**), ошибки компилятором не ищутся, они обнаруживаются только при запуске.

("""Android" — это Linux."")
(""Каюсь, это профессиональная деформация."")
Тоже каюсь, тоже профессиональная деформация. Просто это мобильники, телевизоры — это как раз домашнее или личное использование. А работают, как и раньше, чаще всего за большим экраном, на обычном компьютере, где стоит Windows.
(""Адрес — это номер байта в адресном пространстве процессора, все значения адреса — законны. Программистам часто надо обозначить "отсутствие" значения, и самый ходовой прием — выбрать одно магическое значение, обычно в начале или в конце диапазона возможных значений, и использовать его в программе как отсутствие значения. 0 — он же NULL, он же nil, применяется очень часто"")
Для машинных кодов все адреса законны. Если Вы программируете на ассемблере, то он тоже Вас никак не ограничивает. Но если язык программирования — высокого уровня, то правильным будет узнавать (и хранить) только адрес существующих в программе объектов. Зачем иметь и хранить адрес того, чего нет в программе? Чтобы ошибиться и обратиться по этому адресу?

А вот для того, чтобы сигнализировать об отсутствии значения, существуют куда более безопасные способы. Чем Вам не нравится монада (++may be++) из языка Haskell? Она же Вам не даст использовать возвращаемое значение, если оно отсутствует! И в Rust есть возможность просигнализировать об отсутствии значения. Правда, к сожалению, проверка носит факультативный, а не обязывающий характер.
(""Одноэсники сильно не рекомендуют переходит на Линукс"")
Да, вполне может быть, что какая-нибудь внешняя обработка завязана на драйвера оборудования, которые для Windows есть, а для Linux их нет.
----------------------------------------------------------------
2025-06-20 14:44:46 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Борис К.

(**Автор сайта**)
(""Зачем иметь и хранить адрес того, чего нет в программе?"")

Зачем дорога, которая не ведет к храму?
Зачем объекты с указателями, которые не ведут к нулю?

(""ошибки компилятором не ищутся"")

Это проблема не Qt, а ее реализации на C++.
Как-то плохо в C++ с обработкой сообщений.
----------------------------------------------------------------
2025-06-20 17:08:13 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

(** Автор сайта **)
("" Для машинных кодов все адреса законны. Если Вы программируете на ассемблере, то он тоже Вас никак не ограничивает. Но если язык программирования — высокого уровня, то правильным будет узнавать (и хранить) только адрес существующих в программе объектов. "")
Деление языков на низкого/высокого уровня зависит от субъективной точки зрения и применяемых критериев.
JAVA апплеты используются в микросхемах gsm-модемов, вполне "низкоуровнево", там можно и ячейку памяти по адресу прочитать/записать. А какой-нибудь драйвер файловой системы для Linux написан на Rust-е, вполне "высокуровнево".
Предлагаю делить языки следующим образом:
(.. нативные - исходные тексты программ используют информационную модель адресного пространства процессора; ..)
(.. не нативные - исходные тексты программ используют свою собственную информационную модель, в рамках которой пишут исходный код; ..)
Для краткости, не нативные языки, вольно обзову (**"фреймворками"**).
(.. Нативные языки - Asm (хотя мнемоники и не совсем язык), C/C++, Pascal, Rust, и т.п.; ..)
(.. Фреймворки - C#, JAVA, JavaScript, Lua, Go, PHP, и т.п. ..)
Это хотя бы сразу объясняет, что (**nil**) в Pascal и C# это НЕ одно и тоже!
 
 
("" Зачем иметь и хранить адрес того, чего нет в программе? Чтобы ошибиться и обратиться по этому адресу? "")
Ошибки идут от того, что адрес не известен на этапе компиляции, а будет вычислен во время выполнения. И решение этому уже давно придумано - грамотно написанные библиотечные надстройки, которые понимают уровень абстракции в нативном языке до требуемого уровня. Например, строки, в процессорах их нет и в языке Си использован массив байт и адрес на первый байт в массиве: (== char *string = "Привет!"; ==) Но такой абстракции, как типизированный указатель (char*), оказалось маловато. Не вопрос, вот вам GLIB и ее GString и набор методов для работы с ними (g_string_new, g_string_append, g_string_ascii_up и т.д., https://docs.gtk.org/glib/struct.String.html ).
Т.е. ошибки идут не от языка, а от того, как им пользуются.

("" А вот для того, чтобы сигнализировать об отсутствии значения, существуют куда более безопасные способы. Чем Вам не нравится монада (++may be++) из языка Haskell? Она же Вам не даст использовать возвращаемое значение, если оно отсутствует! "")
Потому что Haskell - это фреймворк (язык, не нативный для информационной модели адресного пространства процессора). Тоже самое и в JAVA и в C#, т.к. проверки встроены под капотом.

("" И в Rust есть возможность просигнализировать об отсутствии значения. Правда, к сожалению, проверка носит факультативный, а не обязывающий характер. "")
Я так понимаю, речь про Option, ок, читаем что там под капотом, https://doc.rust-lang.ru/stable/rust-by-example/std/option.html
("" Перечисление Option<T> имеет два варианта:
(.. None, указывающий о наличии ошибки или отсутствия значений ..)
(.. Some(value), кортежная структура, обёртка для значения типа T. ..) "")
Переводя на Си-шный язык, создали структуру с двумя полями, в одно поде поместили переменную, а во второе признак наличия или отсутствия значения. Да, язык Си не может похвастать таким синтаксисом, но сделать на Си такое тоже можно, только вручную. Эту ручную работу частично можно возложить на макросы. На С++ нечто подобное можно сделать еще проще. Но в промышленных масштабах этим на (**Си**) ни кто не занимается, т.к. трудозатратно и уже (**решено во фреймворках**), которые не обременены нативной информационной моделью.

Пока всё это варится внутри одного языка, всё стройно и логично, но, как всегда, плюсов без минусов - не бывает. Давайте теперь наладим обмен бинарными данными между разными частями программы, например, программу пишем на Rust, а библиотеку на Си. Как будем кодировать передачу отсутствующего значения, по Rust-овски или магическими значениями или еще как-то? Вопрос риторический, решение известно и находится в области форматов бинарной совместимости (ABI).
----------------------------------------------------------------
2025-06-20 17:09:55 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

Так может уже перестанем пытаться натянуть натив на фреймворки и наоборот?
----------------------------------------------------------------
2025-06-20 17:12:45 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

... которые (--понимают--) уровень абстракции ... ---> ... которые (**поДнимают**) уровень абстракции ...
----------------------------------------------------------------
2025-06-20 17:33:18 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

Хотя, вру, есть один стандарт, который занимается правильнописанием программ на Си в промышленных масштабах - MISRA C. Но, к сожалению, они не озаботились созданием набора правильных и полезных макросов.

(""
Sometimes a violation which is clearly attributable to the adopted code is actually located within the
native code. This can occur, for example, when expanding a macro. Consider the following:
(==
/* API.h */
#define NOT_NULL( a ) ( ( a ) != 0 )

/* Native.c */
#include API.h
void f ( char * p )
{
  if ( NOT_NULL( p ) ) /* Expansion violates MISRA C:2012 Rule 11.9 */
  {
    use( p );
  }
}
==)
The macro NOT_NULL defined within the API header file is itself perfectly compliant, but when the
macro is invoked with a pointer argument, a violation results within the native code. In order for the
code to be compliant, the macro would need to be written as:
(==
#define NOT_NULL( a ) ( ( a ) != NULL )
==)
"")
----------------------------------------------------------------
2025-06-20 19:31:27 | o-russkom-yazyke-v-programmirovanii | Ольга

Здравствуйте! Хочу сослаться на эту статью и не нахожу имя автора. В целом интересует тема влияния родного языка (любого, кроме английского) на изучение программирования с нуля. Если у кого-то есть ссылки на релевантные статьи и какие-либо данные, буду очень благодарна.
----------------------------------------------------------------
2025-06-21 00:51:42 | o-russkom-yazyke-v-programmirovanii | Автор сайта

В конце статьи указано: (**Автор: Д.Ю.Караваев. 15.12.2015**). <a href="https://compiler.su/stati-dmitriya-karavaeva.php">Здесь о нём подробнее</a>. К сожалению, около года назад его не стало. Есть ещё <a href="https://compiler.su/russkij-yazyk-i-programmirovanie.php">статья на аналогичную тему</a> моего авторства, если Вам нужны мои данные, напишите на почту, адрес которой приведён внизу каждой статьи, и я Вам отвечу.
----------------------------------------------------------------
2025-06-21 01:00:30 | o-russkom-yazyke-v-programmirovanii | Петя

Та же статья на хабре, с 4 ссылками в конце
https://habr.com/ru/articles/535988/
https://habr.com/ru/users/Dukarav/comments/
----------------------------------------------------------------
2025-06-21 02:00:58 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Автор сайта

(""Это проблема не Qt, а её реализации на C++"")
Qt реализована только на C++, иных реализаций не существует. Нельзя сказать, что сама Qt хорошая, да вот реализация на C++ плохая.
(""Как-то плохо в C++ с обработкой сообщений."")
C++ близок к «железу», в котором есть 1) данные, 2) манипуляции с данными. Сообщение — это искусственно введённое понятие. Если вернуться к п.п. 1) и 2), то решение задачи упрощается, в том числе организация GUI, что является первоначальной и существенной частью Qt. Нагромождения искусственных сущностей привело к тому, что простой «Hello world» начинает измеряться в мегабайтах, он «весит» на 3 порядка больше, чем на WinAPI.
(""Предлагаю делить языки следующим образом… вольно обзову "фреймворками""")
Нет никакого практического смысла изобретать собственную терминологию или искажать существующую. Высокоуровневые языки отличаются тем, что дают инструменты для работы на высоком уровне абстракций и ограничивают в использовании небезопасных средств. А низкоуровневые не предоставляют абстракций и дают возможность работать нативно без «предохранителей».
(""Ошибки идут от того, что адрес не известен на этапе компиляции, а будет вычислен во время выполнения."")
Это не так. К примеру:
(==int  fn (int a) {
   int value;
   . . .
}==)
Адрес переменной (++value++) во время компиляции неизвестен. Но во время исполнения переменная (++value++) существует. Можно узнать её адрес, который будет корректен, потому что (++value++) существует! То есть это не проблема, что адрес не известен во время компиляции. Проблема в том, что адресу во время исполнения присваивается адрес того, чего в программе нет.
(""решение этому уже давно придумано"")
В Си по-прежнему функция  (++fopen++) возвращает нулевой указатель типа (++FILE *++).
(""Т.е. ошибки идут не от языка, а от того, как им пользуются."")
Ошибки идут именно от языка, в Си функция  (++fopen++) входит в стандартную библиотеку и никто не собирается переписывать её в безопасном стиле.
(""Потому что Haskell — это фреймворк (язык, не нативный для информационной модели адресного пространства процессора)."")
Не изобретайте собственной терминологии для объяснений. То, что делает Haskell для избежания обращения по неправильному адресу, можно повторить в других языках. И эти ограничения будут работать на уровне языка, во время компиляции, а не во время исполнения.
(""Переводя на Си-шный язык, создали структуру с двумя полями"")
Сишная структура — не самое хорошее решение для таких целей.
(""Эту ручную работу частично можно возложить на макросы."")
Макросы нетипизированы. Ослабление типизации не есть хорошо.
(""MISRA C"")
Это костыли. MISRA горбатого не исправит.
(""не озаботились созданием набора правильных и полезных макросов."")
Ещё раз: макросы в Си не типизированы. Поры бы закопать эту стюардессу и вырастить новую.
----------------------------------------------------------------
2025-06-21 09:20:52 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Автор сайта**)
(""Ещё раз: макросы в Си не типизированы."")
И это гораздо нужнее "строгой типизации". Потому что позволяет работать с программой чисто текстовыми средствами.
----------------------------------------------------------------
2025-06-21 16:16:33 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Деньги на WWWетер

(**Макросы в языке Си имеют ряд недостатков**), которые связаны с ошибками, безопасностью и производительностью.
(**Ошибки и безопасность**)
(..Отсутствие проверки типов. Макросы не проверяют типы аргументов, в то время как функции это делают. Это может привести к ошибкам, если использовать макрос не по назначению...)
(..Сложность отладки. Макросы не подлежат отладке, и если они сбоят, единственный способ выявить проблему — перейти к их определению и разбираться там...)
(..Конфликты имён. Макросы не поддерживают пространство имён, поэтому если в одном месте определено несколько макросов с одинаковыми именами, это может вызвать ошибки...)
(**Производительность**)
(..Множественные вычисления. Например, если передать в качестве аргументов для макроса вызовы функций, то они будут вычислены дважды вместо одного. Это может снизить эффективность, особенно для больших структур данных...)
(..Ограничения на оптимизацию. Макросы удаляют информацию, которая нужна компилятору для оптимизации, что уменьшает возможности для оптимизации...)
(**Примеры недостатков**)
(..Ошибка из-за отсутствия скобок. Например, в определении макроса (++MULTIPLY(x) (x * 5)++). Если вызвать (++MULTIPLY(x + 5)++), то в процессе подстановки произойдёт преобразование: (++MULTIPLY(x + 5) -> (x + 5 * 5)++). Ожидаемый результат — 50, но выражение выдаст не 50, а 30...)
(..Проблема с многострочными макросами. Если макрос содержит несколько строк, и макроподстановка происходит внутри блока, например, цикла или условного оператора, это может привести к неожиданным результатам...)
----------------------------------------------------------------
2025-06-21 16:43:12 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Деньги на WWWетер**)
(""Макросы в языке Си имеют ряд недостатков"")
Это не недостатки. Это достоинства.
----------------------------------------------------------------
2025-06-21 18:42:37 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Петя

[q]Это не недостатки. Это достоинства.[/q]
Ты наверно любишь сюрпризы и отладку.
----------------------------------------------------------------
2025-06-21 18:51:22 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Петя**)
(""Ты наверно любишь сюрпризы и отладку"")
Я не люблю забивать микроскопом гвозди.
----------------------------------------------------------------
2025-06-21 19:22:11 | programmirovanie-ischeznet-budet-dressirovka-nejronnyh-setej | Бурановский дедушка

MIT завершил первое масштабное исследование результатов использования AI-помощников.
(..83.3% пользователей ChatGPT не смогли процитировать ничего из сгенерированного AI-помощником минуту назад эссе/дайджеста/краткой выжимки из текста...)
(..Число связей в мозге снизилось на 47%. Стремление к снижению энергозатрат привело феерическому оглуплению, люди вместо получения опыта/знаний получали эффект как от листания ленты новостей...)
(..Эффект когнитивной дистрофии был у 100% участников. Те, кто писали тексты с AI-помощником, стабильно стали хуже это делать после выключения. Они растренировали мозг гораздо быстрее, чем если бы они в это время просто ничего не делали. Реального обучения и систематизацией знаний вообще не произошло...)
----------------------------------------------------------------
2025-06-21 20:16:13 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Петя

[q]Я не люблю забивать микроскопом гвозди.[/q]
Забивать гвоздями микроскоп не лучше.
----------------------------------------------------------------
2025-06-21 21:20:30 | programmirovanie-ischeznet-budet-dressirovka-nejronnyh-setej | Вика

Во славу неолуддизма замолвим слово.

MIT завершил первое масштабное исследование результатов использования экскаваторов:
83.3% пользователей экскаваторов не смогли вырыть яму 20x20x20 лопатой.
Число связей в мозге снизилось на 47%. Стремление к снижению энергозатрат привело феерическому оглуплению, люди вместо получения опыта/знаний от лопаты получали эффект как от игре на приставке.
Эффект когнитивной дистрофии был у 100% участников. Те, кто копали экскаватором, стабильно стали хуже это делать копая лопатой. Они растренировали мозг гораздо быстрее, чем если бы они в это время просто ничего не делали. Реального обучения копанию лопатой и систематизацией знаний вообще не произошло.
----------------------------------------------------------------
2025-06-21 21:33:12 | programmirovanie-ischeznet-budet-dressirovka-nejronnyh-setej | Gudleifr

(**Вика**)
Не смешно.
83.3% пользователей экскаваторов сами свалились в выкопанную яму.
----------------------------------------------------------------
2025-06-21 21:40:33 | programmirovanie-ischeznet-budet-dressirovka-nejronnyh-setej | Вика

[q]Не смешно.
83.3% пользователей экскаваторов сами свалились в выкопанную яму.[/q]
Дутое исследование. Говорящее о том, что раньше человек упахивался выполняя такой объем работы, а теперь нет.
----------------------------------------------------------------
2025-06-21 21:53:53 | programmirovanie-ischeznet-budet-dressirovka-nejronnyh-setej | Gudleifr

(**Вика**)
(""Дутое исследование"")
Скорее, настолько подтвердившее ожидания, что можно было и не проводить.
----------------------------------------------------------------
2025-06-21 22:22:03 | programmirovanie-ischeznet-budet-dressirovka-nejronnyh-setej | Вика

[q]Скорее, настолько подтвердившее ожидания, что можно было и не проводить.[/q]
Исследования субъективны. Можно провести исследование на каком объеме, виде работ мозг упахается.
----------------------------------------------------------------
2025-06-21 23:42:04 | programmirovanie-ischeznet-budet-dressirovka-nejronnyh-setej | Петя

Смеха ради.
https://ru.gloryspade.com/info/the-use-of-the-shovel-78829025.html
[q]Лопата — это не только инструмент, но и мост для связи рабочей группы с массами и служения людям.[/q]
----------------------------------------------------------------
2025-06-22 11:36:24 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

[q]Логика здесь в том, что люди делают что-то по разным причинам. И упираться в одну-единственную не имеет смысла.[/q]
Ежики плакали, кололись, но продолжали жрать кактус.
----------------------------------------------------------------
2025-06-22 11:45:35 | o-prevraschenii-kibernetiki-v-shmanstnvo | Gudleifr

(**Внучок**)
(""Ежики плакали, кололись, но продолжали жрать кактус"")
Именно так. Поэтому были выращены ежики, верующие в правильность кактусов.
----------------------------------------------------------------
2025-06-22 13:14:59 | o-prevraschenii-kibernetiki-v-shmanstnvo | Внучок

Для особо одаренных ежиков вырастили кактусы без иголок.
https://treeseed.ru/products/kaktus-echinopsis-subdenudata-bez-igolok
----------------------------------------------------------------
2025-06-23 00:15:30 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Автор сайта

Писал ранее, что если <a href="makrosy-eto-chistye-funktsii-ispolnyaemye-vo-vremya-kompilyatsii.php">функция чиста, а её аргументы -- константы</a>, то она может быть выполнена на этапе компиляции. Таким образом, это заменяет макросы. Нет необходимости иметь обычный язык и поверх него макросы, можно ограничиться единственным языком. Зачем два?
----------------------------------------------------------------
2025-06-23 07:22:02 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Автор сайта**)
(""Зачем два?"")
Для отделения вычисляющей части программы, от [само]организующей. Для постепенного формирования текста программы в процессе разработки. [Многоуровнего] Описания алгоритмов в свободной форме.

Вот пример двух "Лунолетов" (по М.Пухову), собранных из программных "кубиков".
(++
l1()
{
 INPUT
 NOINPUT((dt < t0), "Слишком малое время реакции")
 THRUST
 dm = fabs(dm);
 TIMERUN
 VELOCITY(v, (a - g))
 DISTANCE(h, v)
 t -= t1 * dt;
 ALARM(((mt -= dm) < 0), mtnegate)
 ALARM((h < HNEG), hnegate)
 STOP((h < HMIN), hzero)
 ALARM((mt == 0), mtzero)
 ALARM(((gma = fabs(a) - gm) > 0), greateg3)
 TIMEOUT
 return 0;
}

l3()
{
 INPUT
 NOINPUT((dt <= 0), "Слишком малое время реакции")
 NOINPUT((mt < dm), "Нет столько топлива")
 NOINPUT((dm > DMMAX), "Слишком большой расход топлива")
 mt -= dm;
 THRUST
 TIMERUN
 VELOCITY(u, (a * sin(al) - v * u / h))
 r2 = r0 / h;
 fi += (u + uu) * dt * 90. / 3.14 / h;
 VELOCITY(v, (a * cos(al) - r2 * r2 * g + u * u / h))
 DISTANCE(h, v)
 ALTITUDE(r0)
 VELOCITY1
 ALARM((h2 < HNEG), hnegate3)
 STOP((h < HMIN), hzero)
 TIMEOUT
 NOTE("Высота", h2)
 NOTE("1-ая косм.скорость", v1);
 return 0;
}
++)
----------------------------------------------------------------
2025-06-23 10:20:56 | es-evm-eto-izmena-trusost-i-obman | Антон Самохин

По любому должна была быть конкуренция разных направлений и подходов. Она, кстати, была при плановой экономике и централизации в СССР. Для примера, в том же авиастроении. Там тоже были разные коллективы и генеральные конструкторы нередко собачились друг с другом, но их никто не объединял в единый Боинг. 
В качестве аргумента автор пишет, что Лебедев и вообще никто не хотел брать на себя ответственность. Но не уточняет, что за единую серию, спускаемое сверху в качестве единстве верного. Никто бы при такой постановке вопроса не взвалил на себя ответственность за закрытие пусть и конкурентов, но все таки коллег в первую очередь
----------------------------------------------------------------
2025-06-23 10:22:35 | es-evm-eto-izmena-trusost-i-obman | Бурановский дедушка

https://rutube.ru/video/539091c054d11587b5e21fc3fe3b5f56/?r=wd
Алексей Недоря рассуждает о переходе на ЕС ЭВМ (с 9:38):
(""Как раз в эти годы Советский Союз шёл абсолютно на равных и, может быть, с каким-то опережением. Да, действительно, компиляторная школа была очень сильная, школа архитектуры ЭВМ была очень сильная. БЭСМ-6, например, намного опередил всех остальных, в это время и троичная (,,Сетунь,,) и так далее. Тогда всё было замечательно.

И очень многие оценивают очень отрицательно переход к ЕС ЭВМ, к воспроизводству американской IBM 360 серии. Я не могу её оценить в действительности, потому что не знаю, чем руководствовались в то время. Но, в общем, в действительности в какое-то время произошёл слом."")
----------------------------------------------------------------
2025-06-23 13:41:21 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

Поддержу (**Gudleifr**) по части макросов. макросы - генерируют или исключают текс программы, т.е. результат раоты макросов - измененный код, а (,,чистые,,) функции только результат. Без макросов - никуда.
----------------------------------------------------------------
2025-06-23 13:59:02 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

Для (**Автор сайта**)
(""Адрес переменной value во время компиляции неизвестен. Но во время исполнения переменная value существует."")
Это не так, ибо (,,переменная,,) - это придуманная абстракция. Во время выполнения программы процессором никаких переменных не существует: есть только адресное пространство, команда процессору и аргументы к этой команде.
(""Нет никакого практического смысла изобретать собственную терминологию или искажать существующую."")
Ничего не искажал и объяснял так, как считал нужным и правильным. И я уверен, что всё объяснил правильно.
----------------------------------------------------------------
2025-06-23 14:00:20 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

И вообще, это всё оффтопик, тема - ReactOS.
----------------------------------------------------------------
2025-06-23 22:05:21 | es-evm-eto-izmena-trusost-i-obman | Автор сайта

(**Антон Самохин**)
(""По любому должна была быть конкуренция разных направлений и подходов. Она, кстати, была"")
Конечно конкуренция была. Но она была проиграна, так как все отечественные архитектуры в тот момент уступали системе команд IBM/360 в техническом совершенстве, в них не было потенциала модернизации, они не годились (,,на вырост,,). Если Вы углубитесь в технические детали, Вы это поймёте.
(""генеральные конструкторы нередко собачились друг с другом, но их никто не объединял в единый Боинг."")
Ну так ЕС ЭВМ не задавила всех. (,,Эльбрусы,,) развивались независимо от ЕС и эту ЕС пережили (производство ЕС в 1990-е прекратили, а (,,Эльбрусов,,) -- нет), БЭСМ-6 выпускали аж до 1987 года. При этом возникло СМ ЭВМ (семейство малых).
(""автор пишет, что Лебедев и вообще никто не хотел брать на себя ответственность. Но не уточняет, что за Единую Серию"")
Так статься как раз про Единую Серию, поэтому и не уточняю. Но эта Единая Серия, согласно мысли руководителей в конце 1960-х, должна увеличить масштабы производства и снизить себестоимость -- и в том, и в другом нуждалась наша экономика.
(""в качестве единственно верной"")
Хорошие альтернативы ЕС ЭВМ не умерли, всех шагать в ногу не заставили. Со временем просто ушли неконкурентноспособные отечественные модели с разрядностью адреса 15 и 16.

(**Бурановский дедушка**), Спасибо, посмотрел. Там Алексей Недоря ещё говорит:
(""И насколько я знаю сейчас практически в России нет разработки языков"")
С одной стороны, странно, что не замечен Котлин. С другой стороны, второй собеседник Е. А. Зуев как раз занимается разработкой языка SLang. Ну и в-третьих, если (,,в России нет разработки языков,,), то почему нет? Где объяснение, почему именно так?

Алексей не застал момент переход к ЕС, к моменту его профессионального становления этот переход был уже завершён, он не имел к нему отношения. Но зато он участвовал проекте «Кронос», который использовал систему команд Lilith швейцарского профессора Н. Вирта. То есть отечественная школа архитектуры ЭВМ была очень сильная, но систему команд Lilith берём у швейцарцев. Архитектурой «Кронос» Алексей, скорее всего, не занимался. А вот к разработке компилятора Модула-2 (язык того же швейцарца Н. Вирта) и операционной системы на этом языке он наверняка причастен. И тут вопрос: а почему опять чужой язык, а не собственный? Получается, что компиляторная школа очень сильная, а вот школы конструирования собственно языков просто нет.

Вот поэтому тему (,,Почему у нас засилье иностранных языков программирования,,) считаю нераскрытой -- при всём богатстве отечественной научной школы. Хотя тема видео была не совсем такая, но интересен ответ именно на этот вопрос.
----------------------------------------------------------------
2025-06-24 00:11:54 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Автор сайта

(""«переменная» — это придуманная абстракция. Во время выполнения программы процессором никаких переменных не существует: Есть только адресное пространство, команда процессору и аргументы к этой команде."")
Вики:
(""Переменная в императивном программировании — именованная, либо адресуемая иным способом абстрактная/виртуальная или физическая память."")
На практике можно вывести на печать как имя переменной, так и её значение:
(==#define	p(arg)	printf("%s = %d", #arg, arg)==)
(""Ничего не искажал и объяснял так, как считал нужным и правильным"")
(""Для краткости, не нативные языки, вольно обзову "фреймворками"."")
По Вашему определению Lisp нужно относить к фреймворкам. Захожу на соответствующую страницу в Вики, а там слово "фреймворк" ни разу не встречается.
(""И вообще, это всё оффтопик, тема — ReactOS."")Согласен.
----------------------------------------------------------------
2025-06-24 17:53:36 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

(**Автор сайта**), прошу прощенья за очередной оффтоп, больше не буду, просто, не мог пройти мимо.
(""На практике можно вывести на печать как имя переменной, так и её значение:
(==#define	p(arg)	printf("%s = %d", #arg, arg)
==)
"")
На практике, вы данным макросом создали два массива с ASCII символами, один использовался как строка форматирования, второй просто вывелся как есть, значение переменной вывелось как значение, прочитанное из памяти. Никаких (,,переменных,,) во время выполнения программы процессором, не существует. Надеюсь, данная простейшая программа и ее ассемблерный листинг расставит всё по местам. Ну, а на нет и суда нет.
https://godbolt.org/z/z7c8YbvdY

(==
#include <stdio.h>

#define	p(arg)	printf("%s = %d", #arg, arg)

int main() {
    int var = 0;
    p(var);

    return var;
}
==)
(==
.LC0:
        .string "var"                  ; Массив байт где-то в ОЗУ, директива ассемблера эквивалентна:
                                       ; DB    76h, 61h, 72h, 00h
                                       ; ("DB" то, наверное, все знают, это Define Bytes)
.LC1:
        .string "%s = %d"              ; Массив байт где-то в ОЗУ, директива ассемблера эквивалентна:
                                       ; DB    25h, 73h, 20h, 3Dh, 20h, 25h, 64h, 00h
main:
        push    rbp
        mov     rbp, rsp
        sub     rsp, 16
        mov     DWORD PTR [rbp-4], 0
        mov     eax, DWORD PTR [rbp-4] ; Чтение значения из памяти, 4 байта в регистр eax. 
                                       ; Адрес вычисляется процессором так: базовый адрес в регистре процессора 
                                       ; rbp (сам адрес принадлежит стеку т.к. взят из регистра rsp), смещение 
                                       ; относительно базового дареса"-4" спланировано компилятором, т.к. именно
                                       ; там компилятор отвел 4 байта для хранения значения переменной.
        mov     edx, eax
        mov     esi, OFFSET FLAT:.LC0  ; Адрес константной строки поместили в регистр процессора esi.
        mov     edi, OFFSET FLAT:.LC1  ; Адрес константной строки форматирования поместили в регистр процессора edi.
        mov     eax, 0
        call    printf
        mov     eax, DWORD PTR [rbp-4] ; Чтение значения переменной в регистр eax, он и будет результатом функции
                                       ; main().
        leave
        ret
==)
----------------------------------------------------------------
2025-06-24 22:57:25 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Автор сайта

Ещё раз определение переменной:
(""Переменная в императивном программировании — именованная, либо адресуемая иным способом абстрактная/виртуальная или физическая память."")
Приведённый мной макрос выдаёт имя переменной и её значение? Да, выдаёт. Значит она (**именованная, либо адресуемая иным способом**). Остальное неважно, как это устроено в машинных кодах. На нашем уровне абстракций (в данном случае Си) мы видим эти абстракции и пользуемся ими. В ассемблере тоже есть переменные, но после трансляции в машинном уже не видны их имена. Так же не видны в машинном коде имена классов, типов, структур, объединений. В машинном коде не видно шаблонов и монад. Просто в машинном коде нет того уровня абстракций, которые присущи языкам высокого уровня. Если в машинном коде не существует каких-то абстракций, это не повод утверждать, что их не существует на более высоком уровне.

Вот мы читаем Пушкина, а там любви и страданиях, о чести и добродетели. А переведём это на молекулы, из которых состоят тома его произведений -- и не видно в этих молекулах ни чувств Татьяны, ни Онегина.
----------------------------------------------------------------
2025-06-29 19:38:04 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Автор сайта**)
(""Вот мы читаем Пушкина, а там любви и страданиях, о чести и добродетели. А переведём это на молекулы, из которых состоят тома его произведений — и не видно в этих молекулах ни чувств Татьяны, ни Онегина"")
Это, скорее, пример обратного: любовь и страдания - это маш.код. А ЯВУ - это грамматика и рифма стихов романа.
----------------------------------------------------------------
2025-07-02 16:23:38 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

Еще один звоночек для ReactOS.
https://3dnews.ru/1125293/microsoft-postavila-tochku-v-razgovorah-o-potere-400-mln-polzovateley-windows
(""Сегодня Windows 11 является второй по популярности (__десктопной__) ОС в мире после Windows 10. Поддержка последней кончается в этом году, и ожидается, что Windows 11 станет новым лидером — возможно, уже в будущем году. Пока же история последних лет указывает, что (__Windows теряет долю рынка__). 400 млн пользователей она, возможно, не лишилась, но с 2015 года платформа лишилась около 15 % рынка, гласят данные StatCounter. Подобные сервисы дают лишь приблизительное представление о происходящем на рынке, но едва ли можно разглядеть признаки, что Windows вернёт себе долю рынка, какой она была десять лет назад. Подводя итог, хорошая новость состоит в том, что (__тяжёлых проблем Windows не испытывает, но и популярности, как когда-то, тоже не набирает__)."")
----------------------------------------------------------------
2025-07-02 22:38:43 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Невежливый лось

Программисты жалуются, что система сборки от Microsoft недоступна:
https://www.programmersforum.rocks/t/c-vs-perestali-dobavlyatsya-biblioteki-iz-nuget-org/5862
а мы им говорили, лучше бы это были Java с Linux, чем .Net с Microsoft и Github
----------------------------------------------------------------
2025-07-02 23:12:31 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Gudleifr

(**Невежливый лось**)
(""Программисты жалуются, что система сборки от Microsoft недоступна"")
Так это недоработка импортозамещения или его победа?
----------------------------------------------------------------
2025-07-02 23:36:44 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Автор сайта

(**veector **)
(""за последние годы Windows всё-таки не потеряла 400 млн пользователей. Но это также значит, что и новых пользователей платформа не приобрела: аудитория Windows составляла 1,4 млрд ещё в 2022 году... тяжёлых проблем Windows не испытывает, но и популярности, как когда-то, тоже не набирает."")
То есть потери в относительных цифрах, а в абсолютных -- стабильность на одном уровне.
----------------------------------------------------------------
2025-07-03 13:58:19 | vse-yazyki-ekvivalentny-no-nekotorye-iz-nikh-ekvivalentnee-drygikh | Бурановский дедушка

https://www.cnews.ru/news/top/2025-07-02_kitaj_pokusilsya_na_lyubimyj:(""Huawei собирается открыть исходники своего языка программирования Cangjie, который является альтернативой Swift и Java. Инициатива китайской компании отражает её усилия по снижению зависимости от зарубежного ПО и других технологий. Язык предназначен для написания программ под HarmonyOS Next, Android и iOS. HarmonyOS, собственная ОС Huawei, за свою 6-летнюю историю успехов за пределами Китая не добилась. Cangjie разрабатывался 5 лет, в июне 2024 г. состоялся его дебют, а теперь -- открытие исходников. Будет любопытно, добьётся ли он успехов за пределами Китая."")


P.S. Дело было вечером, делать было нечего, захотелось узнать, сколько сообщений на форуме (,,План А,,). Оказалось, что 11 541. Вопрос: а сколько сообщений на этом сайте?
----------------------------------------------------------------
2025-07-03 17:13:30 | vse-yazyki-ekvivalentny-no-nekotorye-iz-nikh-ekvivalentnee-drygikh | Невежливый Лось

Какая разница? Вы предлагали инициативу по "координации информационного противодействия" на различных форумах, но так и не сделали под неё сайт. А за прошедшие годы вы бы могли переплюнуть по объёму оба этих сайта.
----------------------------------------------------------------
2025-07-03 17:20:16 | vse-yazyki-ekvivalentny-no-nekotorye-iz-nikh-ekvivalentnee-drygikh | Невежливый Лось

Я бы на вашем месте признал, что идея была тупая. Именно поэтому вы не стали её реализовывать. Но умные форумчане (**сразу**) вам сказали, что идея тупая, для тупых людей-ботов. Ваша гордыня так и осталась непримирима с тех пор. Кроме того и идея была не ваша, вы её (--своровали--) сбенчмарчили у Кургиняна С.Э. или его последователей. Вы предложили не ту идею не тем людям, и сами её не затащили. Интересно, что произойдёт быстрее - вы свои ошибки признаете, или умрёте...
----------------------------------------------------------------
2025-07-03 20:41:00 | vse-yazyki-ekvivalentny-no-nekotorye-iz-nikh-ekvivalentnee-drygikh | Бабушка Лавочкина

[q]Я бы на вашем месте признал, что идея была тупая.[/q]
Так в итоге, какая идея победила?
----------------------------------------------------------------
2025-07-03 23:01:56 | vse-yazyki-ekvivalentny-no-nekotorye-iz-nikh-ekvivalentnee-drygikh | Автор сайта

(""Huawei собирается открыть исходники своего языка программирования Cangjie"")
К этому могу добавить не широко известные сведения. В своё время на Huawei работал Алексей Недоря. Как понимаю, над этим языком. И на вопросы (,,что и как,,) отвечал, что он дал подписку о неразглашении. Теперь, наверное, можно ожидать от него подробностей. На данный момент Huawei до сих пор ищет разработчиков с навыками компиляторостроения в офис в СПБ. Это место выбрано не случайно, потому что именно там большая концентрация разработчиков языка Котлин. Котлин -- это остров неподалёку от Петербурга, на котором находится город Кронштадт. Котлин, как и Cangjie, тоже позиционинируется как замена Java. Только Котлин уже достиг успеха, в отличие от Cangjie. Очевидно, выбор Huawei города и команды как раз обусловлен этим успехом.
(""сколько сообщений на этом сайте?"")
Самому любопытно стало, пришлось со скриптом повозиться. 157 385 сообщений! Очуметь, когда успели столько написать?
(""идея была тупая"")
А в чём её суть? Так много о ней пишите. Вы что-то о ней знаете?
----------------------------------------------------------------
2025-07-03 23:08:40 | pochemu-obrechyon-yazyk-fort | Автор сайта

Когда-то Форт, наряду с Лиспом и Прологом, позиционировался как один из языков для работы с ИИ. Наконец-таки нашёл подтверждение этому, да не абы кого, а от самого Чарльза Мура, автора Форта:
(""Я доволен его [Форта] успехом, особенно в ультраконсервативной области искусственного интеллекта [написано в 1991 году]."")
Отсюда: https://habr.com/ru/articles/500042/

И ещё. Есть мнение, что Мур "позаимствовал" идеи Форта у Дейкстры. Но вот что об этом говорил сам Мур. https://pikabu.ru/story/triangulyarnaya_intrizhka_deykstra_mur_i_cheyto_fort_7110395:
(""I learned of Dijkstra’s paper today, when I read your email. I understand your interest, for he describes something very like Forth.

His use of ‘word’ and the postfix stack are striking. However, his E operator is clearly unnecessary. I think if he had actually used the language he would have realized that.

This is evidence that the notion of Forth was ‘in the air’ in the 1960s. I have heard that others devised stack languages. But that window closed, and Forth was lucky to survive.

Charles H. Moore, 21.03.2019

Я узнал о статье Дейкстры сегодня, когда прочитал ваше письмо. Я понимаю ваш интерес, потому что он описывает что-то очень похожее на Форт.

Его использование «слова» и постфиксного стека поразительно. Однако его оператор E явно не нужен. Я думаю, если бы он действительно использовал язык, он бы это понял.

Это доказательство того, что понятие Форт «носилось в воздухе» в 1960-х годах. Я слышал, что другие придумывали языки стека. Но это окно закрылось, и Форту повезло выжить.

Чарльз Х. Мур, 21.03.2019"")
Скорее всего, идеи действительно витали в воздухе и разным людям могли приходить в голову одни и те же идеи. Мур, в отличие от Дейкстры, воплотил свой язык в готовое изделие. Работающее всегда ценится больше, чем просто теоретическая модель.
----------------------------------------------------------------
2025-07-04 07:26:01 | vse-yazyki-ekvivalentny-no-nekotorye-iz-nikh-ekvivalentnee-drygikh | Gudleifr

Что за судороги в закрытой FORTH-теме?
----------------------------------------------------------------
2025-07-04 14:04:34 | vse-yazyki-ekvivalentny-no-nekotorye-iz-nikh-ekvivalentnee-drygikh | Клихальт

[b]Gudleifr[/b], [q]Что за судороги в закрытой FORTH-теме?[/q]
Коль все языки эквивалентны, но некоторые из них эквивалентнее других, то и люди все равны, но некоторые ровнее. ;)
----------------------------------------------------------------
2025-07-04 16:53:55 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | veector

(**Автор сайта**)
(""То есть потери в относительных цифрах, а в абсолютных — стабильность на одном уровне."")
В падение Интел тоже мало кто верил, но, курочка по зерншыку клюет...
https://3dnews.ru/1125436/xbox-surface-i-windows-prevratilis-v-otstoy-i-eto-chast-plana-samoy-microsoft
----------------------------------------------------------------
2025-07-07 18:52:15 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Бурановский дедушка

Билл Гейтс считает, что Intel не сможет восстановить свой бизнес: https://dzen.ru/a/Z6IDjw0SCwzpBKbA

Наверное, ему есть от чего грустить. Если Intel накрывается медным тазом, то накрывается и платформа Wintel. Так что трудные времена ожидают и Microsoft. Если Apple собаку съела на переходах с Motorola на PowerPC, с PowerPC на Intel, с Intel на ARM, у Microsoft такого опыта нет.
----------------------------------------------------------------
2025-07-07 18:55:28 | vse-yazyki-ekvivalentny-no-nekotorye-iz-nikh-ekvivalentnee-drygikh | Бурановский дедушка

(""Вы предлагали инициативу по "координации информационного противодействия" на различных форумах"")
Вы имеете в виду вот это моё сообщение? http://plana.mybb.ru/search.php?action=show_user_posts&user_id=32

Во-первых, не на (,,различных форумах,,), а на Хабре. Во-вторых, там нет слов о (,,координации информационного противодействия,,).
(""так и не сделали под неё сайт"")
Покажите, где это было обещано.
(""за прошедшие годы вы бы могли переплюнуть по объёму оба этих сайта"")
Переплюнуть-то можно, только чем? Чем-то шибко новым удивить не могу, а мусора в сети и без меня много. Не буду показывать пальцем, где этот мусор можно найти.
(""Я бы на вашем месте признал, что идея была тупая"")
Каждый мерит чужую тупость в меру своей. Была поднята тема о атмосфере на Хабре. Но со временем она оздоровилась. Украинская публика оттуда отвалилась. Релоканты тоже там, похоже, реже стали бывать. Если раньше темы импортозамещения там чуть ли не на смех поднимались, то теперь вполне сочувственно это обсуждается. Время потихоньку расставляет всё по своим местам. 

Помню, когда в 2014 после Крыма наложили первые санкции, то кто-то на Хабре высказался, что как-то надо бороться с этими санкциями. На него накинулись: зачем бороться с ними, лучше устранить причины, которые их вызвали. Сейчас картина другая.
(""Ваша гордыня так и осталась непримирима с тех пор"")
У Вас есть рентген, который высвечивает всю мою подноготную, все мои помыслы? Вы знаете размер моей гордыни?
(""идея была не ваша, вы её своровали сбенчмарчили у Кургиняна"")
Трудно украсть то, чего не видел.
(""что произойдёт быстрее — вы свои ошибки признаете, или умрёте"")
Не дождётесь!
----------------------------------------------------------------
2025-07-08 22:47:21 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Клихальт

[b]Бурановский дедушка[/b], [q]Если Apple собаку съела на переходах с Motorola на PowerPC, с PowerPC на Intel, с Intel на ARM, у Microsoft такого опыта нет.[/q]
Ой ли нет такого опыта -- офис выходил под x86 и под MAC, Windows NT выходила под x86, x86-64, MIPS, DEC Alpha, PowerPC, Itanium.
----------------------------------------------------------------
2025-07-10 13:31:24 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Бурановский дедушка

Чтобы у Microsoft заработал офис под другой платформой, достаточно, грубо говоря, откомпилировать офис под другую платформу. А вот заставь весь сторонний софт, который есть только в двоичных кодах, на другом процессоре -- вот какого опыта не было у Microsoft и был у Apple. Apple просто эмулировала на новом процессоре коды старого процессора. У Apple задача была проще в том, у них аппаратная платформа строго контролировалась и имела достаточно ограниченное число конфигураций. А вот у Wintel число конфигураций стремится к бесконечности. В этом большая разница между Microsoft и Apple, у Microsoft задачи на порядки сложнее.
----------------------------------------------------------------
2025-07-10 13:31:50 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Бурановский дедушка

Чтобы у Microsoft заработал офис под другой платформой, достаточно, грубо говоря, откомпилировать офис под другую платформу. А вот заставь весь сторонний софт, который есть только в двоичных кодах, на другом процессоре -- вот какого опыта не было у Microsoft и был у Apple. Apple просто эмулировала на новом процессоре коды старого процессора. У Apple задача была проще в том, у них аппаратная платформа строго контролировалась и имела достаточно ограниченное число конфигураций. А вот у Wintel число конфигураций стремится к бесконечности. В этом большая разница между Microsoft и Apple, у Microsoft задачи на порядки сложнее.
----------------------------------------------------------------
2025-07-10 13:40:26 | russkoj-operatsionnoj-sistemoj-dolzhna-stat-reactos | Холиварщик Яблоко против Мелкософт

[q]на другом процессоре — вот какого опыта не было у Microsoft [/q]
Есть Common Intermediate Language, промежуточный язык для переноса приложений.
----------------------------------------------------------------
2025-07-11 03:44:01 | vse-yazyki-ekvivalentny-no-nekotorye-iz-nikh-ekvivalentnee-drygikh | Невежливый лось

Поздно, СМИ уже растиражировали первую новость. Лица, принимающие решения, уже сделали выводы о том, что сайт compiler.su в десятки раз популярнее остальных, а на остальные не надо и смотреть. Это был грамотный PR-ход, а опровержение - кто его будет читать?
